{"version":3,"sources":["utils/socrata.js","contexts/OpenDataContext.jsx","hooks/datasets.js","contexts/CollectionsContext.jsx","hooks/collections.js","components/RawHTML/RawHTML.jsx","utils/formatters.jsx","components/CollectionTab/CollectionTab.jsx","components/SideNav/SideNav.jsx","components/ViewOnOpenPortal/ViewOnOpenPortal.jsx","components/Dataset/Dataset.jsx","components/SortMenu/SortMenu.jsx","components/Loading/DatasetLoading/DatasetLoading.jsx","hooks/pagination.jsx","components/Loading/FilterLoading/FilterLoading.jsx","components/MultiSelector/MultiSelector.jsx","contexts/SearchContext.jsx","layout/HomePage/HomePage.jsx","hooks/search.js","components/JoinColumn/JoinColumn.jsx","components/ColumnSuggestions/ColumnSuggestions.jsx","components/ColumnMatchTable/ColumnMatchTable.jsx","components/Breadcrumb/Breadcrumb.jsx","layout/DatasetPage/DatasetPage.jsx","hooks/useClipboard.js","layout/CollectionPage/CollectionPage.jsx","layout/AboutPage/AboutPage.jsx","components/CreateCollectionModal/CreateCollectionModal.jsx","hooks/useSeenWelcome.js","components/WelcomeModal/WelcomeModal.jsx","components/GHPagesRedirect/GHPagesRedirect.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["SOCRATA_NY_OPENDATA_ENDPOINT","getMaifestPage","pageNo","a","async","limit","fetch","then","r","json","matachableColumnsForDataset","dataset","Set","resource","columns_name","map","s","toLocaleLowerCase","columns_field_name","hasJoinableMatch","columns","candidate","candidateCols","intersection","filter","x","has","Array","from","getUniqueEntries","column","id","replace","errorCode","error","console","warn","entry","Object","values","db","Dexie","version","stores","SocrataCache","AppContext","createContext","initalState","datasets","tagList","categories","departments","stateLoaded","reducer","state","action","type","payload","useStateValue","useContext","useStateLoaded","useJoinableDatasets","useMemo","cols","joinableColumns","match","length","findJoinable","useGetDatasetsByIds","ids","d","includes","CollectionsContext","collections","name","activeCollectionID","CollectionCache","find","c","uuidv4","col","datasetID","useCollectionsValue","useCurrentCollection","dispatch","pendingCollection","clearCollection","collectionID","addToCollection","removeFromCollection","setName","createCollectionFromPending","RawHTML","html","className","cleanedHTML","DOMPurify","sanitize","dangerouslySetInnerHTML","__html","hilightMatches","text","query","regex","RegExp","constructCollectionLink","collection","join","CollectionTab","visible","useCollections","currentCollectionDatasets","useState","newCollectionName","setNewCollectionName","tab","setTab","showCreate","setShowCreate","getAgency","classification","domain_metadata","key","value","placeholder","onChange","e","target","onClick","to","SideNav","location","window","href","log","showCollectionTab","setShowCollectionTab","alt","activeClassName","exact","size","icon","faEye","style","position","faColumns","faQuestionCircle","permalink","rel","faExternalLinkAlt","Dataset","date","onAddToCollection","onRemoveFromCollection","inCollection","viewInOpenPortal","similarity","formattedName","formattedDescription","description","attribution","toPrecision","ViewOnOpenPortal","updatedAt","Date","toLocaleDateString","year","month","day","SortMenu","options","selected","direction","onSelected","onDirection","expanded","setExpanded","o","option","faSortUp","faSortDown","_","i","usePagination","data","perPage","pages","Math","ceil","currentPageNo","setCurrentPageNo","useEffect","pageButtons","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","onPageChange","page","containerClassName","subContainerClassName","previousClassName","nextClassName","pageClassName","content","slice","disabled","MultiSelector","items","title","collapse","onCollapse","collapsed","setCollapsed","collapsedActual","loaded","searchTerm","setSearchTerm","itemNames","keys","useFuse","item","shouldSort","findAllMatches","caseSensitive","filteredItems","result","search","usePagenation","sort","b","pagedItems","newSelection","toggleItem","checked","SearchContext","term","tags","sortVariable","sortOrder","collapseFilters","collapsedFilterList","t","category","useSearchState","HomePage","useCategories","useTags","useDepartments","useColumns","newTags","useSelectedTags","selectedTags","setSelectedTags","newColumns","useSelectedColumns","selectedColumns","setSelectedColumns","newCategories","useSelectedCategories","selectedCategories","setSelectedCategories","newDepartments","useSelectedDepartments","selectedDepartments","setSelectedDepartments","newTerm","useSearchTerm","newSortVariable","useSortVariable","sortBy","setSortBy","newSortOrder","useSortOrder","sortDirection","setSortDirection","includeMatches","tokenize","searchedDatasets","resultDatasets","matches","domain_tags","tag","cat","useDatasets","useFilterBarState","collapseFilterBar","setCollapseFilterBar","useFilterUIStates","filterStates","setFilterState","asc","valA","valB","createdAt","download_count","page_views","page_views_total","useSortDatsetsBy","pagedDatasets","onKeyDown","faAngleDown","faAngleLeft","faSearch","debounceTimeout","ColumnJoin","rightDataset","joinCol","parentUniques","uniqueIds","uniqueEntries","setUniqueEntries","res","distinct","useUniqueColumnEntries","jointlyUnique","keycode","role","tabIndex","faAngleRight","faFile","uid","faTable","ColumnSuggestions","joins","columnUniques","setColumnsUniques","dataTypeForCol","columns_datatype","indexOf","pagedJoins","onKeydown","keyCode","leftDataset","ColumnMatchTable","joinColumns","suggestionsForColumn","useCallback","candidates","toLowerCase","sortedColumns","Breadcrumb","currentPage","formatDate","moment","format","DatasetPage","params","useDataset","activeTab","setActiveTab","pageViews","domainMetadata","mostSimilarDatasets","similarityMetrics","setSimilarityMetrics","process","useGetSimilarDatasets","suggestion","updatedAutomation","updateFrequency","informationAgency","src","owner","display_name","domain_category","metadata_updated_at","copyToClipboard","navigator","clipboard","writeText","document","queryCommandSupported","textarea","createElement","opacity","textContent","body","appendChild","select","execCommand","removeChild","CollectionPage","datasetIDs","url","split","isCopied","setIsCopied","useClipboard","setCopied","FacebookShareButton","FacebookIcon","TwitterShareButton","TwitterIcon","EmailShareButton","EmailIcon","AboutPage","CreateCollectionModal","useSeenWelcome","seenWelcome","setSeenWelcome","localStorage","getItem","setItem","WelcomeModal","closeModal","onBackdropClick","WelcomeRedirect","GHPagesRedirect","redirect","setRedirect","sessionStorage","App","basename","path","component","parentPath","Boolean","hostname","ReactDOM","render","children","useReducer","get","cachedState","JSON","parse","cache_loaded","firstPage","totalEntries","resultSetSize","Promise","all","resp","results","list","reduce","datasetPage","allDatasets","getManifest","manifest","forEach","getTagList","cats","totals","getCategories","md","department","getDepartments","columnList","getColumns","put","stringify","Provider","cacheLoaded","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b56142f.chunk.js","sourcesContent":["const SOCRATA_NY_OPENDATA_ENDPOINT =\n  'https://api.us.socrata.com/api/catalog/v1?domains=data.cityofnewyork.us&search_context=data.cityofnewyork.us';\n\nasync function getMaifestPage(pageNo, limit = 100) {\n  return fetch(\n    `${SOCRATA_NY_OPENDATA_ENDPOINT}&offset=${pageNo * limit}&limit=${limit}`,\n  ).then((r) => r.json());\n}\n\nfunction matachableColumnsForDataset(dataset) {\n  return new Set([\n    ...dataset.resource.columns_name.map((s) => s.toLocaleLowerCase()),\n    ...dataset.resource.columns_field_name.map((s) => s.toLocaleLowerCase()),\n  ]);\n}\n\nfunction hasJoinableMatch(columns, candidate) {\n  const candidateCols = matachableColumnsForDataset(candidate);\n  const intersection = new Set(\n    [...columns].filter(\n      (x) => candidateCols.has(x), // && ALLOWED_JOIN_COLUMNS.includes(x),\n    ),\n  );\n  return Array.from(intersection);\n}\n\nexport function findJoinable(dataset, datasets) {\n  const cols = matachableColumnsForDataset(dataset);\n  const matches = datasets\n    .map((candidate) => ({\n      dataset: candidate,\n      joinableColumns: hasJoinableMatch(cols, candidate),\n    }))\n    .filter(\n      (match) =>\n        match.joinableColumns.length > 0 &&\n        match.dataset.resource.id !== dataset.resource.id,\n    );\n  return matches;\n}\n\n/**\n * Get the full manifest from Socrata. This should be cached locally and updated in a smart way.\n *\n * @return {Promise(Array)} a promise that resolves to an array of the datasets\n */\nexport async function getManifest() {\n  const firstPage = await getMaifestPage(0, 1);\n  const totalEntries = firstPage.resultSetSize;\n  const pages = Math.ceil(totalEntries / 100);\n  return Promise.all(\n    [...Array(pages)].map((_, i) =>\n      getMaifestPage(i).then((resp) => resp.results),\n    ),\n  ).then((list) => {\n    return list.reduce(\n      (datasetPage, allDatasets) => [...allDatasets, ...datasetPage],\n      [],\n    );\n  });\n}\n\n/**\n * Extract from the datasets array, a unique set of columns.\n * @return {Array<string>} an array of unique categories\n */\nexport function getColumns(datasets) {\n  const columnList = {};\n\n  datasets.forEach((dataset) => {\n    if (dataset.resource.columns_name) {\n      dataset.resource.columns_name.forEach((col) => {\n        if (col in columnList) {\n          columnList[col] += 1;\n        } else {\n          columnList[col] = 1;\n        }\n      });\n    }\n  });\n  return columnList;\n}\n\n/**\n * Extract from the datasets array, a unique set of categories.\n * @return {Array<string>} an array of unique categories\n */\nexport function getCategories(datasets) {\n  const categories = datasets.reduce(\n    (cats, dataset) => [\n      ...cats,\n      ...(dataset.classification.categories\n        ? dataset.classification.categories\n        : []),\n    ],\n    [],\n  );\n\n  const counts = categories.reduce(\n    (totals, cat) =>\n      cat in totals\n        ? { ...totals, [cat]: totals[cat] + 1 }\n        : { ...totals, [cat]: 1 },\n    {},\n  );\n  return counts;\n}\n\n/**\n * Extract from the datasets array, a unique set of categories.\n * @return {Array<string>} an array of unique categories\n */\nexport function getDepartments(datasets) {\n  const departments = datasets\n    .map((dataset) =>\n      dataset.classification.domain_metadata.find(\n        (md) => md.key === 'Dataset-Information_Agency',\n      ),\n    )\n    .filter((d) => d)\n    .map((d) => d.value);\n  const counts = departments.reduce(\n    (totals, department) =>\n      department in totals\n        ? { ...totals, [department]: totals[department] + 1 }\n        : { ...totals, [department]: 1 },\n    {},\n  );\n  return counts;\n}\n/**\n * Extract from the datasets array, a unique set of tags.\n * @return {Array<string>} an array of unique tags\n */\nexport function getTagList(datasets) {\n  const tagList = {};\n\n  datasets.forEach((dataset) => {\n    if (dataset.classification.domain_tags) {\n      dataset.classification.domain_tags.forEach((tag) => {\n        if (tag in tagList) {\n          tagList[tag] += 1;\n        } else {\n          tagList[tag] = 1;\n        }\n      });\n    }\n  });\n  return tagList;\n}\n\nexport function getUniqueEntriesCount(dataset, column) {\n  return fetch(\n    `https://data.cityofnewyork.us/resource/${\n      dataset.resource.id\n    }.json?$select=distinct|> select count(*) ${column.replace(/ /g, '_')}`,\n  ).then((r) => r.json());\n}\nexport function getUniqueEntries(dataset, column) {\n  return fetch(\n    `https://data.cityofnewyork.us/resource/${\n      dataset.resource.id\n    }.json?$select=distinct ${column.replace(/ /g, '_')}`,\n  )\n    .then((r) => r.json())\n    .then((r) => {\n      if (r.errorCode || r.error) {\n        console.warn(\n          'Failed to load unique entries for dataset ',\n          dataset,\n          ' column ',\n          column,\n        );\n        return [];\n      }\n      return r.map((entry) => Object.values(entry)[0]);\n    });\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nimport Dexie from 'dexie';\nimport {\n  getManifest,\n  getCategories,\n  getColumns,\n  getTagList,\n  getDepartments,\n} from '../utils/socrata';\n\nconst db = new Dexie('SocrataCache');\ndb.version(1).stores({\n  SocrataCache: 'id',\n});\n\nexport const AppContext = createContext();\n\nconst initalState = {\n  datasets: [],\n  tagList: [],\n  categories: [],\n  departments: [],\n  columns: [],\n  stateLoaded: false,\n};\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'UPDATE_OPEN_DATASET_MANIFEST':\n      return { ...state, datasets: payload };\n    case 'UPDATE_TAGS':\n      return { ...state, tagList: payload };\n    case 'UPDATE_CATEGORIES':\n      return { ...state, categories: payload };\n    case 'UPDATE_COLUMNS':\n      return { ...state, columns: payload };\n    case 'UPDATE_DEPARTMENTS':\n      return { ...state, departments: payload };\n    case 'HYDRATE_STATE':\n      return { ...state, ...payload };\n    case 'SET_LOADED':\n      return { ...state, stateLoaded: true };\n    default:\n      return state;\n  }\n};\n\nexport const StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n\n  // Try to get the state locally from indexed db... if we can't find it there, request it from the\n  // socrata API\n\n  useEffect(() => {\n    db.SocrataCache.get(1).then((result) => {\n      if (result) {\n        const cachedState = JSON.parse(result.data);\n        dispatch({\n          type: 'HYDRATE_STATE',\n          payload: { ...initalState, ...cachedState, cache_loaded: true },\n        });\n        // Set state as loaded to indicate that data is ready to use\n        dispatch({\n          type: 'SET_LOADED',\n        });\n      } else {\n        getManifest().then((manifest) => {\n          const tagList = getTagList(manifest);\n          const categories = getCategories(manifest);\n          const departments = getDepartments(manifest);\n          const columns = getColumns(manifest);\n          dispatch({\n            type: 'UPDATE_OPEN_DATASET_MANIFEST',\n            payload: manifest,\n          });\n          dispatch({\n            type: 'UPDATE_TAGS',\n            payload: tagList,\n          });\n          dispatch({\n            type: 'UPDATE_CATEGORIES',\n            payload: categories,\n          });\n          dispatch({\n            type: 'UPDATE_DEPARTMENTS',\n            payload: departments,\n          });\n          dispatch({\n            type: 'UPDATE_COLUMNS',\n            payload: columns,\n          });\n          dispatch({\n            type: 'SET_LOADED',\n          });\n        });\n      }\n    });\n  }, []);\n\n  // If our datasets change, update the cahced version\n  const {\n    datasets,\n    tagList,\n    columns,\n    categories,\n    departments,\n    stateLoaded,\n  } = state;\n  useEffect(() => {\n    if (stateLoaded) {\n      console.log('writing cache');\n      db.SocrataCache.put({\n        data: JSON.stringify({\n          datasets,\n          tagList,\n          categories,\n          departments,\n          columns,\n        }),\n        id: 1,\n      });\n    }\n  }, [datasets, tagList, categories, columns, departments, stateLoaded]);\n\n  return (\n    <AppContext.Provider value={[state, dispatch]}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useStateValue = () => useContext(AppContext);\n","import { useMemo, useState, useEffect } from 'react';\nimport useFuse from 'react-use-fuse';\nimport { useStateValue } from '../contexts/OpenDataContext';\nimport { findJoinable, getUniqueEntries } from '../utils/socrata';\n\nexport function useStateLoaded() {\n  const [{ stateLoaded }] = useStateValue();\n  return stateLoaded;\n}\n\nexport function useTags() {\n  const [{ tagList }] = useStateValue();\n  return tagList;\n}\n\nexport function useCategories() {\n  const [{ categories }] = useStateValue();\n  return categories;\n}\n\nexport function useDepartments() {\n  const [{ departments }] = useStateValue();\n  return departments;\n}\n\nexport function useColumns() {\n  const [{ columns }] = useStateValue();\n  return columns;\n}\n\nexport function useJoinableDatasets(dataset) {\n  const [{ datasets }] = useStateValue();\n  return useMemo(() => (dataset ? findJoinable(dataset, datasets) : []), [\n    dataset,\n    datasets,\n  ]);\n}\n\nexport function useGetSimilarDatasets(datasetID) {\n  const [similarityMetrics, setSimilarityMetrics] = useState({});\n  const [{ datasets }] = useStateValue();\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/similarity_metrics.json`)\n      .then((r) => r.json())\n      .then((r) => setSimilarityMetrics(r));\n  }, []);\n\n  console.log('datasets ', datasets, similarityMetrics);\n\n  const similarDatasets = useMemo(\n    () =>\n      similarityMetrics[datasetID] && datasets && datasets.length > 0\n        ? similarityMetrics[datasetID].map((match) => ({\n            similarity: match.similarity,\n            dataset: datasets.find((d) => d.resource.id === match.dataset),\n          }))\n        : [],\n\n    [similarityMetrics, datasetID, datasets],\n  );\n  return similarDatasets;\n}\n\nexport function useDataset(datasetID) {\n  const [{ datasets }] = useStateValue();\n  return datasets.find((d) => d.resource.id === datasetID);\n}\n\nexport function useGetDatasetsByIds(ids) {\n  const [{ datasets }] = useStateValue();\n  return useMemo(() => datasets.filter((d) => ids.includes(d.resource.id)), [\n    datasets,\n    ids,\n  ]);\n}\n\nexport function useDatasets({ tags, term, categories, columns, departments }) {\n  const [{ datasets }] = useStateValue();\n\n  console.log('datasets ', datasets);\n  const { result: searchedDatasets, search } = useFuse({\n    data: datasets,\n    options: {\n      shouldSort: true,\n      findAllMatches: true,\n      includeMatches: true,\n      tokenize: true,\n      keys: ['resource.name', 'resource.description'],\n      caseSensitive: false,\n    },\n  });\n\n  useEffect(() => {\n    search(term.toLocaleLowerCase());\n  }, [search, term]);\n\n  return useMemo(() => {\n    if (searchedDatasets) {\n      let resultDatasets =\n        searchedDatasets[0] && searchedDatasets[0].item\n          ? searchedDatasets.map((match) => match.item)\n          : [...searchedDatasets];\n\n      const matches =\n        searchedDatasets && searchedDatasets[0] && searchedDatasets[0].item\n          ? searchedDatasets.map((d) => ({\n              id: d.item.resource.id,\n              matches: d.matches,\n            }))\n          : [];\n\n      if (tags && tags.length > 0) {\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.classification.domain_tags.filter((tag) =>\n              tags.includes(tag),\n            ).length > 0,\n        );\n      }\n\n      if (categories && categories.length > 0) {\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.classification.categories.filter((cat) =>\n              categories.includes(cat),\n            ).length > 0,\n        );\n      }\n\n      if (columns && columns.length > 0) {\n        console.log('filtering with columns ', columns);\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.resource.columns_name &&\n            dataset.resource.columns_name.filter((col) => columns.includes(col))\n              .length > 0,\n        );\n      }\n\n      if (departments && departments.length > 0) {\n        resultDatasets = resultDatasets.filter((dataset) =>\n          departments.includes(\n            dataset.classification.domain_metadata.find(\n              (d) => d.key === 'Dataset-Information_Agency',\n            )?.value,\n          ),\n        );\n      }\n\n      return {\n        datasets: resultDatasets,\n        matches: matches.filter((match) =>\n          resultDatasets.find((r) => r.resource.id === match.id),\n        ),\n      };\n    }\n    return datasets;\n  }, [searchedDatasets, tags, categories, columns, departments, datasets]);\n}\n\nexport function useSortDatsetsBy(datasets, type, asc = false, searchTerm = '') {\n  return useMemo(() => {\n    // If we have a search term, do not sort the datasets\n    if (searchTerm) {\n      return datasets;\n    }\n    return datasets.sort((a, b) => {\n      let valA = null;\n      let valB = null;\n      switch (type) {\n        case 'Name':\n          valA = a.resource.name;\n          valB = b.resource.name;\n          break;\n        case 'Created At':\n          valA = a.resource.createdAt;\n          valB = b.resource.createdAt;\n          break;\n        case 'Updated At':\n          valA = a.resource.updatedAt;\n          valB = b.resource.updatedAt;\n          break;\n        case 'Downloads':\n          valA = a.resource.download_count;\n          valB = b.resource.download_count;\n          break;\n        case 'Views':\n          valA = a.resource.page_views.page_views_total;\n          valB = b.resource.page_views.page_views_total;\n          break;\n        default:\n      }\n\n      return (valA < valB ? 1 : -1) * (asc ? 1 : -1);\n    });\n  }, [searchTerm, datasets, type, asc]);\n}\n\nexport function useUniqueColumnEntries(dataset, column) {\n  const [uniqueEntries, setUniqueEntries] = useState(null);\n  useEffect(() => {\n    getUniqueEntries(dataset, column).then((res) => {\n      setUniqueEntries({\n        dataset: dataset.resource.id,\n        column,\n        distinct: res,\n      });\n    });\n  }, [dataset, column]);\n  return uniqueEntries;\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport Dexie from 'dexie';\nimport uuidv4 from 'uuid/v4';\n\nexport const CollectionsContext = createContext();\n\n// A collection has the form\n// datasets : array of dataset ids\n// name : the name of the collection\n// id : a random id for the collection\n// description : short 255 character description of the collection\n//\nconst initalState = {\n    collections: [{ id: 'pending', datasets: [], name: 'pending' }],\n    activeCollectionID: 'pending',\n};\n\nconst db = new Dexie('CollectionCache');\ndb.version(1).stores({\n    CollectionCache: 'id',\n});\n\nconst reducer = (state, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case 'CREATE_COLLECTION_FROM_PENDING':\n            return {\n                ...state,\n                collections: [\n                    ...state.collections,\n                    {\n                        ...state.collections.find((c) => c.id === 'pending'),\n                        id: uuidv4(),\n                        name: payload.name,\n                    },\n                ].map((c) =>\n                    c.id === 'pending'\n                        ? { id: 'pending', datasets: [], name: 'pending' }\n                        : c,\n                ),\n            };\n        case 'ADD_TO_COLLECTION':\n            return {\n                ...state,\n                collections: state.collections.map((col) =>\n                    col.id === payload.id\n                        ? {\n                              ...col,\n                              datasets: [...col.datasets, payload.datasetID],\n                          }\n                        : col,\n                ),\n            };\n        case 'REMOVE_FROM_COLLECTION':\n            return {\n                ...state,\n                collections: state.collections.map((col) =>\n                    col.id === payload.id\n                        ? {\n                              ...col,\n                              datasets: col.datasets.filter(\n                                  (d) => d !== payload.datasetID,\n                              ),\n                          }\n                        : col,\n                ),\n            };\n        case 'SET_NAME':\n            return {\n                ...state,\n                collections: [\n                    ...state,\n                    state.collections.map((col) =>\n                        col.id === payload.id\n                            ? { ...col, name: payload.name }\n                            : col,\n                    ),\n                ],\n            };\n        case 'CLEAR_COLLECTION':\n            return {\n                ...state,\n                collections: [\n                    ...state,\n                    state.collections.map((col) =>\n                        col.id === payload.id ? { ...col, datasets: [] } : col,\n                    ),\n                ],\n            };\n\n        case 'DELETE_COLLECTION':\n            return {\n                ...state,\n                collections: state.collections.filter(\n                    (col) => col.id !== payload.id,\n                ),\n            };\n\n        case 'CREATE_COLLECTION':\n            return {\n                ...state,\n                collections: [\n                    ...state.collections,\n                    { ...payload, id: uuidv4() },\n                ],\n            };\n        case 'HYDRATE_STATE':\n            return {\n                ...state,\n                ...payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const CollectionsProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initalState);\n    const { cacheLoaded, collections, activeCollectionID } = state;\n\n    // Restore state\n    useEffect(() => {\n        db.CollectionCache.get(1).then((result) => {\n            if (result) {\n                const cachedState = JSON.parse(result.data);\n                dispatch({\n                    type: 'HYDRATE_STATE',\n                    payload: {\n                        ...initalState,\n                        ...cachedState,\n                        cacheLoaded: true,\n                    },\n                });\n            } else {\n                dispatch({\n                    payload: { ...initalState, cacheLoaded: true },\n                    type: 'HYDRATE_STATE',\n                });\n            }\n        });\n    }, []);\n\n    // Cache state\n    useEffect(() => {\n        if (cacheLoaded) {\n            db.CollectionCache.put({\n                data: JSON.stringify({\n                    collections,\n                    activeCollectionID,\n                }),\n                id: 1,\n            });\n        }\n    }, [cacheLoaded, collections, activeCollectionID]);\n\n    return (\n        <CollectionsContext.Provider value={[state, dispatch]}>\n            {children}\n        </CollectionsContext.Provider>\n    );\n};\n\nexport const useCollectionsValue = () => useContext(CollectionsContext);\n","import { useCollectionsValue } from '../contexts/CollectionsContext';\n\nexport function useCurrentCollection() {\n    const [state, dispatch] = useCollectionsValue();\n    const { activeCollectionID, pendingCollection } = state;\n\n    const collection = activeCollectionID\n        ? state.collections.find((c) => c.id === state.activeCollectionID)\n        : pendingCollection;\n\n    const addToCollection = (collectionID, datasetID) => {\n        dispatch({\n            type: 'ADD_TO_COLLECTION',\n            payload: { id: collectionID, datasetID },\n        });\n    };\n\n    const createCollectionFromPending = (name) => {\n        dispatch({\n            type: 'CREATE_COLLECTION_FROM_PENDING',\n            payload: { name },\n        });\n    };\n\n    const removeFromCollection = (collectionID, datasetID) =>\n        dispatch({\n            type: 'REMOVE_FROM_COLLECTION',\n            payload: { id: collectionID, datasetID },\n        });\n\n    const setName = (name, collectionID) =>\n        dispatch({\n            type: 'SET_NAME',\n            payload: { id: collectionID, name },\n        });\n\n    const clearCollection = (collectionID) => {\n        dispatch({ type: 'CLEAR_COLLECTION', payload: { id: collectionID } });\n    };\n    return [\n        collection,\n        {\n            clearCollection,\n            addToCollection,\n            removeFromCollection,\n            setName,\n            createCollectionFromPending,\n        },\n    ];\n}\n\nexport function useCollections() {\n    const [state, dispatch] = useCollectionsValue();\n    return state;\n}\n","import React from 'react';\nimport DOMPurify from 'dompurify';\n\n/* Simple component to sanitize HTML and display it.\n *  Need this for making sure we can display the\n *  dataset descriptions properly\n */\n\nexport default function RawHTML({ html, className }) {\n  const cleanedHTML = DOMPurify.sanitize(html);\n  return (\n    <div\n      className={className}\n      dangerouslySetInnerHTML={{ __html: cleanedHTML }}\n    />\n  );\n}\n","import React from 'react';\nimport RawHTML from '../components/RawHTML/RawHTML';\n\nexport function formatDate(date) {\n    const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    };\n    return new Date(date).toLocaleDateString('en-US', options);\n}\n\nexport function hilightMatches(text, query) {\n    if (query) {\n        const regex = new RegExp(`(${query})`, 'ig');\n        return (\n            <RawHTML\n                html={text.replace(\n                    regex,\n                    (match) => `<span class=\"hilight\">${match}</span>`,\n                )}\n            />\n        );\n    }\n    return text;\n}\n\nexport function constructCollectionLink(collection) {\n    return `/collection/${collection.name}/${collection.datasets.join(',')}`;\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGetDatasetsByIds } from '../../hooks/datasets';\nimport { useCollections, useCurrentCollection } from '../../hooks/collections';\nimport { constructCollectionLink } from '../../utils/formatters';\n\nimport './CollectionTab.scss';\n\nexport default function CollectionTab({ visible }) {\n  const collections = useCollections();\n  const [\n    collection,\n    { removeFromCollection, createCollectionFromPending },\n  ] = useCurrentCollection();\n  const currentCollectionDatasets = useGetDatasetsByIds(collection.datasets);\n  const [newCollectionName, setNewCollectionName] = useState('');\n  const [tab, setTab] = useState('new');\n  const [showCreate, setShowCreate] = useState(false);\n\n  const createCollection = () => {\n    createCollectionFromPending(newCollectionName);\n    setShowCreate(false);\n  };\n\n  const getAgency = (dataset) => {\n    return dataset?.classification.domain_metadata?.find(\n      ({ key }) => key === 'Dataset-Information_Agency',\n    )?.value;\n  };\n\n  if (!visible) return '';\n\n  return (\n    <div className=\"collection-tab\">\n      {showCreate ? (\n        <div className=\"collections-tab-create\">\n          <h2>Create Collection</h2>\n          <div className=\"collections-tab-create-options\">\n            <p>Name your new collection</p>\n            <input\n              placeholder=\"name\"\n              type=\"text\"\n              value={newCollectionName}\n              onChange={(e) => setNewCollectionName(e.target.value)}\n            />\n            <ul>\n              {currentCollectionDatasets.map((c) => (\n                <li className=\"collection-tab-dataset\">\n                  <div>\n                    <p className=\"name\">{c.resource.name}</p>\n                    <p className=\"agency\"> {getAgency(c)}</p>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"collection-tab-buttons\">\n            <button type=\"submit\" onClick={createCollection}>\n              Create\n            </button>\n            <button type=\"button\" onClick={() => setShowCreate(false)}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"collections-tab-view\">\n          <h2>Collections</h2>\n          <div className=\"collection-tab-tabs\">\n            <button\n              type=\"button\"\n              onClick={() => setTab('new')}\n              className={`header-button' ${tab === 'new' ? 'selected' : ''}`}\n            >\n              Create new\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => setTab('existing')}\n              className={`header-button' ${\n                tab === 'existing' ? 'selected' : ''\n              }`}\n            >\n              Existing Collections\n            </button>\n          </div>\n          {tab === 'new' && (\n            <>\n              <div className=\"collection-tab-current-collection\">\n                {currentCollectionDatasets.length === 0 ? (\n                  <div className=\"datasets-placeholder\">\n                    <h3>No datasets selected</h3>\n                    <p>\n                      Select `&quot;`Add to Collection`&quot;` to begin creating\n                      local collections.\n                    </p>\n                  </div>\n                ) : (\n                  <ul>\n                    {currentCollectionDatasets.map((d) => (\n                      <li\n                        key={d.resource.name}\n                        className=\"collection-tab-dataset\"\n                      >\n                        <div>\n                          <p className=\"name\">{d.resource.name}</p>\n                          <p className=\"agency\">{getAgency(d)}</p>\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            removeFromCollection(collection.id, d.resource.id)\n                          }\n                        >\n                          Remove\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n              <div className=\"collection-tab-buttons\">\n                <button type=\"submit\" onClick={() => setShowCreate(true)}>\n                  Create Collection\n                </button>\n              </div>\n            </>\n          )}\n          {tab === 'existing' && (\n            <div className=\"collections-tab-existing-collections\">\n              {collections.collections.length === 1 ? (\n                <div className=\"datasets-placeholder\">\n                  <h3>No collections yet</h3>\n                </div>\n              ) : (\n                <ul className=\"existing-collections-list\">\n                  {collections.collections\n                    .filter((c) => c.id !== 'pending')\n                    .map((c) => (\n                      <li className=\"existing-collection\">\n                        <div className=\"exisiting-colections-deets\">\n                          <p className=\"name\">{c.name}</p>\n                          <p className=\"dataset-count\">\n                            {' '}\n                            {c.datasets.length} datasets{' '}\n                          </p>\n                        </div>\n                        <Link to={constructCollectionLink(c)}>View</Link>\n                      </li>\n                    ))}\n                </ul>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport './SideNav.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faQuestionCircle,\n  faEye,\n  faColumns,\n} from '@fortawesome/free-solid-svg-icons';\nimport CollectionTab from '../CollectionTab/CollectionTab';\nimport { useCurrentCollection } from '../../hooks/collections';\n\nexport default function SideNav() {\n  const location = window.location.href;\n  console.log('location ', location);\n  const [showCollectionTab, setShowCollectionTab] = useState(false);\n  const [collection] = useCurrentCollection();\n\n  return (\n    <nav className=\"side-nav\">\n      <Link alt=\"Data Clinic\" className=\"title\" to=\"/\">\n        <h2 className=\"scout-h2\">Scout</h2>\n\n        <p className=\"scout-sub\">by data clinic</p>\n      </Link>\n      <NavLink\n        activeClassName=\"active-nav\"\n        alt=\"Explore\"\n        className=\"explore\"\n        exact\n        to=\"/\"\n      >\n        <FontAwesomeIcon size=\"2x\" icon={faEye} />\n        <h1>Explore</h1>\n      </NavLink>\n      <div style={{ position: 'relative' }}>\n        {collection.datasets.length > 0 && (\n          <div className=\"collection-counter\">{collection.datasets.length}</div>\n        )}\n        <button\n          onClick={() => setShowCollectionTab(!showCollectionTab)}\n          type=\"button\"\n          className=\"header-button\"\n        >\n          <FontAwesomeIcon size=\"2x\" icon={faColumns} />\n          <h1>Collections</h1>\n        </button>\n        <CollectionTab visible={showCollectionTab} />\n      </div>\n      <NavLink\n        exact\n        activeClassName=\"active-nav\"\n        alt=\"about\"\n        className=\"about\"\n        to=\"/about\"\n      >\n        <FontAwesomeIcon size=\"2x\" icon={faQuestionCircle} />\n        <h1>About Data Clinic</h1>\n      </NavLink>\n    </nav>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default ({ permalink }) => (\n  <a\n    className=\"external-link\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href={permalink}\n  >\n    <button type=\"button\">\n      View on Open Data&nbsp;\n      <FontAwesomeIcon icon={faExternalLinkAlt} />\n    </button>\n  </a>\n);\n","import React from 'react';\nimport './Dataset.scss';\nimport { Link } from 'react-router-dom';\nimport { hilightMatches, formatDate } from '../../utils/formatters';\n\n// import RawHTML from '../RawHTML/RawHTML';\nimport ViewOnOpenPortal from '../ViewOnOpenPortal/ViewOnOpenPortal';\n\nexport default function Dataset({\n  dataset,\n  onAddToCollection,\n  onRemoveFromCollection,\n  inCollection,\n  viewInOpenPortal = false,\n  similarity,\n  query,\n}) {\n  const formattedName = hilightMatches(dataset.resource.name, query);\n  const formattedDescription = hilightMatches(\n    dataset.resource.description,\n    query,\n  );\n  return (\n    <div className=\"dataset\" key={dataset.resource.id}>\n      <div className=\"dataset-title\">\n        <p>{dataset.resource.attribution}</p>\n        <Link className=\"title\" to={`/dataset/${dataset.resource.id}`}>\n          <h2>{formattedName}</h2>\n        </Link>\n      </div>\n\n      {onAddToCollection && (\n        <button\n          type=\"button\"\n          onClick={() =>\n            inCollection\n              ? onRemoveFromCollection(dataset.resource.id)\n              : onAddToCollection(dataset.resource.id)\n          }\n        >\n          {inCollection ? 'Remove from collection' : 'Add to collection'}\n        </button>\n      )}\n      {similarity && (\n        <p className=\"similarity\">\n          <p className=\"header\">Similarity</p>\n          <p>{(similarity * 100).toPrecision(2)}%</p>\n        </p>\n      )}\n      {viewInOpenPortal && <ViewOnOpenPortal permalink={dataset.permalink} />}\n\n      <div className=\"dataset-join-thematic\">\n        <p className=\"header\">Last Updated</p>\n        <p>33</p>\n      </div>\n      <div className=\"dataset-description\">{formattedDescription}</div>\n      <div className=\"dataset-meta\">\n        <div className=\"update-frequency\">\n          <span>Update frequency:</span>\n          weekly\n        </div>\n        <div className=\"dataset-last-updated\">\n          <span>Last Update at:</span>\n          {formatDate(dataset.resource.updatedAt)}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './SortMenu.scss';\n\nexport default function SortMenu({\n  options,\n  selected,\n  direction,\n  onSelected,\n  onDirection,\n}) {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div className={`sort-menu ${expanded ? 'expanded' : ''}`}>\n      <div className=\"wrapper\">\n        <span>Sort By:</span>\n        <ul>\n          <li onClick={() => setExpanded(!expanded)}>{selected}</li>\n          {options\n            .filter((o) => o !== selected)\n            .map((option) => (\n              <li\n                onClick={() => {\n                  onSelected(option);\n                  setExpanded(false);\n                }}\n                key={option}\n              >\n                {option}{' '}\n              </li>\n            ))}\n        </ul>\n        <FontAwesomeIcon\n          onClick={() => onDirection(direction === 'asc' ? 'desc' : 'asc')}\n          icon={direction === 'asc' ? faSortUp : faSortDown}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './DatasetLoading.scss';\nimport '../Loading.scss';\n\nexport default () => (\n  <div className=\"dataset-loading\">\n    <div className=\"dataset-list\">\n      {[...Array(4)].map((_, i) => (\n        <div key={i} className=\"dataset\">\n          <div className=\"dataset-title animate\" />\n          <p className=\"dataset-description animate\" />\n          <div className=\"dataset-meta animate\" />\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { useState, useMemo, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\n\nexport default function usePagination(data, perPage = 20) {\n  const pages = useMemo(() => Math.ceil(data.length / perPage), [\n    data,\n    perPage,\n  ]);\n  const [currentPageNo, setCurrentPageNo] = useState(0);\n\n  useEffect(() => {\n    setCurrentPageNo(0);\n  }, [pages]);\n\n  const pageButtons = (\n    <nav>\n      <ReactPaginate\n        previousLabel=\"previous\"\n        nextLabel=\"next\"\n        breakLabel=\"...\"\n        breakClassName=\"break-me\"\n        pageCount={pages}\n        onPageChange={({ selected: page }) => {\n          setCurrentPageNo(page);\n        }}\n        containerClassName=\"pagination\"\n        subContainerClassName=\"pages pagination\"\n        activeClassName=\"active\"\n        previousClassName=\"page-item\"\n        nextClassName=\"page-item\"\n        pageClassName=\"page-item\"\n      />\n    </nav>\n  );\n\n  const content = data.slice(\n    currentPageNo * perPage,\n    (currentPageNo + 1) * perPage,\n  );\n\n  return [\n    content,\n    {\n      pageButtons,\n    },\n  ];\n}\n","import React from 'react';\nimport './FilterLoading.scss';\nimport '../Loading.scss';\n\nexport default () => (\n  <div className=\"\">\n    <div className=\"filter-loading-wrapper\">\n      {[...Array(10)].map((_, i) => (\n        <li key={i} className=\"multi-buttons\">\n          <input type=\"checkbox\" disabled className=\"checkbox\" />\n          <span className=\"animate item-name\" />\n          <span className=\"animate pill\" />\n        </li>\n      ))}\n    </div>\n  </div>\n);\n","import React, { useState, useMemo, useEffect } from 'react';\nimport useFuse from 'react-use-fuse';\nimport usePagenation from '../../hooks/pagination';\nimport { useStateLoaded } from '../../hooks/datasets';\nimport FilterLoading from '../Loading/FilterLoading/FilterLoading';\nimport './MultiSelector.scss';\n\nexport default function MultiSelector({\n  items,\n  selected,\n  onChange,\n  title,\n  collapse,\n  onCollapse,\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const collapsedActual = collapse === null ? collapsed : collapse;\n\n  const toggleCollapsed = () => {\n    if (onCollapse) {\n      onCollapse(!collapsedActual);\n    } else {\n      setCollapsed(!collapsedActual);\n    }\n  };\n\n  const clearItems = () => {\n    onChange([]);\n  };\n\n  const loaded = useStateLoaded();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const toggleItem = (item) => {\n    const newSelection = selected.includes(item)\n      ? selected.filter((i) => i !== item)\n      : [...selected, item];\n    onChange(newSelection);\n  };\n\n  const itemNames = useMemo(() => items && Object.keys(items), [items]);\n\n  const { result: filteredItems, search } = useFuse({\n    data: itemNames.map((item) => ({\n      name: item,\n    })),\n    options: {\n      keys: ['name'],\n      shouldSort: false,\n      findAllMatches: true,\n      caseSensitive: false,\n    },\n  });\n\n  useEffect(() => search(searchTerm), [search, searchTerm]);\n\n  const sortedItems = useMemo(\n    () =>\n      filteredItems\n        ?.map((item) => item.name)\n        .sort((a, b) => (items[a] < items[b] ? 1 : -1)),\n    [filteredItems, items],\n  );\n\n  const [pagedItems, { pageButtons }] = usePagenation(sortedItems, 10);\n\n  return (\n    <div className=\"mutli-selector\">\n      <h2>\n        <button\n          className=\"header-button\"\n          type=\"button\"\n          onClick={() => toggleCollapsed()}\n        >\n          {title} <span> {collapsedActual ? '+' : '-'}</span>{' '}\n        </button>\n      </h2>\n\n      {!collapsedActual && (\n        <>\n          <div className=\"search\">\n            <input\n              disabled={!loaded}\n              placeholder=\"filter\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n          <ul className=\"multi-list\">\n            {!loaded ? (\n              <FilterLoading />\n            ) : (\n              pagedItems.map((item) => (\n                // eslint-disable-next-line\n                <li\n                  key={item}\n                  onClick={() => toggleItem(item)}\n                  className={`multi-buttons ${\n                    selected && selected.includes(item) ? 'selected' : ''\n                  }`}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selected && selected.includes(item)}\n                    className=\"checkbox\"\n                  />\n                  <span className=\"item-name\">{item}</span>\n                  <span className=\"pill\">{items[item]}</span>\n                </li>\n              ))\n            )}\n          </ul>\n          {pageButtons}\n          {selected && selected.length > 0 && (\n            <button type=\"button\" onClick={clearItems}>\n              clear\n            </button>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const SearchContext = createContext();\n\nconst initalState = {\n  term: '',\n  tags: [],\n  categories: [],\n  departments: [],\n  columns: [],\n  sortVariable: 'name',\n  sortOrder: 'asc',\n  collapseFilters: true,\n  collapsedFilterList: {\n    categories: true,\n    tags: true,\n    departments: true,\n    columns: true,\n  },\n};\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'ADD_TAG':\n      return { ...state, tags: [...state.tags, payload] };\n    case 'REMOVE_TAG':\n      return { ...state, tags: state.tags.filter((t) => t !== payload) };\n    case 'ADD_CATEGORY':\n      return { ...state, categories: [...state.categories, payload] };\n    case 'REMOVE_CATEGORY':\n      return {\n        ...state,\n        category: state.category.filter((t) => t !== payload),\n      };\n    case 'ADD_COLUMN':\n      return { ...state, columns: [...state.columns, payload] };\n    case 'REMOVE_COLUMN':\n      return {\n        ...state,\n        columns: state.columns.filter((t) => t !== payload),\n      };\n    case 'ADD_DEPARTMNET':\n      return { ...state, departments: [...state.departments, payload] };\n    case 'REMOVE_DEPARTMENT':\n      return {\n        ...state,\n        departments: state.departments.filter((t) => t !== payload),\n      };\n    case 'CLEAR':\n      return initalState;\n    case 'SET_TAGS':\n      return { ...state, tags: payload };\n    case 'SET_DEPARTMENTS':\n      return { ...state, departments: payload };\n    case 'SET_CATEGORIES':\n      return { ...state, categories: payload };\n    case 'SET_COLUMNS':\n      return { ...state, columns: payload };\n    case 'SET_SORT_ORDER':\n      return { ...state, sortOrder: payload };\n    case 'SET_COLLAPSE_FILTER_BAR':\n      return { ...state, collapseFilters: payload };\n    case 'SET_FILTER_STATE':\n      return {\n        ...state,\n        collapsedFilterList: {\n          ...state.collapsedFilterList,\n          [payload.filter]: payload.state,\n        },\n      };\n    case 'SET_SORT_VARIABLE':\n      return { ...state, sortVariable: payload };\n    case 'SET_TERM':\n      return { ...state, term: payload };\n    default:\n      return state;\n  }\n};\n\nexport const SearchProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n\n  return (\n    <SearchContext.Provider value={[state, dispatch]}>\n      {children}\n    </SearchContext.Provider>\n  );\n};\n\nexport const useSearchState = () => useContext(SearchContext);\n","import React from 'react';\nimport './HomePage.scss';\nimport { DebounceInput } from 'react-debounce-input';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleLeft,\n  faAngleDown,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  useCategories,\n  useTags,\n  useDepartments,\n  useDatasets,\n  useColumns,\n  useStateLoaded,\n  useSortDatsetsBy,\n} from '../../hooks/datasets';\nimport { useCurrentCollection } from '../../hooks/collections';\nimport Dataset from '../../components/Dataset/Dataset';\nimport SortMenu from '../../components/SortMenu/SortMenu';\nimport DatasetLoading from '../../components/Loading/DatasetLoading/DatasetLoading';\nimport usePagination from '../../hooks/pagination';\nimport MultiSelector from '../../components/MultiSelector/MultiSelector';\nimport {\n  useSelectedCategories,\n  useSelectedTags,\n  useSelectedDepartments,\n  useSelectedColumns,\n  useSearchTerm,\n  useSortVariable,\n  useSortOrder,\n  useFilterBarState,\n  useFilterUIStates,\n} from '../../hooks/search';\n\nexport default function HomePage() {\n  const categories = useCategories();\n  const tags = useTags();\n  const departments = useDepartments();\n  const columns = useColumns();\n  const loaded = useStateLoaded();\n  //    const [colpaseFilters, setCollapseFilters] = useState(true);\n\n  const [selectedTags, setSelectedTags] = useSelectedTags();\n  const [selectedColumns, setSelectedColumns] = useSelectedColumns();\n  const [selectedCategories, setSelectedCategories] = useSelectedCategories();\n  const [\n    selectedDepartments,\n    setSelectedDepartments,\n  ] = useSelectedDepartments();\n  const [searchTerm, setSearchTerm] = useSearchTerm();\n  const [sortBy, setSortBy] = useSortVariable();\n  const [sortDirection, setSortDirection] = useSortOrder();\n\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCurrentCollection();\n\n  const { datasets } = useDatasets({\n    tags: selectedTags,\n    categories: selectedCategories,\n    columns: selectedColumns,\n    term: searchTerm,\n    departments: selectedDepartments,\n  });\n\n  const [collapseFilterBar, setCollapseFilterBar] = useFilterBarState();\n  const [filterStates, setFilterState] = useFilterUIStates();\n\n  const sortedDatasets = useSortDatsetsBy(\n    datasets,\n    sortBy,\n    sortDirection === 'asc',\n    searchTerm,\n  );\n\n  const [pagedDatasets, { pageButtons }] = usePagination(sortedDatasets, 5);\n\n  return (\n    <div className=\"home-page\">\n      <div className={`filters ${collapseFilterBar ? 'collapsed' : ''}`}>\n        {!collapseFilterBar ? (\n          <>\n            <h2 className=\"filter-header\">\n              <button\n                onKeyDown={() => setCollapseFilterBar(true)}\n                onClick={() => setCollapseFilterBar(true)}\n                className=\"header-button\"\n                type=\"button\"\n              >\n                Filters <FontAwesomeIcon icon={faAngleLeft} />\n              </button>\n            </h2>\n            <div className=\"filters-scroll-area\">\n              <div className=\"categories\">\n                <MultiSelector\n                  items={categories}\n                  onChange={setSelectedCategories}\n                  selected={selectedCategories}\n                  collapse={filterStates.categories}\n                  onCollapse={(collapsed) =>\n                    setFilterState('categories', collapsed)\n                  }\n                  title=\"Categories\"\n                />\n              </div>\n              <div className=\"departments\">\n                <MultiSelector\n                  items={departments}\n                  selected={selectedDepartments}\n                  onChange={setSelectedDepartments}\n                  collapse={filterStates.departments}\n                  onCollapse={(collapsed) =>\n                    setFilterState('departments', collapsed)\n                  }\n                  title=\"Departments\"\n                />\n              </div>\n              <div className=\"columns\">\n                <MultiSelector\n                  items={columns}\n                  selected={selectedColumns}\n                  onChange={setSelectedColumns}\n                  collapse={filterStates.columns}\n                  onCollapse={(collapsed) =>\n                    setFilterState('columns', collapsed)\n                  }\n                  title=\"Columns\"\n                />\n              </div>\n              <div className=\"tags\">\n                <MultiSelector\n                  items={tags}\n                  selected={selectedTags}\n                  onChange={setSelectedTags}\n                  collapse={filterStates.tags}\n                  onCollapse={(collapsed) => setFilterState('tags', collapsed)}\n                  title=\"Tags\"\n                />\n              </div>\n            </div>\n          </>\n        ) : (\n          <>\n            <h2>\n              <button\n                onKeyDown={() => setCollapseFilterBar(false)}\n                onClick={() => setCollapseFilterBar(false)}\n                className=\"header-button\"\n                type=\"button\"\n              >\n                Filters\n                <FontAwesomeIcon icon={faAngleDown} />\n              </button>\n            </h2>\n          </>\n        )}\n      </div>\n      <div className=\"datasets\">\n        <div className=\"search\">\n          <FontAwesomeIcon size=\"lg\" icon={faSearch} />\n          <DebounceInput\n            type=\"text\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n            value={searchTerm}\n            debounceTimeout={300}\n            placeholder=\"Search for dataset\"\n          />\n        </div>\n        <div className=\"count-and-sort\">\n          <p>\n            <span className=\"bold\">{datasets.length}</span> datasets{' '}\n            {searchTerm ? 'sorted by relevance' : ''}\n          </p>\n\n          {searchTerm ? null : (\n            <SortMenu\n              options={[\n                'Name',\n                'Created At',\n                'Updated At',\n                'Downloads',\n                'Views',\n              ]}\n              onDirection={(direction) => setSortDirection(direction)}\n              selected={sortBy}\n              direction={sortDirection}\n              onSelected={(selected) => setSortBy(selected)}\n            />\n          )}\n        </div>\n\n        <ul className=\"dataset-list\">\n          {loaded ? (\n            pagedDatasets.map((dataset) => (\n              <Dataset\n                key={dataset?.resource?.id}\n                dataset={dataset}\n                inCollection={collection.datasets.includes(dataset.resource.id)}\n                onAddToCollection={(datasetID) =>\n                  addToCollection(collection.id, datasetID)\n                }\n                onRemoveFromCollection={(datasetID) =>\n                  removeFromCollection(collection.id, datasetID)\n                }\n                query={searchTerm}\n              />\n            ))\n          ) : (\n            <DatasetLoading />\n          )}\n        </ul>\n        <div>{pageButtons}</div>\n      </div>\n    </div>\n  );\n}\n","import { useSearchState } from '../contexts/SearchContext';\n\nexport function useSelectedTags() {\n  const [{ tags }, dispatch] = useSearchState();\n  const setSelectedTags = (newTags) => {\n    dispatch({\n      type: 'SET_TAGS',\n      payload: newTags,\n    });\n  };\n  return [tags, setSelectedTags];\n}\n\nexport function useSelectedCategories() {\n  const [{ categories }, dispatch] = useSearchState();\n  const setSelectedCategories = (newCategories) => {\n    dispatch({\n      type: 'SET_CATEGORIES',\n      payload: newCategories,\n    });\n  };\n  return [categories, setSelectedCategories];\n}\n\nexport function useSelectedColumns() {\n  const [{ columns }, dispatch] = useSearchState();\n  const setSelectedColumns = (newColumns) => {\n    dispatch({\n      type: 'SET_COLUMNS',\n      payload: newColumns,\n    });\n  };\n  return [columns, setSelectedColumns];\n}\n\nexport function useSelectedDepartments() {\n  const [{ departments }, dispatch] = useSearchState();\n  const setSelectedDepartments = (newDepartments) => {\n    dispatch({\n      type: 'SET_DEPARTMENTS',\n      payload: newDepartments,\n    });\n  };\n  return [departments, setSelectedDepartments];\n}\n\nexport function useSearchTerm() {\n  const [{ term }, dispatch] = useSearchState();\n  const setSearchTerm = (newTerm) => {\n    dispatch({\n      type: 'SET_TERM',\n      payload: newTerm,\n    });\n  };\n  return [term, setSearchTerm];\n}\n\nexport function useSortVariable() {\n  const [{ sortVariable }, dispatch] = useSearchState();\n  const setSortVariable = (newSortVariable) => {\n    dispatch({\n      type: 'SET_SORT_VARIABLE',\n      payload: newSortVariable,\n    });\n  };\n  return [sortVariable, setSortVariable];\n}\n\nexport function useFilterUIStates() {\n  const [{ collapsedFilterList }, dispatch] = useSearchState();\n  const setFilterState = (filter, state) => {\n    dispatch({\n      type: 'SET_FILTER_STATE',\n      payload: { filter, state },\n    });\n  };\n  return [collapsedFilterList, setFilterState];\n}\nexport function useFilterBarState() {\n  const [{ collapseFilters }, dispatch] = useSearchState();\n\n  const setCollapseFilter = (collapse) => {\n    dispatch({\n      type: 'SET_COLLAPSE_FILTER_BAR',\n      payload: collapse,\n    });\n  };\n  return [collapseFilters, setCollapseFilter];\n}\nexport function useSortOrder() {\n  const [{ sortOrder }, dispatch] = useSearchState();\n  const setSearchTerm = (newSortOrder) => {\n    dispatch({\n      type: 'SET_SORT_ORDER',\n      payload: newSortOrder,\n    });\n  };\n  return [sortOrder, setSearchTerm];\n}\n","import React, { useState, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFile } from '@fortawesome/free-regular-svg-icons';\nimport { Link } from 'react-router-dom';\nimport {\n  faAngleRight,\n  faAngleDown,\n  faTable,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useUniqueColumnEntries } from '../../hooks/datasets';\nimport { useCurrentCollection } from '../../hooks/collections';\nimport './JoinColumn.scss';\n\nexport default function ColumnJoin({ rightDataset, joinCol, parentUniques }) {\n  const [collapsed, setCollapsed] = useState(true);\n  const uniqueIds = useUniqueColumnEntries(rightDataset, joinCol);\n  const jointlyUnique = useMemo(\n    () =>\n      uniqueIds && parentUniques\n        ? parentUniques.filter((e) => uniqueIds.distinct.includes(e))\n        : [],\n    [uniqueIds, parentUniques],\n  );\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCurrentCollection();\n\n  return (\n    <div className=\"join-column\">\n      <div className=\"join-column-row\">\n        <span\n          onClick={() => setCollapsed(!collapsed)}\n          onKeyDown={(e) => {\n            if (e.keycode === 32) {\n              setCollapsed(!collapsed);\n            }\n          }}\n          className=\"join-column-name\"\n          role=\"button\"\n          tabIndex=\"0\"\n        >\n          <FontAwesomeIcon icon={collapsed ? faAngleRight : faAngleDown} />\n          <FontAwesomeIcon icon={faFile} />\n          {rightDataset.resource.name}\n        </span>\n        <span>\n          {jointlyUnique ? `${jointlyUnique.length} matching ids` : 'loading'}\n        </span>\n        <span>\n          <Link to={`/dataset/${rightDataset.resource.id}`}>View</Link>\n        </span>\n        <button\n          type=\"button\"\n          onClick={() =>\n            collection.datasets.includes(rightDataset.resource.id)\n              ? removeFromCollection(rightDataset.resource.id)\n              : addToCollection(rightDataset.resource.id)\n          }\n        >\n          {collection.datasets.includes(rightDataset.resource.id)\n            ? 'Remove from collection'\n            : 'Add to collection'}\n        </button>\n      </div>\n      {!collapsed && uniqueIds && (\n        <div className=\"join-column-unique\">\n          <h3>COMMON IDS</h3>\n          <ul>\n            {jointlyUnique.slice(0, 10).map((uid) => (\n              <li key={uid}>\n                <div className=\"bar\" />\n                <FontAwesomeIcon icon={faTable} />\n                <span>{uid}</span>\n              </li>\n            ))}\n          </ul>\n          <div>and {jointlyUnique.length - 10} more</div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport JoinColumn from '../JoinColumn/JoinColumn';\nimport './ColumnSuggestions.scss';\nimport usePagination from '../../hooks/pagination';\nimport { getUniqueEntries } from '../../utils/socrata';\n\nexport default function ColumnSuggestions({ column, joins, dataset }) {\n  const [columnUniques, setColumnsUniques] = useState([]);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const dataTypeForCol =\n    dataset.resource.columns_datatype[\n      dataset.resource.columns_name.indexOf(column)\n    ];\n\n  const [pagedJoins, { pageButtons }] = usePagination(joins, 10);\n\n  useEffect(() => {\n    if (joins.length > 0) {\n      getUniqueEntries(dataset, column).then((res) => {\n        setColumnsUniques(res);\n      });\n    }\n  }, [column, dataset, joins]);\n\n  return (\n    <div className={`column-suggestions ${collapsed ? 'collapsed' : ''}`}>\n      <div\n        className=\"table-row\"\n        role=\"button\"\n        onKeydown={(e) => {\n          if (e.keyCode === 36) {\n            setCollapsed(!collapsed);\n          }\n        }}\n        onClick={() => setCollapsed(!collapsed)}\n        tabIndex=\"0\"\n      >\n        <span className=\"column-collapse\">\n          <FontAwesomeIcon icon={collapsed ? faAngleRight : faAngleDown} />{' '}\n          {column}\n        </span>\n        <span>{dataTypeForCol}</span>\n        <span>{joins.length} datasets</span>\n      </div>\n      {!collapsed && pagedJoins && (\n        <div className=\"columns-suggestions-matches\">\n          <h3>MATCHING DATSETS</h3>\n          {joins && (\n            <ul>\n              {pagedJoins.map((join) => (\n                <li key={join.dataset.resource.id}>\n                  <JoinColumn\n                    leftDataset={dataset}\n                    rightDataset={join.dataset}\n                    joinCol={column}\n                    parentUniques={columnUniques}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n          {pageButtons}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useCallback, useMemo } from 'react';\nimport ColumnSuggestions from '../ColumnSuggestions/ColumnSuggestions';\nimport './ColumnMatchTable.scss';\n\nexport default function ColumnMatchTable({ dataset, joinColumns }) {\n  const columns = dataset.resource.columns_name;\n\n  const suggestionsForColumn = useCallback(\n    (col, candidates) => {\n      return columns\n        ? candidates.filter((c) =>\n            c.joinableColumns.includes(col.toLowerCase()),\n          )\n        : [];\n    },\n    [columns],\n  );\n\n  const sortedColumns = useMemo(\n    () =>\n      joinColumns\n        ? columns.sort((a, b) =>\n            suggestionsForColumn(a, joinColumns).length <\n            suggestionsForColumn(b, joinColumns).length\n              ? 1\n              : -1,\n          )\n        : [],\n    [columns, joinColumns, suggestionsForColumn],\n  );\n\n  return (\n    <div className=\"column-match-table\">\n      <div className=\"table-header\">\n        <ul className=\"table-row\">\n          <li>Column name</li>\n          <li>Column type</li>\n          <li># Potential joins</li>\n        </ul>\n      </div>\n      {sortedColumns.map((column) => (\n        <ColumnSuggestions\n          dataset={dataset}\n          column={column}\n          joins={suggestionsForColumn(column, joinColumns)}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Breadcrumb.scss';\n\nconst Breadcrumb = ({ currentPage }) => (\n  <div className=\"Breadcrumb\">\n    <Link to=\"/\">Home</Link>\n    <span> / {currentPage}</span>\n  </div>\n);\n\nexport default Breadcrumb;\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport RawHTML from '../../components/RawHTML/RawHTML';\nimport ColumnMatchTable from '../../components/ColumnMatchTable/ColumnMatchTable';\nimport Dataset from '../../components/Dataset/Dataset';\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\nimport { useCurrentCollection } from '../../hooks/collections';\nimport {\n  useDataset,\n  useJoinableDatasets,\n  useGetSimilarDatasets,\n} from '../../hooks/datasets';\nimport './DatasetPage.scss';\nimport ViewOnOpenPortal from '../../components/ViewOnOpenPortal/ViewOnOpenPortal';\n\nconst formatDate = (date) => moment(date).format('MMMM DD, YYYY');\n\nexport default function DatasetPage({ match }) {\n  const { datasetID } = match.params;\n  const dataset = useDataset(datasetID);\n  const joins = useJoinableDatasets(dataset);\n  const [activeTab, setActiveTab] = useState('joins');\n  const resource = dataset?.resource;\n  const pageViews = resource?.page_views;\n  const classification = dataset?.classification;\n  const domainMetadata = classification?.domain_metadata;\n  const similarDatasets = useGetSimilarDatasets(datasetID);\n  const mostSimilarDatasets = similarDatasets\n    .filter(\n      (suggestion) =>\n        suggestion.dataset && suggestion.dataset.resource.id !== datasetID,\n    )\n    .slice(0, 10);\n\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCurrentCollection();\n\n  const updatedAutomation = domainMetadata?.find(\n    ({ key, value }) => key === 'Update_Automation' && value === 'No',\n  )?.value;\n\n  const updateFrequency = domainMetadata?.find(\n    ({ key }) => key === 'Update_Update-Frequency',\n  )?.value;\n\n  const informationAgency = domainMetadata?.find(\n    ({ key }) => key === 'Dataset-Information_Agency',\n  )?.value;\n\n  return dataset ? (\n    <div className=\"dataset-page\">\n      <div className=\"dataset-details\">\n        <section>\n          <Breadcrumb currentPage={resource.name} />\n        </section>\n        <section>\n          <h2>{resource.name}</h2>\n          <p>{informationAgency}</p>\n          <RawHTML html={resource.description} />\n          <button\n            type=\"button\"\n            className=\"collection-button\"\n            onClick={() =>\n              collection.datasets.includes(datasetID)\n                ? removeFromCollection(datasetID)\n                : addToCollection(datasetID)\n            }\n          >\n            {collection.datasets.includes(datasetID)\n              ? 'Remove From Collection'\n              : 'Add to Collection'}{' '}\n          </button>\n        </section>\n        <section className=\"external-link\">\n          <p>Powered by</p>\n          <img\n            alt=\"NYC Open Data\"\n            src=\"https://opendata.cityofnewyork.us/wp-content/themes/opendata-wp/assets/img/nyc-open-data-logo.svg\"\n          />\n          <ViewOnOpenPortal permalink={dataset.permalink} />\n        </section>\n        <section className=\"metadata\">\n          <h2>Metadata</h2>\n          <h3>Update Automation</h3>\n          <p>{updatedAutomation}</p>\n          <h3>Update Frequency</h3>\n          <p>{updateFrequency}</p>\n          <h3>Dataset Owner</h3>\n          <p>{dataset?.owner.display_name}</p>\n          {informationAgency && (\n            <>\n              <h3>Agency</h3>\n              <p>{informationAgency}</p>\n            </>\n          )}\n          {classification?.domain_category && (\n            <>\n              <h3>Category</h3>\n              <p>{classification.domain_category}</p>\n            </>\n          )}\n          <h3>Updated</h3>\n          <p>{formatDate(resource?.updatedAt)}</p>\n          <h3>Metadata Updated at</h3>\n          <p>{formatDate(resource?.metadata_updated_at)}</p>\n          <h3>Page Views</h3>\n          <p>{pageViews?.page_views_total}</p>\n        </section>\n      </div>\n      <div className=\"dataset-recomendataions\">\n        <h2>Other datasets to consider</h2>\n        <div className=\"tabs\">\n          <button\n            type=\"button\"\n            className={activeTab === 'joins' ? 'active' : ''}\n            onClick={() => setActiveTab('joins')}\n          >\n            Potential Join Columns\n          </button>\n          <button\n            type=\"button\"\n            className={activeTab === 'theme' ? 'active' : ''}\n            onClick={() => setActiveTab('theme')}\n          >\n            Thematically Similar\n          </button>\n        </div>\n        {activeTab === 'joins' && (\n          <>\n            <p className=\"intro\">\n              Find datasets that share a column with the current dataset.\n            </p>{' '}\n            <p>\n              {' '}\n              These columns might be interesting datasets to join with the\n              current dataset to add additional details or bring in context\n            </p>\n            <ColumnMatchTable dataset={dataset} joinColumns={joins} />\n          </>\n        )}\n        {activeTab === 'theme' && (\n          <>\n            <p>\n              Dataset that are thematically similar based on name and\n              description\n            </p>\n            <div className=\"dataset-recomendataions-theme-list\">\n              {mostSimilarDatasets.map((d) => (\n                <Dataset\n                  onAddToCollection={addToCollection}\n                  onRemoveFromCollection={removeFromCollection}\n                  dataset={d.dataset}\n                  similarity={d.similarity}\n                  inCollection={collection.datasets.includes(\n                    d.dataset.resource.id,\n                  )}\n                />\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  ) : (\n    <h1>Loading...</h1>\n  );\n}\n","import { useState } from 'react';\n\nconst copyToClipboard = async (text) => {\n  if (navigator.clipboard) {\n    try {\n      await navigator.clipboard.writeText(text);\n      return true;\n    } catch (e) {\n      // Suppress error and try fallback method\n    }\n  }\n\n  if (\n    document.queryCommandSupported &&\n    document.queryCommandSupported('copy')\n  ) {\n    const textarea = document.createElement('textarea');\n    textarea.style.opacity = '0';\n    textarea.textContent = text;\n    // Prevent scrolling to bottom of page\n    textarea.style.position = 'fixed';\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy');\n    } catch (e) {\n      // Security exception may be thrown by some browsers.\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport default (url) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const setCopied = async () => {\n    await copyToClipboard(url);\n    setIsCopied(true);\n  };\n  return [isCopied, setCopied];\n};\n","import React from 'react';\nimport './CollectionPage.scss';\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  TwitterShareButton,\n  EmailIcon,\n  FacebookIcon,\n  TwitterIcon,\n} from 'react-share';\nimport useClipboard from '../../hooks/useClipboard';\nimport { useGetDatasetsByIds } from '../../hooks/datasets';\nimport Dataset from '../../components/Dataset/Dataset';\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\n\nexport default function CollectionPage({ match }) {\n  const { name, datasetIDs } = match.params;\n  const url = window.location.href;\n  const datasets = useGetDatasetsByIds(datasetIDs.split(','));\n\n  const [isCopied, setCopied] = useClipboard(url);\n  return (\n    <div className=\"collections-page\">\n      <div className=\"collections-details\">\n        <section>\n          <Breadcrumb currentPage=\"Collections\" />\n        </section>\n        <section>\n          <h2>{name}</h2>\n          <p>\n            {datasets.length} dataset{datasets.length > 1 ? 's' : ''}\n          </p>\n        </section>\n\n        <div>\n          <h3>Share this collection:</h3>\n          <p className=\"dataset-url\">{url} </p>\n          <button type=\"button\" onClick={setCopied}>\n            Copy link\n          </button>\n          <span>{isCopied ? 'Copied!' : ' '} </span>\n          <p className=\"share-icons\">\n            <FacebookShareButton url={url}>\n              <FacebookIcon size={36} />\n            </FacebookShareButton>{' '}\n            <TwitterShareButton url={url}>\n              <TwitterIcon size={36} />\n            </TwitterShareButton>\n            <EmailShareButton url={url}>\n              <EmailIcon size={36} />\n            </EmailShareButton>\n          </p>\n        </div>\n      </div>\n      <div className=\"collections-content\">\n        {datasets.map((dataset) => (\n          <Dataset viewInOpenPortal key={dataset.id} dataset={dataset} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './AboutPage.scss';\n\nexport default function AboutPage() {\n    return (\n        <div className=\"about-page\">\n            <section>\n                <h1>Scout</h1>\n                <section>\n                    <h2>What is Scout?</h2>\n                    <p>\n                        Scout is a tool to make it easier to navigate Open Data\n                        Portals and find groups of related datasets. It sits on\n                        top of Socrata Open Data portals and provides tools that\n                        augment those data portals and make more obscure\n                        datasets more descoverable\n                    </p>\n                </section>\n                <section>\n                    <h2>What cities does Scout support?</h2>\n                    <p>\n                        Scout currently only works with the New York City open\n                        data portal, however we are planning to release versions\n                        for other cities in the near future. In addition we are\n                        planning on making suggestions for datasets from other\n                        citie.\n                    </p>\n                </section>\n\n                <section>\n                    <h2>\n                        How do the thematically similar recomendations work?\n                    </h2>\n                    <p>\n                        Scout tries to surface datasets that have a similar\n                        theme to the one you are currently looking at. It does\n                        this using a technique called Doc2Vec which builds a\n                        mapping of each of the dataset names and descriptions\n                        and uses these mappings to find documents that have a\n                        similar meaning.\n                    </p>\n                </section>\n                <section>\n                    <h2>How can I contribute to Scout?</h2>\n                    <p>\n                        Scout is a tool to make it easier to navigate Open Data\n                        Portals and find groups of related datasets. It sits on\n                        top of Socrata Open Data portals and provides tools that\n                        augment those data portals and make more obscure\n                        datasets more descoverable\n                    </p>\n                </section>\n            </section>\n\n            <section>\n                <h1>Data Clinic</h1>\n                <section>\n                    <h2>What is the Data Clinic?</h2>\n                    <p>\n                        We bring Two Sigma’s people, data science skills, and\n                        technological know-how to help our partners to use data\n                        and tech more effectively.\n                    </p>\n\n                    <p>\n                        We share our scientific process and source the right\n                        talent from within Two Sigma to address your unique\n                        challenges.\n                    </p>\n\n                    <p>\n                        We can help optimize and automate daily operations,\n                        translate data into insights, or demonstrate potential\n                        for even greater change in the service of your\n                        community.\n                    </p>\n                </section>\n            </section>\n            <section>\n                <h1>Two Sigma</h1>\n                <section>\n                    <h2>What is Two Sigma?</h2>\n                    <p>\n                        We’re not your typical investment manager. We follow\n                        principles of technology and innovation as much as\n                        principles of investment management. Fields like machine\n                        learning and distributed computing guide us. Since 2001,\n                        we’ve searched for ways that these kinds of technologies\n                        can make us better at what we do. We never stop\n                        researching and developing.\n                    </p>\n                    <p>\n                        In the process, we work to help real people. Through our\n                        investors, we support the retirements of millions around\n                        the world. And we help fund breakthrough research,\n                        education and a wide range of charities and foundations.\n                    </p>\n                </section>\n            </section>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useCurrentCollection } from '../../hooks/collections';\nimport { useGetDatasetsByIds } from '../../hooks/datasets';\nimport './CreateCollectionModal.scss';\n\nexport default function CreateCollectionModal() {\n    const [collection, { clearCollection, setName }] = useCurrentCollection();\n    const datasets = useGetDatasetsByIds(collection.datasets);\n\n    return (\n        <div className=\"create-collection-modal\">\n            <h3>Create collection with the following datasets</h3>\n            <ul>\n                {datasets.map((dataset) => (\n                    <li>{dataset.resource.name}</li>\n                ))}\n            </ul>\n            <input\n                type=\"text\"\n                placeholder=\"Name\"\n                value={collection.name}\n                onChange={(e) => setName(e.target.value)}\n            />\n            <Link\n                to={`/collection/${collection.name}/${collection.datasets.join(\n                    ',',\n                )}`}\n            >\n                <button type=\"submit\" onClick={clearCollection}>\n                    Create\n                </button>\n            </Link>\n        </div>\n    );\n}\n","import { useEffect, useState } from 'react';\n\nexport default function useSeenWelcome() {\n  const [seenWelcome, setSeenWelcome] = useState(false);\n\n  useEffect(\n    () => setSeenWelcome(window.localStorage.getItem('seenWelcome')),\n    [],\n  );\n  const aknowledgeSeenWelcome = () => {\n    setSeenWelcome(true);\n    window.localStorage.setItem('seenWelcome', true);\n  };\n  return [seenWelcome, aknowledgeSeenWelcome];\n}\n","import React, { useEffect } from 'react';\nimport './WelcomeModal.scss';\nimport { Redirect } from 'react-router-dom';\nimport { Modal } from 'react-router-modal';\nimport useSeenWelcome from '../../hooks/useSeenWelcome';\n\nexport default function WelcomeModal({ closeModal }) {\n  const [seenWelcome, setSeenWelcome] = useSeenWelcome();\n  const recordDismiss = () => {\n    setSeenWelcome();\n  };\n\n  useEffect(() => {\n    if (seenWelcome) {\n      closeModal();\n    }\n  }, [closeModal, seenWelcome]);\n\n  return !seenWelcome ? (\n    <Modal onBackdropClick={recordDismiss}>\n      <div className=\"welcome-modal\">\n        <h2>Welcome to Scout!</h2>\n        <p>\n          Thanks for trying Scout. Scout is a new way to browse open data\n          portals. It is built with discoverability in mind. To learn more,\n          click the about button. To get started, try searching for a dataset or\n          select a dataset to see recomendations.\n        </p>\n\n        <p>\n          You can also create collections of datasets which you can share with\n          others. To do so start collecting or click on the collections tab\n        </p>\n      </div>\n    </Modal>\n  ) : (\n    <Redirect to=\"/welcome\" />\n  );\n}\n\nexport function WelcomeRedirect() {\n  const [seenWelcome] = useSeenWelcome();\n  return seenWelcome ? '' : <Redirect to=\"/welcome\" />;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function GHPagesRedirect() {\n  const [redirect, setRedirect] = useState(null);\n  useEffect(() => {\n    // This is for dealing with the 404 redirect issue on gh pages\n    const target = sessionStorage.redirect;\n    delete sessionStorage.redirect;\n\n    if (target && target !== window.location.href) {\n      let to = target;\n      if (process.env.PUBLIC_URL) {\n        to = `/${to\n          .split('/')\n          .slice(4)\n          .join('/')}`;\n      }\n      setRedirect(to);\n    }\n  }, []);\n\n  if (redirect) {\n    return <Redirect to={redirect} />;\n  }\n  return <></>;\n}\n","import React from 'react';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { ModalContainer, ModalRoute } from 'react-router-modal';\n\nimport SideNav from './components/SideNav/SideNav';\nimport HomePage from './layout/HomePage/HomePage';\nimport DatasetPage from './layout/DatasetPage/DatasetPage';\nimport CollectionPage from './layout/CollectionPage/CollectionPage';\nimport AboutPage from './layout/AboutPage/AboutPage';\nimport CreateCollectionModal from './components/CreateCollectionModal/CreateCollectionModal';\nimport WelcomeModal, {\n  WelcomeRedirect,\n} from './components/WelcomeModal/WelcomeModal';\nimport GHPagesRedirect from './components/GHPagesRedirect/GHPagesRedirect';\n\nimport 'react-router-modal/css/react-router-modal.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <ModalContainer />\n        <SideNav />\n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/dataset/:datasetID\" component={DatasetPage} />\n            <Route\n              path=\"/collection/:name/:datasetIDs\"\n              component={CollectionPage}\n            />\n\n            <Route path=\"/about\" component={AboutPage} />\n            <ModalRoute\n              path=\"/collection/new\"\n              parentPath=\"/\"\n              component={CreateCollectionModal}\n            />\n            <Route path=\"/\" component={HomePage} />\n            <Redirect from=\"/\" to=\"/\" />\n          </Switch>\n        </div>\n        <GHPagesRedirect />\n        <ModalRoute path=\"/welcome\" parentPath=\"/\" component={WelcomeModal} />\n        <WelcomeRedirect />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'normalize.css'; // Ensure consistent layout across browsers\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './contexts/OpenDataContext';\nimport { CollectionsProvider } from './contexts/CollectionsContext';\nimport { SearchProvider } from './contexts/SearchContext';\n\nReactDOM.render(\n  <StateProvider>\n    <SearchProvider>\n      <CollectionsProvider>\n        <App />\n      </CollectionsProvider>\n    </SearchProvider>\n  </StateProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}