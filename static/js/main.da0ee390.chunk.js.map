{"version":3,"sources":["utils/socrata.js","contexts/OpenDataContext.jsx","hooks/datasets.js","contexts/CollectionsContext.jsx","hooks/collections.js","utils/formatters.jsx","components/ViewOnOpenPortal/ViewOnOpenPortal.jsx","components/Dataset/Dataset.jsx","components/SortMenu/SortMenu.jsx","components/Loading/DatasetLoading/DatasetLoading.jsx","hooks/pagination.jsx","components/Loading/FilterLoading/FilterLoading.jsx","components/MultiSelector/MultiSelector.jsx","contexts/SearchContext.jsx","layout/HomePage/HomePage.jsx","components/RawHTML/RawHTML.jsx","components/JoinColumn/JoinColumn.jsx","components/ColumnSuggestions/ColumnSuggestions.jsx","components/ColumnMatchTable/ColumnMatchTable.jsx","components/Breadcrumb/Breadcrumb.jsx","layout/DatasetPage/DatasetPage.jsx","components/CollectionBar/CollectionBar.jsx","hooks/useClipboard.js","layout/CollectionPage/CollectionPage.jsx","components/CreateCollectionModal/CreateCollectionModal.jsx","components/GHPagesRedirect/GHPagesRedirect.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["SOCRATA_NY_OPENDATA_ENDPOINT","getMaifestPage","pageNo","a","async","limit","fetch","then","r","json","matachableColumnsForDataset","dataset","Set","resource","columns_name","map","s","toLocaleLowerCase","columns_field_name","hasJoinableMatch","columns","candidate","candidateCols","intersection","filter","x","has","Array","from","getUniqueEntries","column","id","replace","errorCode","error","console","warn","entry","Object","values","db","Dexie","version","stores","SocrataCache","AppContext","createContext","initalState","datasets","tagList","categories","departments","stateLoaded","reducer","state","action","type","payload","useStateValue","useContext","useStateLoaded","useJoinableDatasets","useMemo","cols","joinableColumns","match","length","findJoinable","useGetDatasetsByIds","ids","d","includes","CollectionsContext","name","cacheLoaded","CollectionCache","useCollection","dispatch","clearCollection","log","addToCollection","datasetID","removeFromCollection","setName","hilightMatches","text","matches","result","indices","pair","highlightedText","split","char","highlight","forEach","i","isHighlighting","curResult","push","className","permalink","target","rel","href","icon","faExternalLinkAlt","Dataset","date","onAddToCollection","onRemoveFromCollection","inCollection","viewInOpenPortal","similarity","formattedName","find","m","key","formattedDescription","description","to","attribution","toPrecision","onClick","ViewOnOpenPortal","updatedAt","Date","toLocaleDateString","year","month","day","classification","domain_tags","join","SortMenu","options","selected","direction","onSelected","onDirection","useState","expanded","setExpanded","o","option","faSortUp","faSortDown","_","usePagination","data","perPage","pages","Math","ceil","currentPageNo","setCurrentPageNo","useEffect","pageButtons","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","onPageChange","page","containerClassName","subContainerClassName","activeClassName","previousClassName","nextClassName","pageClassName","content","slice","disabled","MultiSelector","items","onChange","title","loaded","searchTerm","setSearchTerm","itemNames","keys","useFuse","item","shouldSort","findAllMatches","caseSensitive","filteredItems","search","usePagenation","sort","b","pagedItems","placeholder","value","e","newSelection","toggleItem","checked","SearchContext","term","tags","departmerts","sortVariable","sortOrder","t","category","HomePage","useCategories","useTags","useDepartments","useColumns","selectedTags","setSelectedTags","selectedColumns","setSelectedColumns","selectedCategories","setSelectedCategories","selectedDepartments","setSelectedDepartments","sortBy","setSortBy","sortDirection","setSortDirection","collection","includeMatches","searchedDatasets","resultDatasets","itemclassification","tag","cat","col","domain_metadata","useDatasets","sortedDatasets","asc","valA","valB","createdAt","download_count","page_views","page_views_total","useSortDatsetsBy","pagedDatasets","debounceTimeout","RawHTML","html","cleanedHTML","DOMPurify","sanitize","dangerouslySetInnerHTML","__html","ColumnJoin","rightDataset","joinCol","parentUniques","collapsed","setCollapsed","uniqueIds","uniqueEntries","setUniqueEntries","res","distinct","useUniqueColumnEntries","jointlyUnique","onKeyDown","keycode","role","tabIndex","faAngleRight","faAngleDown","faFile","uid","faTable","ColumnSuggestions","joins","columnUniques","setColumnsUniques","dataTypeForCol","columns_datatype","indexOf","pagedJoins","onKeydown","keyCode","leftDataset","ColumnMatchTable","joinColumns","suggestionsForColumn","useCallback","candidates","c","toLowerCase","sortedColumns","Breadcrumb","currentPage","formatDate","moment","format","DatasetPage","params","useDataset","activeTab","setActiveTab","pageViews","domainMetadata","mostSimilarDatasets","similarityMetrics","setSimilarityMetrics","process","useGetSimilarDatasets","suggestion","updatedAutomation","updateFrequency","informationAgency","alt","src","owner","display_name","domain_category","metadata_updated_at","CollectionContext","copyToClipboard","navigator","clipboard","writeText","document","queryCommandSupported","textarea","createElement","style","opacity","textContent","position","body","appendChild","select","execCommand","removeChild","CollectionPage","datasetIDs","url","window","location","isCopied","setIsCopied","useClipboard","setCopied","FacebookShareButton","FacebookIcon","size","TwitterShareButton","TwitterIcon","EmailShareButton","EmailIcon","CreateCollectionModal","GHPagesRedirect","redirect","setRedirect","sessionStorage","App","basename","path","exact","component","parentPath","Boolean","hostname","ReactDOM","render","children","useReducer","Provider","get","cachedState","JSON","parse","cache_loaded","firstPage","totalEntries","resultSetSize","Promise","all","resp","results","list","reduce","datasetPage","allDatasets","getManifest","manifest","getTagList","cats","totals","getCategories","md","department","getDepartments","columnList","getColumns","put","stringify","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da0ee390.chunk.js","sourcesContent":["const SOCRATA_NY_OPENDATA_ENDPOINT =\n  'https://api.us.socrata.com/api/catalog/v1?domains=data.cityofnewyork.us&search_context=data.cityofnewyork.us';\n\nasync function getMaifestPage(pageNo, limit = 100) {\n  return fetch(\n    `${SOCRATA_NY_OPENDATA_ENDPOINT}&offset=${pageNo * limit}&limit=${limit}`,\n  ).then((r) => r.json());\n}\n\nfunction matachableColumnsForDataset(dataset) {\n  return new Set([\n    ...dataset.resource.columns_name.map((s) => s.toLocaleLowerCase()),\n    ...dataset.resource.columns_field_name.map((s) => s.toLocaleLowerCase()),\n  ]);\n}\n\nfunction hasJoinableMatch(columns, candidate) {\n  const candidateCols = matachableColumnsForDataset(candidate);\n  const intersection = new Set(\n    [...columns].filter(\n      (x) => candidateCols.has(x), // && ALLOWED_JOIN_COLUMNS.includes(x),\n    ),\n  );\n  return Array.from(intersection);\n}\n\nexport function findJoinable(dataset, datasets) {\n  const cols = matachableColumnsForDataset(dataset);\n  const matches = datasets\n    .map((candidate) => ({\n      dataset: candidate,\n      joinableColumns: hasJoinableMatch(cols, candidate),\n    }))\n    .filter(\n      (match) =>\n        match.joinableColumns.length > 0 &&\n        match.dataset.resource.id !== dataset.resource.id,\n    );\n  return matches;\n}\n\n/**\n * Get the full manifest from Socrata. This should be cached locally and updated in a smart way.\n *\n * @return {Promise(Array)} a promise that resolves to an array of the datasets\n */\nexport async function getManifest() {\n  const firstPage = await getMaifestPage(0, 1);\n  const totalEntries = firstPage.resultSetSize;\n  const pages = Math.ceil(totalEntries / 100);\n  return Promise.all(\n    [...Array(pages)].map((_, i) =>\n      getMaifestPage(i).then((resp) => resp.results),\n    ),\n  ).then((list) => {\n    return list.reduce(\n      (datasetPage, allDatasets) => [...allDatasets, ...datasetPage],\n      [],\n    );\n  });\n}\n\n/**\n * Extract from the datasets array, a unique set of columns.\n * @return {Array<string>} an array of unique categories\n */\nexport function getColumns(datasets) {\n  const columnList = {};\n\n  datasets.forEach((dataset) => {\n    if (dataset.resource.columns_name) {\n      dataset.resource.columns_name.forEach((col) => {\n        if (col in columnList) {\n          columnList[col] += 1;\n        } else {\n          columnList[col] = 1;\n        }\n      });\n    }\n  });\n  return columnList;\n}\n\n/**\n * Extract from the datasets array, a unique set of categories.\n * @return {Array<string>} an array of unique categories\n */\nexport function getCategories(datasets) {\n  const categories = datasets.reduce(\n    (cats, dataset) => [\n      ...cats,\n      ...(dataset.classification.categories\n        ? dataset.classification.categories\n        : []),\n    ],\n    [],\n  );\n\n  const counts = categories.reduce(\n    (totals, cat) =>\n      cat in totals\n        ? { ...totals, [cat]: totals[cat] + 1 }\n        : { ...totals, [cat]: 1 },\n    {},\n  );\n  return counts;\n}\n\n/**\n * Extract from the datasets array, a unique set of categories.\n * @return {Array<string>} an array of unique categories\n */\nexport function getDepartments(datasets) {\n  const departments = datasets\n    .map((dataset) =>\n      dataset.classification.domain_metadata.find(\n        (md) => md.key === 'Dataset-Information_Agency',\n      ),\n    )\n    .filter((d) => d)\n    .map((d) => d.value);\n  const counts = departments.reduce(\n    (totals, department) =>\n      department in totals\n        ? { ...totals, [department]: totals[department] + 1 }\n        : { ...totals, [department]: 1 },\n    {},\n  );\n  return counts;\n}\n/**\n * Extract from the datasets array, a unique set of tags.\n * @return {Array<string>} an array of unique tags\n */\nexport function getTagList(datasets) {\n  const tagList = {};\n\n  datasets.forEach((dataset) => {\n    if (dataset.classification.domain_tags) {\n      dataset.classification.domain_tags.forEach((tag) => {\n        if (tag in tagList) {\n          tagList[tag] += 1;\n        } else {\n          tagList[tag] = 1;\n        }\n      });\n    }\n  });\n  return tagList;\n}\n\nexport function getUniqueEntriesCount(dataset, column) {\n  return fetch(\n    `https://data.cityofnewyork.us/resource/${\n      dataset.resource.id\n    }.json?$select=distinct|> select count(*) ${column.replace(/ /g, '_')}`,\n  ).then((r) => r.json());\n}\nexport function getUniqueEntries(dataset, column) {\n  return fetch(\n    `https://data.cityofnewyork.us/resource/${\n      dataset.resource.id\n    }.json?$select=distinct ${column.replace(/ /g, '_')}`,\n  )\n    .then((r) => r.json())\n    .then((r) => {\n      if (r.errorCode || r.error) {\n        console.warn(\n          'Failed to load unique entries for dataset ',\n          dataset,\n          ' column ',\n          column,\n        );\n        return [];\n      }\n      return r.map((entry) => Object.values(entry)[0]);\n    });\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nimport Dexie from 'dexie';\nimport {\n  getManifest,\n  getCategories,\n  getColumns,\n  getTagList,\n  getDepartments,\n} from '../utils/socrata';\n\nconst db = new Dexie('SocrataCache');\ndb.version(1).stores({\n  SocrataCache: 'id',\n});\n\nexport const AppContext = createContext();\n\nconst initalState = {\n  datasets: [],\n  tagList: [],\n  categories: [],\n  departments: [],\n  columns: [],\n  stateLoaded: false,\n};\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'UPDATE_OPEN_DATASET_MANIFEST':\n      return { ...state, datasets: payload };\n    case 'UPDATE_TAGS':\n      return { ...state, tagList: payload };\n    case 'UPDATE_CATEGORIES':\n      return { ...state, categories: payload };\n    case 'UPDATE_COLUMNS':\n      return { ...state, columns: payload };\n    case 'UPDATE_DEPARTMENTS':\n      return { ...state, departments: payload };\n    case 'HYDRATE_STATE':\n      return { ...state, ...payload };\n    case 'SET_LOADED':\n      return { ...state, stateLoaded: true };\n    default:\n      return state;\n  }\n};\n\nexport const StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n\n  // Try to get the state locally from indexed db... if we can't find it there, request it from the\n  // socrata API\n\n  useEffect(() => {\n    db.SocrataCache.get(1).then((result) => {\n      if (result) {\n        const cachedState = JSON.parse(result.data);\n        dispatch({\n          type: 'HYDRATE_STATE',\n          payload: { ...initalState, ...cachedState, cache_loaded: true },\n        });\n        // Set state as loaded to indicate that data is ready to use\n        dispatch({\n          type: 'SET_LOADED',\n        });\n      } else {\n        getManifest().then((manifest) => {\n          const tagList = getTagList(manifest);\n          const categories = getCategories(manifest);\n          const departments = getDepartments(manifest);\n          const columns = getColumns(manifest);\n          dispatch({\n            type: 'UPDATE_OPEN_DATASET_MANIFEST',\n            payload: manifest,\n          });\n          dispatch({\n            type: 'UPDATE_TAGS',\n            payload: tagList,\n          });\n          dispatch({\n            type: 'UPDATE_CATEGORIES',\n            payload: categories,\n          });\n          dispatch({\n            type: 'UPDATE_DEPARTMENTS',\n            payload: departments,\n          });\n          dispatch({\n            type: 'UPDATE_COLUMNS',\n            payload: columns,\n          });\n          dispatch({\n            type: 'SET_LOADED',\n          });\n        });\n      }\n    });\n  }, []);\n\n  // If our datasets change, update the cahced version\n  const {\n    datasets,\n    tagList,\n    columns,\n    categories,\n    departments,\n    stateLoaded,\n  } = state;\n  useEffect(() => {\n    if (stateLoaded) {\n      console.log('writing cache');\n      db.SocrataCache.put({\n        data: JSON.stringify({\n          datasets,\n          tagList,\n          categories,\n          departments,\n          columns,\n        }),\n        id: 1,\n      });\n    }\n  }, [datasets, tagList, categories, columns, departments, stateLoaded]);\n\n  return (\n    <AppContext.Provider value={[state, dispatch]}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useStateValue = () => useContext(AppContext);\n","import { useMemo, useState, useEffect } from 'react';\nimport useFuse from 'react-use-fuse';\nimport { useStateValue } from '../contexts/OpenDataContext';\nimport { findJoinable, getUniqueEntries } from '../utils/socrata';\n\nexport function useStateLoaded() {\n  const [{ stateLoaded }] = useStateValue();\n  return stateLoaded;\n}\n\nexport function useTags() {\n  const [{ tagList }] = useStateValue();\n  return tagList;\n}\n\nexport function useCategories() {\n  const [{ categories }] = useStateValue();\n  return categories;\n}\n\nexport function useDepartments() {\n  const [{ departments }] = useStateValue();\n  return departments;\n}\n\nexport function useColumns() {\n  const [{ columns }] = useStateValue();\n  return columns;\n}\n\nexport function useJoinableDatasets(dataset) {\n  const [{ datasets }] = useStateValue();\n  return useMemo(() => (dataset ? findJoinable(dataset, datasets) : []), [\n    dataset,\n    datasets,\n  ]);\n}\n\nexport function useGetSimilarDatasets(datasetID) {\n  const [similarityMetrics, setSimilarityMetrics] = useState({});\n  const [{ datasets }] = useStateValue();\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/similarity_metrics.json`)\n      .then((r) => r.json())\n      .then((r) => setSimilarityMetrics(r));\n  }, []);\n\n  console.log('datasets ', datasets, similarityMetrics);\n\n  const similarDatasets = useMemo(\n    () =>\n      similarityMetrics[datasetID] && datasets && datasets.length > 0\n        ? similarityMetrics[datasetID].map((match) => ({\n            similarity: match.similarity,\n            dataset: datasets.find((d) => d.resource.id === match.dataset),\n          }))\n        : [],\n\n    [similarityMetrics, datasetID, datasets],\n  );\n  return similarDatasets;\n}\n\nexport function useDataset(datasetID) {\n  const [{ datasets }] = useStateValue();\n  return datasets.find((d) => d.resource.id === datasetID);\n}\n\nexport function useGetDatasetsByIds(ids) {\n  const [{ datasets }] = useStateValue();\n  return useMemo(() => datasets.filter((d) => ids.includes(d.resource.id)), [\n    datasets,\n    ids,\n  ]);\n}\n\nexport function useDatasets({ tags, term, categories, columns, departments }) {\n  const [{ datasets }] = useStateValue();\n\n  const { result: searchedDatasets, search } = useFuse({\n    data: datasets,\n    options: {\n      shouldSort: true,\n      findAllMatches: true,\n      includeMatches: true,\n      keys: ['resource.name', 'resource.description'],\n      caseSensitive: false,\n    },\n  });\n\n  useEffect(() => {\n    search(term);\n  }, [search, term]);\n\n  return useMemo(() => {\n    if (searchedDatasets) {\n      let resultDatasets =\n        searchedDatasets[0] && searchedDatasets[0].item\n          ? searchedDatasets.map((match) => match.item)\n          : [...searchedDatasets];\n\n      const matches =\n        searchedDatasets && searchedDatasets[0] && searchedDatasets[0].item\n          ? searchedDatasets.map((d) => ({\n              id: d.item.resource.id,\n              matches: d.matches,\n            }))\n          : [];\n\n      if (tags && tags.length > 0) {\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.itemclassification.domain_tags.filter((tag) =>\n              tags.includes(tag),\n            ).length > 0,\n        );\n      }\n\n      if (categories && categories.length > 0) {\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.classification.categories.filter((cat) =>\n              categories.includes(cat),\n            ).length > 0,\n        );\n      }\n\n      if (columns && columns.length > 0) {\n        console.log('filtering with columns ', columns);\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.resource.columns_name &&\n            dataset.resource.columns_name.filter((col) => columns.includes(col))\n              .length > 0,\n        );\n      }\n\n      if (departments && departments.length > 0) {\n        resultDatasets = resultDatasets.filter((dataset) =>\n          departments.includes(\n            dataset.classification.domain_metadata.find(\n              (d) => d.key === 'Dataset-Information_Agency',\n            )?.value,\n          ),\n        );\n      }\n\n      return {\n        datasets: resultDatasets,\n        matches: matches.filter((match) =>\n          resultDatasets.find((r) => r.resource.id === match.id),\n        ),\n      };\n    }\n    return datasets;\n  }, [searchedDatasets, tags, categories, columns, departments, datasets]);\n}\n\nexport function useSortDatsetsBy(datasets, type, asc = false) {\n  // console.log('here ', type, asc);\n  return useMemo(() => {\n    // console.log('updating sort ');\n    const result = datasets.sort((a, b) => {\n      let valA = null;\n      let valB = null;\n      switch (type) {\n        case 'Name':\n          valA = a.resource.name;\n          valB = b.resource.name;\n          break;\n        case 'Created At':\n          valA = a.resource.createdAt;\n          valB = b.resource.createdAt;\n          break;\n        case 'Updated At':\n          valA = a.resource.updatedAt;\n          valB = b.resource.updatedAt;\n          break;\n        case 'Downloads':\n          valA = a.resource.download_count;\n          valB = b.resource.download_count;\n          break;\n        case 'Views':\n          valA = a.resource.page_views.page_views_total;\n          valB = b.resource.page_views.page_views_total;\n          break;\n        default:\n      }\n\n      return (valA < valB ? 1 : -1) * (asc ? 1 : -1);\n    });\n    return result;\n  }, [datasets, type, asc]);\n}\n\nexport function useUniqueColumnEntries(dataset, column) {\n  const [uniqueEntries, setUniqueEntries] = useState(null);\n  useEffect(() => {\n    getUniqueEntries(dataset, column).then((res) => {\n      setUniqueEntries({\n        dataset: dataset.resource.id,\n        column,\n        distinct: res,\n      });\n    });\n  }, [dataset, column]);\n  return uniqueEntries;\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport Dexie from 'dexie';\n\nexport const CollectionsContext = createContext();\n\nconst initalState = {\n  datasets: [],\n  name: null,\n  cacheLoaded: false,\n};\n\nconst db = new Dexie('CollectionCache');\ndb.version(1).stores({\n  CollectionCache: 'id',\n});\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'ADD_TO_COLLECTION':\n      return { ...state, datasets: [...state.datasets, payload] };\n    case 'REMOVE_FROM_COLLECTION':\n      return {\n        ...state,\n        datasets: state.datasets.filter((d) => d !== payload),\n      };\n    case 'SET_NAME':\n      return {\n        ...state,\n        name: payload,\n      };\n    case 'CLEAR_COLLECTION':\n      return {\n        ...state,\n        datasets: [],\n      };\n    case 'HYDRATE_STATE':\n      return {\n        ...state,\n        ...payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const CollectionsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n  const { cacheLoaded, datasets, name } = state;\n\n  // Restore state\n  useEffect(() => {\n    db.CollectionCache.get(1).then((result) => {\n      if (result) {\n        const cachedState = JSON.parse(result.data);\n        dispatch({\n          type: 'HYDRATE_STATE',\n          payload: { ...initalState, ...cachedState, cacheLoaded: true },\n        });\n      } else {\n        dispatch({\n          payload: { ...initalState, cacheLoaded: true },\n          type: 'HYDRATE_STATE',\n        });\n      }\n    });\n  }, []);\n\n  // Cache state\n  useEffect(() => {\n    if (cacheLoaded) {\n      db.CollectionCache.put({\n        data: JSON.stringify({\n          datasets,\n          name,\n        }),\n        id: 1,\n      });\n    }\n  }, [cacheLoaded, datasets, name]);\n\n  return (\n    <CollectionsContext.Provider value={[state, dispatch]}>\n      {children}\n    </CollectionsContext.Provider>\n  );\n};\n\nexport const useCollectionsValue = () => useContext(CollectionsContext);\n","import { useCollectionsValue } from '../contexts/CollectionsContext';\n\nexport default function useCollection() {\n  const [state, dispatch] = useCollectionsValue();\n  const addToCollection = (datasetID) =>\n    dispatch({ type: 'ADD_TO_COLLECTION', payload: datasetID });\n  const removeFromCollection = (datasetID) =>\n    dispatch({ type: 'REMOVE_FROM_COLLECTION', payload: datasetID });\n  const setName = (name) => dispatch({ type: 'SET_NAME', payload: name });\n\n  const clearCollection = () => {\n    console.log('clearning');\n    dispatch({ type: 'CLEAR_COLLECTION' });\n  };\n\n  return [\n    state,\n    { clearCollection, addToCollection, removeFromCollection, setName },\n  ];\n}\n","import React from 'react';\n\nexport function formatDate(date) {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n  return new Date(date).toLocaleDateString('en-US', options);\n}\n\nexport function hilightMatches(text, matches) {\n  if (matches) {\n    const result = [];\n    const indices = matches.indices.filter((pair) => pair[1] - pair[0] > 1);\n\n    const highlightedText = text.split('').map((char) => ({\n      char,\n      highlight: false,\n    }));\n\n    indices.forEach((pair) => {\n      // eslint-disable-next-line no-plusplus\n      for (let i = pair[0]; i < pair[1] + 1; i++) {\n        highlightedText[i].highlight = true;\n      }\n    });\n\n    let isHighlighting = false;\n    let curResult = '';\n    highlightedText.forEach(({ char, highlight }) => {\n      if (isHighlighting) {\n        if (highlight) {\n          curResult += char;\n        } else {\n          isHighlighting = false;\n          result.push(<span className=\"hilight\">{curResult}</span>);\n          curResult = char;\n        }\n      } else if (!highlight) {\n        curResult += char;\n      } else {\n        isHighlighting = true;\n        result.push(<span>{curResult}</span>);\n        curResult = char;\n      }\n    });\n    result.push(\n      <span className={isHighlighting ? 'hilight' : ''}>{curResult}</span>,\n    );\n\n    return result;\n  }\n  return text;\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default ({ permalink }) => (\n  <a\n    className=\"external-link\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href={permalink}\n  >\n    <button type=\"button\">\n      View on Open Data&nbsp;\n      <FontAwesomeIcon icon={faExternalLinkAlt} />\n    </button>\n  </a>\n);\n","import React from 'react';\nimport './Dataset.scss';\nimport { Link } from 'react-router-dom';\nimport { hilightMatches, formatDate } from '../../utils/formatters';\n\n// import RawHTML from '../RawHTML/RawHTML';\nimport ViewOnOpenPortal from '../ViewOnOpenPortal/ViewOnOpenPortal';\n\nexport default function Dataset({\n  dataset,\n  onAddToCollection,\n  onRemoveFromCollection,\n  inCollection,\n  viewInOpenPortal = false,\n  similarity,\n  matches,\n}) {\n  const formattedName = hilightMatches(\n    dataset.resource.name,\n    matches?.find((m) => m.key === 'resource.name'),\n  );\n  const formattedDescription = hilightMatches(\n    dataset.resource.description,\n    matches?.find((m) => m.key === 'resource.description'),\n  );\n  return (\n    <div className=\"dataset\" key={dataset.resource.id}>\n      <div className=\"dataset-title\">\n        <Link className=\"title\" to={`/dataset/${dataset.resource.id}`}>\n          <h2>{formattedName}</h2>\n        </Link>\n        <p>{dataset.resource.attribution}</p>\n      </div>\n\n      {similarity && <p>Similarity: {(similarity * 100).toPrecision(2)}%</p>}\n      {onAddToCollection && (\n        <button\n          className=\"collection-button\"\n          type=\"button\"\n          onClick={() =>\n            inCollection\n              ? onRemoveFromCollection(dataset.resource.id)\n              : onAddToCollection(dataset.resource.id)\n          }\n        >\n          {inCollection ? 'Remove from collection' : 'Add to collection'}\n        </button>\n      )}\n      {viewInOpenPortal && <ViewOnOpenPortal permalink={dataset.permalink} />}\n\n      <div className=\"dataset-last-update\">\n        <p className=\"header\">Last Updated</p>\n        <p>{formatDate(dataset.resource.updatedAt)}</p>\n      </div>\n      <div className=\"dataset-description\">{formattedDescription}</div>\n      <div className=\"dataset-meta\">\n        <div className=\"update-frequency\">\n          <span>Update frequency:</span>\n          weekly\n        </div>\n        <div className=\"dataset-tags\">\n          <span>Tags:</span>\n          {dataset.classification.domain_tags.join(', ')}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './SortMenu.scss';\n\nexport default function SortMenu({\n  options,\n  selected,\n  direction,\n  onSelected,\n  onDirection,\n}) {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div className={`sort-menu ${expanded ? 'expanded' : ''}`}>\n      <div className=\"wrapper\">\n        <span>Sort By:</span>\n        <ul>\n          <li onClick={() => setExpanded(!expanded)}>{selected}</li>\n          {options\n            .filter((o) => o !== selected)\n            .map((option) => (\n              <li\n                onClick={() => {\n                  onSelected(option);\n                  setExpanded(false);\n                }}\n                key={option}\n              >\n                {option}{' '}\n              </li>\n            ))}\n        </ul>\n        <FontAwesomeIcon\n          onClick={() => onDirection(direction === 'asc' ? 'desc' : 'asc')}\n          icon={direction === 'asc' ? faSortUp : faSortDown}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './DatasetLoading.scss';\nimport '../Loading.scss';\n\nexport default () => (\n  <div className=\"dataset-loading\">\n    <div className=\"dataset-list\">\n      {[...Array(4)].map((_, i) => (\n        <div key={i} className=\"dataset\">\n          <div className=\"dataset-title animate\" />\n          <p className=\"dataset-description animate\" />\n          <div className=\"dataset-meta animate\" />\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { useState, useMemo, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\n\nexport default function usePagination(data, perPage = 20) {\n  const pages = useMemo(() => Math.ceil(data.length / perPage), [\n    data,\n    perPage,\n  ]);\n  const [currentPageNo, setCurrentPageNo] = useState(0);\n\n  useEffect(() => {\n    setCurrentPageNo(0);\n  }, [pages]);\n\n  const pageButtons = (\n    <nav>\n      <ReactPaginate\n        previousLabel=\"previous\"\n        nextLabel=\"next\"\n        breakLabel=\"...\"\n        breakClassName=\"break-me\"\n        pageCount={pages}\n        onPageChange={({ selected: page }) => {\n          setCurrentPageNo(page);\n        }}\n        containerClassName=\"pagination\"\n        subContainerClassName=\"pages pagination\"\n        activeClassName=\"active\"\n        previousClassName=\"page-item\"\n        nextClassName=\"page-item\"\n        pageClassName=\"page-item\"\n      />\n    </nav>\n  );\n\n  const content = data.slice(\n    currentPageNo * perPage,\n    (currentPageNo + 1) * perPage,\n  );\n\n  return [\n    content,\n    {\n      pageButtons,\n    },\n  ];\n}\n","import React from 'react';\nimport './FilterLoading.scss';\nimport '../Loading.scss';\n\nexport default () => (\n  <div className=\"\">\n    <div className=\"filter-loading-wrapper\">\n      {[...Array(10)].map((_, i) => (\n        <li key={i} className=\"multi-buttons\">\n          <input type=\"checkbox\" disabled className=\"checkbox\" />\n          <span className=\"animate item-name\" />\n          <span className=\"animate pill\" />\n        </li>\n      ))}\n    </div>\n  </div>\n);\n","import React, { useState, useMemo, useEffect } from 'react';\nimport useFuse from 'react-use-fuse';\nimport usePagenation from '../../hooks/pagination';\nimport { useStateLoaded } from '../../hooks/datasets';\nimport FilterLoading from '../Loading/FilterLoading/FilterLoading';\nimport './MultiSelector.scss';\n\nexport default function MultiSelector({ items, selected, onChange, title }) {\n  const clearItems = () => {\n    onChange([]);\n  };\n\n  const loaded = useStateLoaded();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const toggleItem = (item) => {\n    const newSelection = selected.includes(item)\n      ? selected.filter((i) => i !== item)\n      : [...selected, item];\n    onChange(newSelection);\n  };\n\n  const itemNames = useMemo(() => items && Object.keys(items), [items]);\n\n  const { result: filteredItems, search } = useFuse({\n    data: itemNames.map((item) => ({\n      name: item,\n    })),\n    options: {\n      keys: ['name'],\n      shouldSort: false,\n      findAllMatches: true,\n      caseSensitive: false,\n    },\n  });\n\n  useEffect(() => search(searchTerm), [search, searchTerm]);\n\n  const sortedItems = useMemo(\n    () =>\n      filteredItems\n        ?.map((item) => item.name)\n        .sort((a, b) => (items[a] < items[b] ? 1 : -1)),\n    [filteredItems, items],\n  );\n\n  const [pagedItems, { pageButtons }] = usePagenation(sortedItems, 10);\n\n  return (\n    <div className=\"mutli-selector\">\n      <h2>{title}</h2>\n      <div className=\"search\">\n        <input\n          disabled={!loaded}\n          placeholder=\"filter\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </div>\n      <ul className=\"multi-list\">\n        {!loaded ? (\n          <FilterLoading />\n        ) : (\n          pagedItems.map((item) => (\n            // eslint-disable-next-line\n            <li\n              key={item}\n              onClick={() => toggleItem(item)}\n              className={`multi-buttons ${\n                selected && selected.includes(item) ? 'selected' : ''\n              }`}\n            >\n              <input\n                type=\"checkbox\"\n                checked={selected && selected.includes(item)}\n                className=\"checkbox\"\n              />\n              <span className=\"item-name\">{item}</span>\n              <span className=\"pill\">{items[item]}</span>\n            </li>\n          ))\n        )}\n      </ul>\n      {pageButtons}\n      {selected && selected.length > 0 && (\n        <button type=\"button\" onClick={clearItems}>\n          clear\n        </button>\n      )}\n    </div>\n  );\n}\n","\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nexport const SearchContext = createContext();\n\nconst initalState={\n  term:'',\n  tags:[],\n  categories:[],\n  departmerts:[],\n  columns:[],\n  sortVariable:'name',\n  sortOrder:'asc'\n}\n\n\nconst reducer = (state,action)=>{\n   const {type,payload} = action; \n   switch (type){\n     case \"ADD_TAG\":\n       return {...state, tags: [...state.tags, payload]}\n     case \"REMOVE_TAG\":\n        return {...state, tags: state.tags.filter(t=>t!==payload) }\n     case \"ADD_CATEGORY\":\n       return {...state, categories: [...state.categories, payload]}\n     case \"REMOVE_CATEGORY\":\n        return {...state, category: state.category.filter(t=>t!==payload) }\n     case \"ADD_COLUMN\":\n       return {...state, columns: [...state.columns, payload]}\n     case \"REMOVE_COLUMN\":\n        return {...state, columns: state.columns.filter(t=>t!==payload) }\n     case \"ADD_DEPARTMNET\":\n       return {...state, departments: [...state.departments, payload]}\n     case \"REMOVE_DEPARTMENT\":\n        return {...state, departments: state.departments.filter(t=>t!==payload) }\n     case \"CLEAR\":\n        return initalState \n     default:\n       return state;\n   }\n}\n\n\nexport const SearchProvider = ({children})=>{\n  const[state,dispatch] = useReducer(reducer,initalState)\n\n  return (\n    <SearchContext.Provider value={[state, dispatch]}>\n      {children}\n    </SearchContext.Provider>\n  );\n\n}\n\nexport const useSearchState= () => useContext(SearchContext);\n","import React, { useState } from 'react';\nimport './HomePage.scss';\nimport { DebounceInput } from 'react-debounce-input';\nimport {\n  useCategories,\n  useTags,\n  useDepartments,\n  useDatasets,\n  useColumns,\n  useStateLoaded,\n  useSortDatsetsBy,\n} from '../../hooks/datasets';\nimport useCollection from '../../hooks/collections';\nimport Dataset from '../../components/Dataset/Dataset';\nimport SortMenu from '../../components/SortMenu/SortMenu';\nimport DatasetLoading from '../../components/Loading/DatasetLoading/DatasetLoading';\nimport usePagination from '../../hooks/pagination';\nimport MultiSelector from '../../components/MultiSelector/MultiSelector';\nimport { useSearchState } from '../../contexts/SearchContext';\n\nexport default function HomePage() {\n  const categories = useCategories();\n  const tags = useTags();\n  const departments = useDepartments();\n  const columns = useColumns();\n  const loaded = useStateLoaded();\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedColumns, setSelectedColumns] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('Name');\n  const [sortDirection, setSortDirection] = useState('asc');\n\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCollection();\n\n  const { datasets, matches } = useDatasets({\n    tags: selectedTags,\n    categories: selectedCategories,\n    columns: selectedColumns,\n    term: searchTerm,\n    departments: selectedDepartments,\n  });\n\n  const sortedDatasets = useSortDatsetsBy(\n    datasets,\n    sortBy,\n    sortDirection === 'asc',\n  );\n\n  const [searchState, dispatch] = useSearchState();\n\n  const [pagedDatasets, { pageButtons }] = usePagination(sortedDatasets, 5);\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"filters\">\n        <div className=\"categories\">\n          <MultiSelector\n            items={categories}\n            onChange={setSelectedCategories}\n            selected={selectedCategories}\n            title=\"Categories\"\n          />\n        </div>\n        <div className=\"departments\">\n          <MultiSelector\n            items={departments}\n            selected={selectedDepartments}\n            onChange={setSelectedDepartments}\n            title=\"Departments\"\n          />\n        </div>\n        <div className=\"columns\">\n          <MultiSelector\n            items={columns}\n            selected={selectedColumns}\n            onChange={setSelectedColumns}\n            title=\"Columns\"\n          />\n        </div>\n        <div className=\"tags\">\n          <MultiSelector\n            items={tags}\n            selected={selectedTags}\n            onChange={setSelectedTags}\n            title=\"Tags\"\n          />\n        </div>\n      </div>\n      <div className=\"datasets\">\n        <div className=\"search\">\n          <DebounceInput\n            type=\"text\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n            value={searchTerm}\n            debounceTimeout={300}\n            placeholder=\"Search for dataset\"\n          />\n        </div>\n        <div className=\"count-and-sort\">\n          <p>\n            <span className=\"bold\">{datasets.length}</span> datasets\n          </p>\n\n          <SortMenu\n            options={['Name', 'Created At', 'Updated At', 'Downloads', 'Views']}\n            onDirection={(direction) => setSortDirection(direction)}\n            selected={sortBy}\n            direction={sortDirection}\n            onSelected={(selected) => setSortBy(selected)}\n          />\n        </div>\n\n        <ul className=\"dataset-list\">\n          {loaded ? (\n            pagedDatasets.map((dataset) => (\n              <Dataset\n                key={dataset?.resource?.id}\n                dataset={dataset}\n                inCollection={collection.datasets.includes(dataset.resource.id)}\n                onAddToCollection={addToCollection}\n                onRemoveFromCollection={removeFromCollection}\n                matches={\n                  matches.find((match) => match.id === dataset?.resource?.id)\n                    ?.matches\n                }\n              />\n            ))\n          ) : (\n            <DatasetLoading />\n          )}\n        </ul>\n        <div>{pageButtons}</div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport DOMPurify from 'dompurify';\n\n/* Simple component to sanitize HTML and display it.\n *  Need this for making sure we can display the\n *  dataset descriptions properly\n */\n\nexport default function RawHTML({ html, className }) {\n  const cleanedHTML = DOMPurify.sanitize(html);\n  return (\n    <div\n      className={className}\n      dangerouslySetInnerHTML={{ __html: cleanedHTML }}\n    />\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFile } from '@fortawesome/free-regular-svg-icons';\nimport { Link } from 'react-router-dom';\nimport {\n  faAngleRight,\n  faAngleDown,\n  faTable,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useUniqueColumnEntries } from '../../hooks/datasets';\nimport useCollection from '../../hooks/collections';\nimport './JoinColumn.scss';\n\nexport default function ColumnJoin({ rightDataset, joinCol, parentUniques }) {\n  const [collapsed, setCollapsed] = useState(true);\n  const uniqueIds = useUniqueColumnEntries(rightDataset, joinCol);\n  const jointlyUnique = useMemo(\n    () =>\n      uniqueIds && parentUniques\n        ? parentUniques.filter((e) => uniqueIds.distinct.includes(e))\n        : [],\n    [uniqueIds, parentUniques],\n  );\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCollection();\n\n  return (\n    <div className=\"join-column\">\n      <div className=\"join-column-row\">\n        <span\n          onClick={() => setCollapsed(!collapsed)}\n          onKeyDown={(e) => {\n            if (e.keycode === 32) {\n              setCollapsed(!collapsed);\n            }\n          }}\n          className=\"join-column-name\"\n          role=\"button\"\n          tabIndex=\"0\"\n        >\n          <FontAwesomeIcon icon={collapsed ? faAngleRight : faAngleDown} />\n          <FontAwesomeIcon icon={faFile} />\n          {rightDataset.resource.name}\n        </span>\n        <span>\n          {jointlyUnique ? `${jointlyUnique.length} matching ids` : 'loading'}\n        </span>\n        <span>\n          <Link to={`/dataset/${rightDataset.resource.id}`}>View dataset</Link>\n        </span>\n        <button\n          type=\"button\"\n          onClick={() =>\n            collection.datasets.includes(rightDataset.resource.id)\n              ? removeFromCollection(rightDataset.resource.id)\n              : addToCollection(rightDataset.resource.id)\n          }\n        >\n          {collection.datasets.includes(rightDataset.resource.id)\n            ? 'Remove dataset from collection'\n            : 'Add dataset to collection'}\n        </button>\n      </div>\n      {!collapsed && uniqueIds && (\n        <div className=\"join-column-unique\">\n          <h3>COMMON IDS</h3>\n          <ul>\n            {jointlyUnique.slice(0, 10).map((uid) => (\n              <li key={uid}>\n                <div className=\"bar\" />\n                <FontAwesomeIcon icon={faTable} />\n                <span>{uid}</span>\n              </li>\n            ))}\n          </ul>\n          <div>and {jointlyUnique.length - 10} more</div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport JoinColumn from '../JoinColumn/JoinColumn';\nimport './ColumnSuggestions.scss';\nimport usePagination from '../../hooks/pagination';\nimport { getUniqueEntries } from '../../utils/socrata';\n\nexport default function ColumnSuggestions({ column, joins, dataset }) {\n  const [columnUniques, setColumnsUniques] = useState([]);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const dataTypeForCol =\n    dataset.resource.columns_datatype[\n      dataset.resource.columns_name.indexOf(column)\n    ];\n\n  const [pagedJoins, { pageButtons }] = usePagination(joins, 10);\n\n  useEffect(() => {\n    if (joins.length > 0) {\n      getUniqueEntries(dataset, column).then((res) => {\n        setColumnsUniques(res);\n      });\n    }\n  }, [column, dataset, joins]);\n\n  return (\n    <div className={`column-suggestions ${collapsed ? 'collapsed' : ''}`}>\n      <div\n        className=\"table-row\"\n        role=\"button\"\n        onKeydown={(e) => {\n          if (e.keyCode === 36) {\n            setCollapsed(!collapsed);\n          }\n        }}\n        onClick={() => setCollapsed(!collapsed)}\n        tabIndex=\"0\"\n      >\n        <span className=\"column-collapse\">\n          <FontAwesomeIcon icon={collapsed ? faAngleRight : faAngleDown} />{' '}\n          {column}\n        </span>\n        <span>{dataTypeForCol}</span>\n        <span>{joins.length} datasets also have this column</span>\n      </div>\n      {!collapsed && pagedJoins && (\n        <div className=\"columns-suggestions-matches\">\n          <h3>MATCHING DATSETS</h3>\n          {joins && (\n            <ul>\n              {pagedJoins.map((join) => (\n                <li key={join.dataset.resource.id}>\n                  <JoinColumn\n                    leftDataset={dataset}\n                    rightDataset={join.dataset}\n                    joinCol={column}\n                    parentUniques={columnUniques}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n          {pageButtons}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useCallback, useMemo } from 'react';\nimport ColumnSuggestions from '../ColumnSuggestions/ColumnSuggestions';\nimport './ColumnMatchTable.scss';\n\nexport default function ColumnMatchTable({ dataset, joinColumns }) {\n  const columns = dataset.resource.columns_name;\n\n  const suggestionsForColumn = useCallback(\n    (col, candidates) => {\n      return columns\n        ? candidates.filter((c) =>\n            c.joinableColumns.includes(col.toLowerCase()),\n          )\n        : [];\n    },\n    [columns],\n  );\n\n  const sortedColumns = useMemo(\n    () =>\n      joinColumns\n        ? columns.sort((a, b) =>\n            suggestionsForColumn(a, joinColumns).length <\n            suggestionsForColumn(b, joinColumns).length\n              ? 1\n              : -1,\n          )\n        : [],\n    [columns, joinColumns, suggestionsForColumn],\n  );\n\n  return (\n    <div className=\"column-match-table\">\n      <div className=\"table-header\">\n        <ul className=\"table-row\">\n          <li>Column name</li>\n          <li>Column type</li>\n          <li>No potential joins</li>\n        </ul>\n      </div>\n      {sortedColumns.map((column) => (\n        <ColumnSuggestions\n          dataset={dataset}\n          column={column}\n          joins={suggestionsForColumn(column, joinColumns)}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Breadcrumb.scss';\n\nconst Breadcrumb = ({ currentPage }) => (\n  <div className=\"Breadcrumb\">\n    <Link to=\"/\">Home</Link>\n    <span> / {currentPage}</span>\n  </div>\n);\n\nexport default Breadcrumb;\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport RawHTML from '../../components/RawHTML/RawHTML';\nimport ColumnMatchTable from '../../components/ColumnMatchTable/ColumnMatchTable';\nimport Dataset from '../../components/Dataset/Dataset';\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\nimport useCollection from '../../hooks/collections';\nimport {\n  useDataset,\n  useJoinableDatasets,\n  useGetSimilarDatasets,\n} from '../../hooks/datasets';\nimport './DatasetPage.scss';\nimport ViewOnOpenPortal from '../../components/ViewOnOpenPortal/ViewOnOpenPortal';\n\nconst formatDate = (date) => moment(date).format('MMMM DD, YYYY');\n\nexport default function DatasetPage({ match }) {\n  const { datasetID } = match.params;\n  const dataset = useDataset(datasetID);\n  const joins = useJoinableDatasets(dataset);\n  const [activeTab, setActiveTab] = useState('joins');\n  const resource = dataset?.resource;\n  const pageViews = resource?.page_views;\n  const classification = dataset?.classification;\n  const domainMetadata = classification?.domain_metadata;\n  const similarDatasets = useGetSimilarDatasets(datasetID);\n  const mostSimilarDatasets = similarDatasets\n    .filter((suggestion) => suggestion.dataset.resource.id !== datasetID)\n    .slice(0, 10);\n\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCollection();\n\n  const updatedAutomation = domainMetadata?.find(\n    ({ key, value }) => key === 'Update_Automation' && value === 'No',\n  )?.value;\n\n  const updateFrequency = domainMetadata?.find(\n    ({ key }) => key === 'Update_Update-Frequency',\n  )?.value;\n\n  const informationAgency = domainMetadata?.find(\n    ({ key }) => key === 'Dataset-Information_Agency',\n  )?.value;\n\n  return dataset ? (\n    <div className=\"dataset-page\">\n      <div className=\"dataset-details\">\n        <section>\n          <Breadcrumb currentPage={resource.name} />\n        </section>\n        <section>\n          <h2>{resource.name}</h2>\n          <p>{informationAgency}</p>\n          <RawHTML html={resource.description} />\n          <button\n            type=\"button\"\n            className=\"collection-button\"\n            onClick={() =>\n              collection.datasets.includes(datasetID)\n                ? removeFromCollection(datasetID)\n                : addToCollection(datasetID)\n            }\n          >\n            {collection.datasets.includes(datasetID)\n              ? 'Remove From Collection'\n              : 'Add to Collection'}{' '}\n          </button>\n        </section>\n        <section className=\"external-link\">\n          <p>Powered by</p>\n          <img\n            alt=\"NYC Open Data\"\n            src=\"https://opendata.cityofnewyork.us/wp-content/themes/opendata-wp/assets/img/nyc-open-data-logo.svg\"\n          />\n          <ViewOnOpenPortal permalink={dataset.permalink} />\n        </section>\n        <section className=\"metadata\">\n          <h2>Metadata</h2>\n          <h3>Update Automation</h3>\n          <p>{updatedAutomation}</p>\n          <h3>Update Frequency</h3>\n          <p>{updateFrequency}</p>\n          <h3>Dataset Owner</h3>\n          <p>{dataset?.owner.display_name}</p>\n          {informationAgency && (\n            <>\n              <h3>Agency</h3>\n              <p>{informationAgency}</p>\n            </>\n          )}\n          {classification?.domain_category && (\n            <>\n              <h3>Category</h3>\n              <p>{classification.domain_category}</p>\n            </>\n          )}\n          <h3>Updated</h3>\n          <p>{formatDate(resource?.updatedAt)}</p>\n          <h3>Metadata Updated at</h3>\n          <p>{formatDate(resource?.metadata_updated_at)}</p>\n          <h3>Page Views</h3>\n          <p>{pageViews?.page_views_total}</p>\n        </section>\n      </div>\n      <div className=\"dataset-recomendataions\">\n        <h2>Other datasets to consider</h2>\n        <div className=\"tabs\">\n          <button\n            type=\"button\"\n            className={activeTab === 'joins' ? 'active' : ''}\n            onClick={() => setActiveTab('joins')}\n          >\n            Potential Join Columns\n          </button>\n          <button\n            type=\"button\"\n            className={activeTab === 'theme' ? 'active' : ''}\n            onClick={() => setActiveTab('theme')}\n          >\n            Thematically Similar\n          </button>\n        </div>\n        {activeTab === 'joins' && (\n          <>\n            <p>\n              Find datasets that share a column with the current dataset. These\n              columns might be interesting datasets to join with the current\n              dataset to add additional details or bring in context\n            </p>\n            <ColumnMatchTable dataset={dataset} joinColumns={joins} />\n          </>\n        )}\n        {activeTab === 'theme' && (\n          <>\n            <p>\n              Dataset that are thematically similar based on name and\n              description\n            </p>\n            {mostSimilarDatasets.map((d) => (\n              <Dataset\n                onAddToCollection={addToCollection}\n                onRemoveFromCollection={removeFromCollection}\n                dataset={d.dataset}\n                similarity={d.similarity}\n                inCollection={collection.datasets.includes(\n                  d.dataset.resource.id,\n                )}\n              />\n            ))}\n          </>\n        )}\n      </div>\n    </div>\n  ) : (\n    <h1>Loading...</h1>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport useCollection from '../../hooks/collections';\nimport './CollectionBar.scss';\n\nexport default function CollectionContext() {\n  const [collection, { clearCollection }] = useCollection();\n  if (collection.datasets && collection.datasets.length > 0) {\n    return (\n      <div className=\"collection-bar\">\n        <span>{collection.datasets.length} datasets selected</span>\n        <Link to=\"/collection/new\">\n          <button type=\"submit\">Create Collection</button>\n        </Link>\n        <button type=\"button\" onClick={clearCollection}>\n          Clear\n        </button>\n      </div>\n    );\n  }\n  return null;\n}\n","import { useState } from 'react';\n\nconst copyToClipboard = async (text) => {\n  if (navigator.clipboard) {\n    try {\n      await navigator.clipboard.writeText(text);\n      return true;\n    } catch (e) {\n      // Suppress error and try fallback method\n    }\n  }\n\n  if (\n    document.queryCommandSupported &&\n    document.queryCommandSupported('copy')\n  ) {\n    const textarea = document.createElement('textarea');\n    textarea.style.opacity = '0';\n    textarea.textContent = text;\n    // Prevent scrolling to bottom of page\n    textarea.style.position = 'fixed';\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy');\n    } catch (e) {\n      // Security exception may be thrown by some browsers.\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport default (url) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const setCopied = async () => {\n    await copyToClipboard(url);\n    setIsCopied(true);\n  };\n  return [isCopied, setCopied];\n};\n","import React from 'react';\nimport './CollectionPage.scss';\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  TwitterShareButton,\n  EmailIcon,\n  FacebookIcon,\n  TwitterIcon,\n} from 'react-share';\nimport useClipboard from '../../hooks/useClipboard';\nimport { useGetDatasetsByIds } from '../../hooks/datasets';\nimport Dataset from '../../components/Dataset/Dataset';\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\n\nexport default function CollectionPage({ match }) {\n  const { name, datasetIDs } = match.params;\n  const url = window.location.href;\n  const datasets = useGetDatasetsByIds(datasetIDs.split(','));\n\n  const [isCopied, setCopied] = useClipboard(url);\n  return (\n    <div className=\"collections-page\">\n      <div className=\"collections-details\">\n        <section>\n          <Breadcrumb currentPage=\"Collections\" />\n        </section>\n        <section>\n          <h2>{name}</h2>\n          <p>\n            {datasets.length} dataset{datasets.length > 1 ? 's' : ''}\n          </p>\n        </section>\n\n        <div>\n          <h3>Share this collection:</h3>\n          <p className=\"dataset-url\">{url} </p>\n          <button type=\"button\" onClick={setCopied}>\n            Copy link\n          </button>\n          <span>{isCopied ? 'Copied!' : ' '} </span>\n          <p className=\"share-icons\">\n            <FacebookShareButton url={url}>\n              <FacebookIcon size={36} />\n            </FacebookShareButton>{' '}\n            <TwitterShareButton url={url}>\n              <TwitterIcon size={36} />\n            </TwitterShareButton>\n            <EmailShareButton url={url}>\n              <EmailIcon size={36} />\n            </EmailShareButton>\n          </p>\n        </div>\n      </div>\n      <div className=\"collections-content\">\n        {datasets.map((dataset) => (\n          <Dataset viewInOpenPortal key={dataset.id} dataset={dataset} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport useCollection from '../../hooks/collections';\nimport { useGetDatasetsByIds } from '../../hooks/datasets';\nimport './CreateCollectionModal.scss';\n\nexport default function CreateCollectionModal() {\n  const [collection, { clearCollection, setName }] = useCollection();\n  const datasets = useGetDatasetsByIds(collection.datasets);\n\n  return (\n    <div className=\"create-collection-modal\">\n      <h3>Create collection with the following datasets</h3>\n      <ul>\n        {datasets.map((dataset) => (\n          <li>{dataset.resource.name}</li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        value={collection.name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <Link\n        to={`/collection/${collection.name}/${collection.datasets.join(',')}`}\n      >\n        <button type=\"submit\" onClick={clearCollection}>\n          Create\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function GHPagesRedirect() {\n  const [redirect, setRedirect] = useState(null);\n  useEffect(() => {\n    // This is for dealing with the 404 redirect issue on gh pages\n    const target = sessionStorage.redirect;\n    delete sessionStorage.redirect;\n\n    if (target && target !== window.location.href) {\n      let to = target;\n      if (process.env.PUBLIC_URL) {\n        to = `/${to\n          .split('/')\n          .slice(4)\n          .join('/')}`;\n      }\n      setRedirect(to);\n    }\n  }, []);\n\n  if (redirect) {\n    return <Redirect to={redirect} />;\n  }\n  return <></>;\n}\n","import React from 'react';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n  Link,\n} from 'react-router-dom';\nimport { ModalContainer, ModalRoute } from 'react-router-modal';\n\nimport HomePage from './layout/HomePage/HomePage';\nimport DatasetPage from './layout/DatasetPage/DatasetPage';\nimport CollectionBar from './components/CollectionBar/CollectionBar';\nimport CollectionPage from './layout/CollectionPage/CollectionPage';\nimport CreateCollectionModal from './components/CreateCollectionModal/CreateCollectionModal';\nimport GHPagesRedirect from './components/GHPagesRedirect/GHPagesRedirect';\n\nimport 'react-router-modal/css/react-router-modal.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <ModalContainer />\n        <header>\n          <Link className=\"title\" to=\"/\">\n            <h1>Data Clinic</h1>\n          </Link>\n        </header>\n        <div className=\"content\">\n          <GHPagesRedirect />\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/dataset/:datasetID\" exact component={DatasetPage} />\n            <Route\n              path=\"/collection/:name/:datasetIDs\"\n              exact\n              component={CollectionPage}\n            />\n\n            <ModalRoute\n              path=\"/collection/new\"\n              parentPath=\"/\"\n              component={CreateCollectionModal}\n            />\n            <Redirect from=\"/\" to=\"/\" />\n          </Switch>\n          <CollectionBar />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'normalize.css'; // Ensure consistent layout across browsers\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './contexts/OpenDataContext';\nimport { SearchProvider } from './contexts/SearchContext';\nimport { CollectionsProvider } from './contexts/CollectionsContext';\n\nReactDOM.render(\n  <SearchProvider>\n      <StateProvider>\n        <CollectionsProvider>\n          <App />\n        </CollectionsProvider>\n            </StateProvider>\n  </SearchProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}