{"version":3,"sources":["utils/socrata.js","contexts/OpenDataContext.jsx","hooks/datasets.js","contexts/CollectionsContext.jsx","hooks/collections.js","components/RawHTML/RawHTML.jsx","components/Dataset/Dataset.jsx","utils/formatters.js","components/SortMenu/SortMenu.jsx","components/Loading/DatasetLoading/DatasetLoading.jsx","hooks/pagination.jsx","components/Loading/FilterLoading/FilterLoading.jsx","components/MultiSelector/MultiSelector.jsx","layout/HomePage/HomePage.jsx","components/JoinColumn/JoinColumn.jsx","components/ColumnSuggestions/ColumnSuggestions.jsx","components/ColumnMatchTable/ColumnMatchTable.jsx","layout/DatasetPage/DatasetPage.jsx","components/CollectionBar/CollectionBar.jsx","hooks/useClipboard.js","layout/CollectionPage/CollectionPage.jsx","components/CreateCollectionModal/CreateCollectionModal.jsx","components/GHPagesRedirect/GHPagesRedirect.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["SOCRATA_NY_OPENDATA_ENDPOINT","getMaifestPage","pageNo","a","async","limit","fetch","then","r","json","matachableColumnsForDataset","dataset","Set","resource","columns_name","columns_field_name","hasJoinableMatch","columns","candidate","candidateCols","intersection","filter","x","has","Array","from","getUniqueEntries","column","id","replace","errorCode","map","entry","Object","values","db","Dexie","version","stores","SocrataCache","AppContext","createContext","initalState","datasets","tagList","categories","departments","stateLoaded","reducer","state","action","type","payload","useStateValue","useContext","useStateLoaded","useJoinableDatasets","useMemo","cols","joinableColumns","match","length","findJoinable","useGetDatasetsByIds","ids","d","includes","CollectionsContext","name","cacheLoaded","CollectionCache","useCollection","dispatch","clearCollection","console","log","addToCollection","datasetID","removeFromCollection","setName","RawHTML","html","className","cleanedHTML","DOMPurify","sanitize","dangerouslySetInnerHTML","__html","Dataset","date","onAddToCollection","onRemoveFromCollection","inCollection","viewInOpenPortal","similarity","key","to","attribution","toPrecision","onClick","target","rel","href","permalink","icon","faExternalLinkAlt","updatedAt","Date","toLocaleDateString","year","month","day","description","classification","domain_tags","join","SortMenu","options","selected","direction","onSelected","onDirection","useState","expanded","setExpanded","o","option","faSortUp","faSortDown","_","i","usePagination","data","perPage","pages","Math","ceil","currentPageNo","setCurrentPageNo","useEffect","pageButtons","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","onPageChange","page","containerClassName","subContainerClassName","activeClassName","previousClassName","nextClassName","pageClassName","content","slice","disabled","MultiSelector","items","onChange","title","loaded","searchTerm","setSearchTerm","itemNames","keys","item","useFuse","shouldSort","findAllMatches","caseSensitive","filteredItems","result","search","usePagenation","sort","b","pagedItems","placeholder","value","e","newSelection","toggleItem","checked","HomePage","useCategories","tags","useTags","useDepartments","useColumns","selectedTags","setSelectedTags","selectedColumns","setSelectedColumns","selectedCategories","setSelectedCategories","selectedDepartments","setSelectedDepartments","sortBy","setSortBy","sortDirection","setSortDirection","collection","term","searchedDatasets","resultDatasets","tag","cat","col","domain_metadata","find","useDatasets","asc","valA","valB","createdAt","download_count","page_views","page_views_total","useSortDatsetsBy","pagedDatasets","debounceTimeout","ColumnJoin","rightDataset","joinCol","parentUniques","collapsed","setCollapsed","uniqueIds","uniqueEntries","setUniqueEntries","res","distinct","useUniqueColumnEntries","jointlyUnique","onKeyDown","keycode","role","tabIndex","faAngleRight","faAngleDown","faFile","uid","faTable","ColumnSuggestions","joins","columnUniques","setColumnsUniques","dataTypeForCol","columns_datatype","indexOf","pagedJoins","onKeydown","keyCode","leftDataset","ColumnMatchTable","joinColumns","suggestionsForColumn","useCallback","candidates","c","sortedColumns","formatDate","moment","format","DatasetPage","params","useDataset","activeTab","setActiveTab","pageViews","domainMetadata","similarDatasets","similarityMetrics","setSimilarityMetrics","process","useGetSimilarDatasets","updatedAutomation","updateFrequency","informationAgency","alt","src","owner","display_name","domain_category","metadata_updated_at","CollectionContext","copyToClipboard","text","navigator","clipboard","writeText","document","queryCommandSupported","textarea","createElement","style","opacity","textContent","position","body","appendChild","select","execCommand","removeChild","CollectionPage","datasetIDs","url","window","location","split","isCopied","setIsCopied","useClipboard","setCopied","FacebookShareButton","FacebookIcon","size","TwitterShareButton","TwitterIcon","EmailShareButton","EmailIcon","CreateCollectionModal","GHPagesRedirect","redirect","setRedirect","sessionStorage","App","basename","path","exact","component","parentPath","Boolean","hostname","ReactDOM","render","children","useReducer","get","cachedState","JSON","parse","cache_loaded","firstPage","totalEntries","resultSetSize","Promise","all","resp","results","list","reduce","datasetPage","allDatasets","getManifest","manifest","forEach","getTagList","cats","totals","getCategories","md","department","getDepartments","columnList","getColumns","put","stringify","Provider","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b5e868c.chunk.js","sourcesContent":["const SOCRATA_NY_OPENDATA_ENDPOINT =\n  'https://api.us.socrata.com/api/catalog/v1?domains=data.cityofnewyork.us&search_context=data.cityofnewyork.us';\n\nasync function getMaifestPage(pageNo, limit = 100) {\n  return fetch(\n    `${SOCRATA_NY_OPENDATA_ENDPOINT}&offset=${pageNo * limit}&limit=${limit}`,\n  ).then((r) => r.json());\n}\n\nfunction matachableColumnsForDataset(dataset) {\n  return new Set([\n    ...dataset.resource.columns_name,\n    ...dataset.resource.columns_field_name,\n  ]);\n}\n\nfunction hasJoinableMatch(columns, candidate) {\n  const candidateCols = matachableColumnsForDataset(candidate);\n  const intersection = new Set(\n    [...columns].filter(\n      (x) => candidateCols.has(x), // && ALLOWED_JOIN_COLUMNS.includes(x),\n    ),\n  );\n  return Array.from(intersection);\n}\n\nexport function findJoinable(dataset, datasets) {\n  const cols = matachableColumnsForDataset(dataset);\n  const matches = datasets\n    .map((candidate) => ({\n      dataset: candidate,\n      joinableColumns: hasJoinableMatch(cols, candidate),\n    }))\n    .filter(\n      (match) =>\n        match.joinableColumns.length > 0 &&\n        match.dataset.resource.id !== dataset.resource.id,\n    );\n  return matches;\n}\n\n/**\n * Get the full manifest from Socrata. This should be cached locally and updated in a smart way.\n *\n * @return {Promise(Array)} a promise that resolves to an array of the datasets\n */\nexport async function getManifest() {\n  const firstPage = await getMaifestPage(0, 1);\n  const totalEntries = firstPage.resultSetSize;\n  const pages = Math.ceil(totalEntries / 100);\n  return Promise.all(\n    [...Array(pages)].map((_, i) =>\n      getMaifestPage(i).then((resp) => resp.results),\n    ),\n  ).then((list) => {\n    return list.reduce(\n      (datasetPage, allDatasets) => [...allDatasets, ...datasetPage],\n      [],\n    );\n  });\n}\n\n/**\n * Extract from the datasets array, a unique set of columns.\n * @return {Array<string>} an array of unique categories\n */\nexport function getColumns(datasets) {\n  const columnList = {};\n\n  datasets.forEach((dataset) => {\n    if (dataset.resource.columns_name) {\n      dataset.resource.columns_name.forEach((col) => {\n        if (col in columnList) {\n          columnList[col] += 1;\n        } else {\n          columnList[col] = 1;\n        }\n      });\n    }\n  });\n  return columnList;\n}\n\n/**\n * Extract from the datasets array, a unique set of categories.\n * @return {Array<string>} an array of unique categories\n */\nexport function getCategories(datasets) {\n  const categories = datasets.reduce(\n    (cats, dataset) => [\n      ...cats,\n      ...(dataset.classification.categories\n        ? dataset.classification.categories\n        : []),\n    ],\n    [],\n  );\n\n  const counts = categories.reduce(\n    (totals, cat) =>\n      cat in totals\n        ? { ...totals, [cat]: totals[cat] + 1 }\n        : { ...totals, [cat]: 1 },\n    {},\n  );\n  return counts;\n}\n\n/**\n * Extract from the datasets array, a unique set of categories.\n * @return {Array<string>} an array of unique categories\n */\nexport function getDepartments(datasets) {\n  const departments = datasets\n    .map((dataset) =>\n      dataset.classification.domain_metadata.find(\n        (md) => md.key === 'Dataset-Information_Agency',\n      ),\n    )\n    .filter((d) => d)\n    .map((d) => d.value);\n  const counts = departments.reduce(\n    (totals, department) =>\n      department in totals\n        ? { ...totals, [department]: totals[department] + 1 }\n        : { ...totals, [department]: 1 },\n    {},\n  );\n  return counts;\n}\n/**\n * Extract from the datasets array, a unique set of tags.\n * @return {Array<string>} an array of unique tags\n */\nexport function getTagList(datasets) {\n  const tagList = {};\n\n  datasets.forEach((dataset) => {\n    if (dataset.classification.domain_tags) {\n      dataset.classification.domain_tags.forEach((tag) => {\n        if (tag in tagList) {\n          tagList[tag] += 1;\n        } else {\n          tagList[tag] = 1;\n        }\n      });\n    }\n  });\n  return tagList;\n}\n\nexport function getUniqueEntriesCount(dataset, column) {\n  return fetch(\n    `https://data.cityofnewyork.us/resource/${\n      dataset.resource.id\n    }.json?$select=distinct|> select count(*) ${column.replace(/ /g, '_')}`,\n  ).then((r) => r.json());\n}\nexport function getUniqueEntries(dataset, column) {\n  return fetch(\n    `https://data.cityofnewyork.us/resource/${\n      dataset.resource.id\n    }.json?$select=distinct ${column.replace(/ /g, '_')}`,\n  )\n    .then((r) => r.json())\n    .then((r) => {\n      return r.errorCode ? [] : r.map((entry) => Object.values(entry)[0]);\n    });\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nimport Dexie from 'dexie';\nimport {\n  getManifest,\n  getCategories,\n  getColumns,\n  getTagList,\n  getDepartments,\n} from '../utils/socrata';\n\nconst db = new Dexie('SocrataCache');\ndb.version(1).stores({\n  SocrataCache: 'id',\n});\n\nexport const AppContext = createContext();\n\nconst initalState = {\n  datasets: [],\n  tagList: [],\n  categories: [],\n  departments: [],\n  columns: [],\n  stateLoaded: false,\n};\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'UPDATE_OPEN_DATASET_MANIFEST':\n      return { ...state, datasets: payload };\n    case 'UPDATE_TAGS':\n      return { ...state, tagList: payload };\n    case 'UPDATE_CATEGORIES':\n      return { ...state, categories: payload };\n    case 'UPDATE_COLUMNS':\n      return { ...state, columns: payload };\n    case 'UPDATE_DEPARTMENTS':\n      return { ...state, departments: payload };\n    case 'HYDRATE_STATE':\n      return { ...state, ...payload };\n    case 'SET_LOADED':\n      return { ...state, stateLoaded: true };\n    default:\n      return state;\n  }\n};\n\nexport const StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n\n  // Try to get the state locally from indexed db... if we can't find it there, request it from the\n  // socrata API\n\n  useEffect(() => {\n    db.SocrataCache.get(1).then((result) => {\n      if (result) {\n        const cachedState = JSON.parse(result.data);\n        dispatch({\n          type: 'HYDRATE_STATE',\n          payload: { ...initalState, ...cachedState, cache_loaded: true },\n        });\n        // Set state as loaded to indicate that data is ready to use\n        dispatch({\n          type: 'SET_LOADED',\n        });\n      } else {\n        getManifest().then((manifest) => {\n          const tagList = getTagList(manifest);\n          const categories = getCategories(manifest);\n          const departments = getDepartments(manifest);\n          const columns = getColumns(manifest);\n          dispatch({\n            type: 'UPDATE_OPEN_DATASET_MANIFEST',\n            payload: manifest,\n          });\n          dispatch({\n            type: 'UPDATE_TAGS',\n            payload: tagList,\n          });\n          dispatch({\n            type: 'UPDATE_CATEGORIES',\n            payload: categories,\n          });\n          dispatch({\n            type: 'UPDATE_DEPARTMENTS',\n            payload: departments,\n          });\n          dispatch({\n            type: 'UPDATE_COLUMNS',\n            payload: columns,\n          });\n          dispatch({\n            type: 'SET_LOADED',\n          });\n        });\n      }\n    });\n  }, []);\n\n  // If our datasets change, update the cahced version\n  const {\n    datasets,\n    tagList,\n    columns,\n    categories,\n    departments,\n    stateLoaded,\n  } = state;\n  useEffect(() => {\n    if (stateLoaded) {\n      console.log('writing cache');\n      db.SocrataCache.put({\n        data: JSON.stringify({\n          datasets,\n          tagList,\n          categories,\n          departments,\n          columns,\n        }),\n        id: 1,\n      });\n    }\n  }, [datasets, tagList, categories, columns, departments, stateLoaded]);\n\n  return (\n    <AppContext.Provider value={[state, dispatch]}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useStateValue = () => useContext(AppContext);\n","import { useMemo, useState, useEffect } from 'react';\nimport useFuse from 'react-use-fuse';\nimport { useStateValue } from '../contexts/OpenDataContext';\nimport { findJoinable, getUniqueEntries } from '../utils/socrata';\n\nexport function useStateLoaded() {\n  const [{ stateLoaded }] = useStateValue();\n  return stateLoaded;\n}\n\nexport function useTags() {\n  const [{ tagList }] = useStateValue();\n  return tagList;\n}\n\nexport function useCategories() {\n  const [{ categories }] = useStateValue();\n  return categories;\n}\n\nexport function useDepartments() {\n  const [{ departments }] = useStateValue();\n  return departments;\n}\n\nexport function useColumns() {\n  const [{ columns }] = useStateValue();\n  return columns;\n}\n\nexport function useJoinableDatasets(dataset) {\n  const [{ datasets }] = useStateValue();\n  return useMemo(() => (dataset ? findJoinable(dataset, datasets) : []), [\n    dataset,\n    datasets,\n  ]);\n}\n\nexport function useGetSimilarDatasets(datasetID) {\n  const [similarityMetrics, setSimilarityMetrics] = useState({});\n  const [{ datasets }] = useStateValue();\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/similarity_metrics.json`)\n      .then((r) => r.json())\n      .then((r) => setSimilarityMetrics(r));\n  }, []);\n\n  const similarDatasets = useMemo(\n    () =>\n      similarityMetrics[datasetID]\n        ? similarityMetrics[datasetID].map((match) => ({\n            ...match,\n            dataset: datasets.find((d) => d.resource.id === match.dataset),\n          }))\n        : [],\n\n    [similarityMetrics, datasetID, datasets],\n  );\n  return similarDatasets;\n}\n\nexport function useDataset(datasetID) {\n  const [{ datasets }] = useStateValue();\n  return datasets.find((d) => d.resource.id === datasetID);\n}\n\nexport function useGetDatasetsByIds(ids) {\n  const [{ datasets }] = useStateValue();\n  return useMemo(() => datasets.filter((d) => ids.includes(d.resource.id)), [\n    datasets,\n    ids,\n  ]);\n}\n\nexport function useDatasets({ tags, term, categories, columns, departments }) {\n  const [{ datasets }] = useStateValue();\n\n  const { result: searchedDatasets, search } = useFuse({\n    data: datasets,\n    options: {\n      shouldSort: true,\n      findAllMatches: true,\n      keys: ['resource.name', 'resource.description'],\n      caseSensitive: false,\n    },\n  });\n\n  useEffect(() => {\n    search(term);\n  }, [search, term]);\n\n  return useMemo(() => {\n    if (searchedDatasets) {\n      let resultDatasets = [...searchedDatasets];\n      if (tags && tags.length > 0) {\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.classification.domain_tags.filter((tag) =>\n              tags.includes(tag),\n            ).length > 0,\n        );\n      }\n\n      if (categories && categories.length > 0) {\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.classification.categories.filter((cat) =>\n              categories.includes(cat),\n            ).length > 0,\n        );\n      }\n\n      if (columns && columns.length > 0) {\n        console.log('filtering with columns ', columns);\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.resource.columns_name &&\n            dataset.resource.columns_name.filter((col) => columns.includes(col))\n              .length > 0,\n        );\n      }\n\n      if (departments && departments.length > 0) {\n        resultDatasets = resultDatasets.filter((dataset) =>\n          departments.includes(\n            dataset.classification.domain_metadata.find(\n              (d) => d.key === 'Dataset-Information_Agency',\n            )?.value,\n          ),\n        );\n      }\n\n      return resultDatasets;\n    }\n    return datasets;\n  }, [searchedDatasets, tags, categories, columns, departments, datasets]);\n}\n\nexport function useSortDatsetsBy(datasets, type, asc = false) {\n  // console.log('here ', type, asc);\n  return useMemo(() => {\n    // console.log('updating sort ');\n    const result = datasets.sort((a, b) => {\n      let valA = null;\n      let valB = null;\n      switch (type) {\n        case 'Name':\n          valA = a.resource.name;\n          valB = b.resource.name;\n          break;\n        case 'Created At':\n          valA = a.resource.createdAt;\n          valB = b.resource.createdAt;\n          break;\n        case 'Updated At':\n          valA = a.resource.updatedAt;\n          valB = b.resource.updatedAt;\n          break;\n        case 'Downloads':\n          valA = a.resource.download_count;\n          valB = b.resource.download_count;\n          break;\n        case 'Views':\n          valA = a.resource.page_views.page_views_total;\n          valB = b.resource.page_views.page_views_total;\n          break;\n        default:\n      }\n\n      return (valA < valB ? 1 : -1) * (asc ? 1 : -1);\n    });\n    return result;\n  }, [datasets, type, asc]);\n}\n\nexport function useUniqueColumnEntries(dataset, column) {\n  const [uniqueEntries, setUniqueEntries] = useState(null);\n  useEffect(() => {\n    getUniqueEntries(dataset, column).then((res) => {\n      setUniqueEntries({\n        dataset: dataset.resource.id,\n        column,\n        distinct: res,\n      });\n    });\n  }, [dataset, column]);\n  return uniqueEntries;\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport Dexie from 'dexie';\n\nexport const CollectionsContext = createContext();\n\nconst initalState = {\n  datasets: [],\n  name: null,\n  cacheLoaded: false,\n};\n\nconst db = new Dexie('CollectionCache');\ndb.version(1).stores({\n  CollectionCache: 'id',\n});\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'ADD_TO_COLLECTION':\n      return { ...state, datasets: [...state.datasets, payload] };\n    case 'REMOVE_FROM_COLLECTION':\n      return {\n        ...state,\n        datasets: state.datasets.filter((d) => d !== payload),\n      };\n    case 'SET_NAME':\n      return {\n        ...state,\n        name: payload,\n      };\n    case 'CLEAR_COLLECTION':\n      return {\n        ...state,\n        datasets: [],\n      };\n    case 'HYDRATE_STATE':\n      return {\n        ...state,\n        ...payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const CollectionsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n  const { cacheLoaded, datasets, name } = state;\n\n  // Restore state\n  useEffect(() => {\n    db.CollectionCache.get(1).then((result) => {\n      if (result) {\n        const cachedState = JSON.parse(result.data);\n        dispatch({\n          type: 'HYDRATE_STATE',\n          payload: { ...initalState, ...cachedState, cacheLoaded: true },\n        });\n      } else {\n        dispatch({\n          payload: { ...initalState, cacheLoaded: true },\n          type: 'HYDRATE_STATE',\n        });\n      }\n    });\n  }, []);\n\n  // Cache state\n  useEffect(() => {\n    if (cacheLoaded) {\n      db.CollectionCache.put({\n        data: JSON.stringify({\n          datasets,\n          name,\n        }),\n        id: 1,\n      });\n    }\n  }, [cacheLoaded, datasets, name]);\n\n  return (\n    <CollectionsContext.Provider value={[state, dispatch]}>\n      {children}\n    </CollectionsContext.Provider>\n  );\n};\n\nexport const useCollectionsValue = () => useContext(CollectionsContext);\n","import { useCollectionsValue } from '../contexts/CollectionsContext';\n\nexport default function useCollection() {\n  const [state, dispatch] = useCollectionsValue();\n  const addToCollection = (datasetID) =>\n    dispatch({ type: 'ADD_TO_COLLECTION', payload: datasetID });\n  const removeFromCollection = (datasetID) =>\n    dispatch({ type: 'REMOVE_FROM_COLLECTION', payload: datasetID });\n  const setName = (name) => dispatch({ type: 'SET_NAME', payload: name });\n\n  const clearCollection = () => {\n    console.log('clearning');\n    dispatch({ type: 'CLEAR_COLLECTION' });\n  };\n\n  return [\n    state,\n    { clearCollection, addToCollection, removeFromCollection, setName },\n  ];\n}\n","import React from 'react';\nimport DOMPurify from 'dompurify';\n\n/* Simple component to sanitize HTML and display it.\n *  Need this for making sure we can display the\n *  dataset descriptions properly\n */\n\nexport default function RawHTML({ html, className }) {\n  const cleanedHTML = DOMPurify.sanitize(html);\n  return (\n    <div\n      className={className}\n      dangerouslySetInnerHTML={{ __html: cleanedHTML }}\n    />\n  );\n}\n","import React from 'react';\nimport './Dataset.scss';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { formatDate } from '../../utils/formatters';\nimport RawHTML from '../RawHTML/RawHTML';\n\nexport default function Dataset({\n  dataset,\n  onAddToCollection,\n  onRemoveFromCollection,\n  inCollection,\n  viewInOpenPortal = false,\n  similarity,\n}) {\n  return (\n    <div className=\"dataset\" key={dataset.resource.id}>\n      <div className=\"dataset-title\">\n        <Link to={`/dataset/${dataset.resource.id}`}>\n          <h2>{dataset.resource.name}</h2>\n        </Link>\n        <p>{dataset.resource.attribution}</p>\n      </div>\n\n      {similarity && <p>Similarity: {(similarity * 100).toPrecision(2)}%</p>}\n      {onAddToCollection && (\n        <button\n          className=\"collection-button\"\n          type=\"button\"\n          onClick={() =>\n            inCollection\n              ? onRemoveFromCollection(dataset.resource.id)\n              : onAddToCollection(dataset.resource.id)\n          }\n        >\n          {inCollection ? 'Remove from collection' : 'Add to collection'}\n        </button>\n      )}\n      {viewInOpenPortal && (\n        <a\n          className=\"external-link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={dataset.permalink}\n        >\n          <button type=\"button\">\n            View on Open Data&nbsp;\n            <FontAwesomeIcon icon={faExternalLinkAlt} />\n          </button>\n        </a>\n      )}\n\n      <div className=\"dataset-last-update\">\n        <p className=\"header\">Last Updated</p>\n        <p>{formatDate(dataset.resource.updatedAt)}</p>\n      </div>\n\n      <RawHTML\n        className=\"dataset-description\"\n        html={dataset.resource.description}\n      />\n      <div className=\"dataset-meta\">\n        <div className=\"update-frequency\">\n          <span>Update frequency:</span>\n          weekly\n        </div>\n        <div className=\"dataset-tags\">\n          <span>Tags:</span>\n          {dataset.classification.domain_tags.join(', ')}\n        </div>\n      </div>\n    </div>\n  );\n}\n","export function formatDate(date) {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n  return new Date(date).toLocaleDateString('en-US', options);\n}\n","import React, { useState } from 'react';\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './SortMenu.scss';\n\nexport default function SortMenu({\n  options,\n  selected,\n  direction,\n  onSelected,\n  onDirection,\n}) {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div className={`sort-menu ${expanded ? 'expanded' : ''}`}>\n      <div className=\"wrapper\">\n        <span>Sort By:</span>\n        <ul>\n          <li onClick={() => setExpanded(!expanded)}>{selected}</li>\n          {options\n            .filter((o) => o !== selected)\n            .map((option) => (\n              <li\n                onClick={() => {\n                  onSelected(option);\n                  setExpanded(false);\n                }}\n                key={option}\n              >\n                {option}{' '}\n              </li>\n            ))}\n        </ul>\n        <FontAwesomeIcon\n          onClick={() => onDirection(direction === 'asc' ? 'desc' : 'asc')}\n          icon={direction === 'asc' ? faSortUp : faSortDown}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './DatasetLoading.scss';\nimport '../Loading.scss';\n\nexport default () => (\n  <div className=\"dataset-loading\">\n    <div className=\"dataset-list\">\n      {[...Array(4)].map((_, i) => (\n        <div key={i} className=\"dataset\">\n          <div className=\"dataset-title animate\" />\n          <p className=\"dataset-description animate\" />\n          <div className=\"dataset-meta animate\" />\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { useState, useMemo, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\n\nexport default function usePagination(data, perPage = 20) {\n  const pages = useMemo(() => Math.ceil(data.length / perPage), [\n    data,\n    perPage,\n  ]);\n  const [currentPageNo, setCurrentPageNo] = useState(0);\n\n  useEffect(() => {\n    console.log('Data changed, setting current page 0 ')\n    setCurrentPageNo(0);\n  }, [data]);\n\n  const pageButtons = (\n    <nav>\n      <ReactPaginate\n        previousLabel=\"previous\"\n        nextLabel=\"next\"\n        breakLabel=\"...\"\n        breakClassName=\"break-me\"\n        pageCount={pages}\n        onPageChange={({ selected: page }) => {\n          setCurrentPageNo(page);\n        }}\n        containerClassName=\"pagination\"\n        subContainerClassName=\"pages pagination\"\n        activeClassName=\"active\"\n        previousClassName=\"page-item\"\n        nextClassName=\"page-item\"\n        pageClassName=\"page-item\"\n      />\n    </nav>\n  );\n\n  // This wouldnt trigger on changes to data order without the data[0] need to\n  // find a better solution to this going forward\n  const content = useMemo(\n    () => data.slice(currentPageNo * perPage, (currentPageNo + 1) * perPage),\n    [perPage, currentPageNo, data, data[0]],\n  );\n\n  return [\n    content,\n    {\n      pageButtons,\n    },\n  ];\n}\n","import React from 'react';\nimport './FilterLoading.scss';\nimport '../Loading.scss';\n\nexport default () => (\n  <div className=\"\">\n    <div className=\"filter-loading-wrapper\">\n      {[...Array(10)].map((_, i) => (\n        <li key={i} className=\"multi-buttons\">\n          <input type=\"checkbox\" disabled className=\"checkbox\" />\n          <span className=\"animate item-name\" />\n          <span className=\"animate pill\" />\n        </li>\n      ))}\n    </div>\n  </div>\n);\n","import React, { useState, useMemo, useEffect } from 'react';\nimport useFuse from 'react-use-fuse';\nimport usePagenation from '../../hooks/pagination';\nimport { useStateLoaded } from '../../hooks/datasets';\nimport FilterLoading from '../Loading/FilterLoading/FilterLoading';\nimport './MultiSelector.scss';\n\nexport default function MultiSelector({ items, selected, onChange, title }) {\n  const clearItems = () => {\n    onChange([]);\n  };\n\n  const loaded = useStateLoaded();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const toggleItem = (item) => {\n    const newSelection = selected.includes(item)\n      ? selected.filter((i) => i !== item)\n      : [...selected, item];\n    onChange(newSelection);\n  };\n\n  const itemNames = useMemo(() =>  Object.keys(items).map((item) => ({\n      name: item,\n    })), [items]);\n\n  const { result: filteredItems, search } = useFuse({\n    data: itemNames,\n    options: {\n      keys: ['name'],\n      shouldSort: false,\n      findAllMatches: true,\n      caseSensitive: false,\n    },\n  });\n\n  useEffect(() => search(searchTerm), [ searchTerm]);\n\n  const sortedItems = useMemo(\n    () =>\n      filteredItems\n        ?.map((item) => item.name)\n        .sort((a, b) => (items[a] < items[b] ? 1 : -1)),\n    [filteredItems, items],\n  );\n\n  const [pagedItems, { pageButtons }] = usePagenation(sortedItems, 10);\n\n  return (\n    <div className=\"mutli-selector\">\n      <h2>{title}</h2>\n      <div className=\"search\">\n        <input\n          disabled={!loaded}\n          placeholder=\"filter\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </div>\n      <ul className=\"multi-list\">\n        {!loaded ? (\n          <FilterLoading />\n        ) : (\n          pagedItems.map((item) => (\n            // eslint-disable-next-line\n            <li\n              key={item}\n              onClick={() => toggleItem(item)}\n              className={`multi-buttons ${\n                selected && selected.includes(item) ? 'selected' : ''\n              }`}\n            >\n              <input\n                type=\"checkbox\"\n                checked={selected && selected.includes(item)}\n                className=\"checkbox\"\n              />\n              <span className=\"item-name\">{item}</span>\n              <span className=\"pill\">{items[item]}</span>\n            </li>\n          ))\n        )}\n      </ul>\n      {pageButtons}\n      {selected && selected.length > 0 && (\n        <button type=\"button\" onClick={clearItems}>\n          clear\n        </button>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './HomePage.scss';\nimport { DebounceInput } from 'react-debounce-input';\nimport {\n  useCategories,\n  useTags,\n  useDepartments,\n  useDatasets,\n  useColumns,\n  useStateLoaded,\n  useSortDatsetsBy,\n} from '../../hooks/datasets';\nimport useCollection from '../../hooks/collections';\nimport Dataset from '../../components/Dataset/Dataset';\nimport SortMenu from '../../components/SortMenu/SortMenu';\nimport DatasetLoading from '../../components/Loading/DatasetLoading/DatasetLoading';\nimport usePagination from '../../hooks/pagination';\nimport MultiSelector from '../../components/MultiSelector/MultiSelector';\n\nexport default function HomePage() {\n  const categories = useCategories();\n  const tags = useTags();\n  const departments = useDepartments();\n  const columns = useColumns();\n  const loaded = useStateLoaded();\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedColumns, setSelectedColumns] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('Name');\n  const [sortDirection, setSortDirection] = useState('asc');\n\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCollection();\n\n  const datasets = useDatasets({\n    tags: selectedTags,\n    categories: selectedCategories,\n    columns: selectedColumns,\n    term: searchTerm,\n    departments: selectedDepartments,\n  });\n\n  const sortedDatasets = useSortDatsetsBy(\n    datasets,\n    sortBy,\n    sortDirection === 'asc',\n  );\n\n  const [pagedDatasets, { pageButtons }] = usePagination(sortedDatasets, 6);\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"filters\">\n        <div className=\"categories\">\n          <MultiSelector\n            items={categories}\n            onChange={setSelectedCategories}\n            selected={selectedCategories}\n            title=\"Categories\"\n          />\n        </div>\n        <div className=\"departments\">\n          <MultiSelector\n            items={departments}\n            selected={selectedDepartments}\n            onChange={setSelectedDepartments}\n            title=\"Departments\"\n          />\n        </div>\n        <div className=\"columns\">\n          <MultiSelector\n            items={columns}\n            selected={selectedColumns}\n            onChange={setSelectedColumns}\n            title=\"Columns\"\n          />\n        </div>\n        <div className=\"tags\">\n          <MultiSelector\n            items={tags}\n            selected={selectedTags}\n            onChange={setSelectedTags}\n            title=\"Tags\"\n          />\n        </div>\n      </div>\n      <div className=\"datasets\">\n        <div className=\"search\">\n          <DebounceInput\n            type=\"text\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n            value={searchTerm}\n            debounceTimeout={300}\n            placeholder=\"Search for dataset\"\n          />\n        </div>\n        <div className=\"count-and-sort\">\n          <p>\n            <span className=\"bold\">{datasets.length}</span> datasets\n          </p>\n\n          <SortMenu\n            options={['Name', 'Created At', 'Updated At', 'Downloads', 'Views']}\n            onDirection={(direction) => setSortDirection(direction)}\n            selected={sortBy}\n            direction={sortDirection}\n            onSelected={(selected) => setSortBy(selected)}\n          />\n        </div>\n        <div className=\"dataset-list\">\n          <ul className=\"dataset-list\">\n            {loaded ? (\n              pagedDatasets.map((dataset) => (\n                <Dataset\n                  key={dataset?.resource?.id}\n                  dataset={dataset}\n                  inCollection={collection.datasets.includes(\n                    dataset.resource.id,\n                  )}\n                  onAddToCollection={addToCollection}\n                  onRemoveFromCollection={removeFromCollection}\n                />\n              ))\n            ) : (\n              <DatasetLoading />\n            )}\n          </ul>\n          <div>{pageButtons}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFile } from '@fortawesome/free-regular-svg-icons';\nimport { Link } from 'react-router-dom';\nimport {\n  faAngleRight,\n  faAngleDown,\n  faTable,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useUniqueColumnEntries } from '../../hooks/datasets';\nimport useCollection from '../../hooks/collections';\nimport './JoinColumn.scss';\n\nexport default function ColumnJoin({ rightDataset, joinCol, parentUniques }) {\n  const [collapsed, setCollapsed] = useState(true);\n  const uniqueIds = useUniqueColumnEntries(rightDataset, joinCol);\n  const jointlyUnique = useMemo(\n    () =>\n      uniqueIds && parentUniques\n        ? parentUniques.filter((e) => uniqueIds.distinct.includes(e))\n        : [],\n    [uniqueIds, parentUniques],\n  );\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCollection();\n\n  return (\n    <div className=\"join-column\">\n      <div className=\"join-column-row\">\n        <span\n          onClick={() => setCollapsed(!collapsed)}\n          onKeyDown={(e) => {\n            if (e.keycode === 32) {\n              setCollapsed(!collapsed);\n            }\n          }}\n          className=\"join-column-name\"\n          role=\"button\"\n          tabIndex=\"0\"\n        >\n          <FontAwesomeIcon icon={collapsed ? faAngleRight : faAngleDown} />\n          <FontAwesomeIcon icon={faFile} />\n          {rightDataset.resource.name}\n        </span>\n        <span>\n          {jointlyUnique ? `${jointlyUnique.length} matching id's` : 'loading'}\n        </span>\n        <span>\n          <Link to={`/dataset/${rightDataset.resource.id}`}>View dataset</Link>\n        </span>\n        <button\n          type=\"button\"\n          onClick={() =>\n            collection.datasets.includes(rightDataset.resource.id)\n              ? removeFromCollection(rightDataset.resource.id)\n              : addToCollection(rightDataset.resource.id)\n          }\n        >\n          {collection.datasets.includes(rightDataset.resource.id)\n            ? 'Remove dataset from collection'\n            : 'Add dataset to collection'}\n        </button>\n      </div>\n      {!collapsed && uniqueIds && (\n        <div className=\"join-column-unique\">\n          <h3>COMMON IDS</h3>\n          <ul>\n            {jointlyUnique.slice(0, 10).map((uid) => (\n              <li key={uid}>\n                <div className=\"bar\" />\n                <FontAwesomeIcon icon={faTable} />\n                <span>{uid}</span>\n              </li>\n            ))}\n          </ul>\n          <div>and {jointlyUnique.length - 10} more</div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport JoinColumn from '../JoinColumn/JoinColumn';\nimport './ColumnSuggestions.scss';\nimport usePagination from '../../hooks/pagination';\nimport { getUniqueEntries } from '../../utils/socrata';\n\nexport default function ColumnSuggestions({ column, joins, dataset }) {\n  const [columnUniques, setColumnsUniques] = useState([]);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const dataTypeForCol =\n    dataset.resource.columns_datatype[\n      dataset.resource.columns_name.indexOf(column)\n    ];\n\n  const [pagedJoins, { pageButtons }] = usePagination(joins, 10);\n\n  useEffect(() => {\n    if (joins.length > 0) {\n      getUniqueEntries(dataset, column).then((res) => {\n        setColumnsUniques(res);\n      });\n    }\n  }, [column, dataset, joins]);\n\n  return (\n    <div className={`column-suggestions ${collapsed ? 'collapsed' : ''}`}>\n      <div\n        className=\"table-row\"\n        role=\"button\"\n        onKeydown={(e) => {\n          if (e.keyCode === 36) {\n            setCollapsed(!collapsed);\n          }\n        }}\n        onClick={() => setCollapsed(!collapsed)}\n        tabIndex=\"0\"\n      >\n        <span className=\"column-collapse\">\n          <FontAwesomeIcon icon={collapsed ? faAngleRight : faAngleDown} />{' '}\n          {column}\n        </span>\n        <span>{dataTypeForCol}</span>\n        <span>{joins.length} datasets also have this column</span>\n      </div>\n      {!collapsed && pagedJoins && (\n        <div className=\"columns-suggestions-matches\">\n          <h3>MATCHING DATSETS</h3>\n          {joins && (\n            <ul>\n              {pagedJoins.map((join) => (\n                <li key={join.dataset.resource.id}>\n                  <JoinColumn\n                    leftDataset={dataset}\n                    rightDataset={join.dataset}\n                    joinCol={column}\n                    parentUniques={columnUniques}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n          {pageButtons}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useCallback, useMemo } from 'react';\nimport ColumnSuggestions from '../ColumnSuggestions/ColumnSuggestions';\nimport './ColumnMatchTable.scss';\n\nexport default function ColumnMatchTable({ dataset, joinColumns }) {\n  const columns = dataset.resource.columns_name;\n\n  const suggestionsForColumn = useCallback(\n    (col, candidates) =>\n      columns ? candidates.filter((c) => c.joinableColumns[0] === col) : [],\n    [columns],\n  );\n\n  const sortedColumns = useMemo(\n    () =>\n      joinColumns\n        ? columns.sort((a, b) =>\n            suggestionsForColumn(a, joinColumns).length <\n            suggestionsForColumn(b, joinColumns).length\n              ? 1\n              : -1,\n          )\n        : [],\n    [columns, joinColumns, suggestionsForColumn],\n  );\n\n  return (\n    <div className=\"column-match-table\">\n      <div className=\"table-header\">\n        <ul className=\"table-row\">\n          <li>Column name</li>\n          <li>Column type</li>\n          <li>No potential joins</li>\n        </ul>\n      </div>\n      {sortedColumns.map((column) => (\n        <ColumnSuggestions\n          dataset={dataset}\n          column={column}\n          joins={suggestionsForColumn(column, joinColumns)}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport RawHTML from '../../components/RawHTML/RawHTML';\nimport ColumnMatchTable from '../../components/ColumnMatchTable/ColumnMatchTable';\nimport Dataset from '../../components/Dataset/Dataset';\nimport useCollection from '../../hooks/collections';\nimport {\n  useDataset,\n  useJoinableDatasets,\n  useGetSimilarDatasets,\n} from '../../hooks/datasets';\nimport './DatasetPage.scss';\n\nconst formatDate = (date) => moment(date).format('MMMM DD, YYYY');\n\nexport default function DatasetPage({ match }) {\n  const { datasetID } = match.params;\n  const dataset = useDataset(datasetID);\n  const joins = useJoinableDatasets(dataset);\n  const [activeTab, setActiveTab] = useState('joins');\n  const resource = dataset?.resource;\n  const pageViews = resource?.page_views;\n  const classification = dataset?.classification;\n  const domainMetadata = classification?.domain_metadata;\n  const similarDatasets = useGetSimilarDatasets(datasetID);\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCollection();\n\n  const updatedAutomation = domainMetadata?.find(\n    ({ key, value }) => key === 'Update_Automation' && value === 'No',\n  )?.value;\n\n  const updateFrequency = domainMetadata?.find(\n    ({ key }) => key === 'Update_Update-Frequency',\n  )?.value;\n\n  const informationAgency = domainMetadata?.find(\n    ({ key }) => key === 'Dataset-Information_Agency',\n  )?.value;\n\n  return dataset ? (\n    <div className=\"dataset-page\">\n      <div className=\"dataset-details\">\n        <section>\n          <h2>{resource.name}</h2>\n          <p>{informationAgency}</p>\n          <RawHTML html={resource.description} />\n          <button\n            type=\"button\"\n            className=\"collection-button\"\n            onClick={() =>\n              collection.datasets.includes(datasetID)\n                ? removeFromCollection(datasetID)\n                : addToCollection(datasetID)\n            }\n          >\n            {collection.datasets.includes(datasetID)\n              ? 'Remove From Collection'\n              : 'Add to Collection'}{' '}\n          </button>\n        </section>\n        <section className=\"external-link\">\n          <p>Powered by</p>\n          <img\n            alt=\"NYC Open Data\"\n            src=\"https://opendata.cityofnewyork.us/wp-content/themes/opendata-wp/assets/img/nyc-open-data-logo.svg\"\n          />\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={dataset.permalink}>\n            View on Open Data\n          </a>\n        </section>\n        <section className=\"metadata\">\n          <h2>Metadata</h2>\n          <h3>Update Automation</h3>\n          <p>{updatedAutomation}</p>\n          <h3>Update Frequency</h3>\n          <p>{updateFrequency}</p>\n          <h3>Dataset Owner</h3>\n          <p>{dataset?.owner.display_name}</p>\n          {informationAgency && (\n            <>\n              <h3>Agency</h3>\n              <p>{informationAgency}</p>\n            </>\n          )}\n          {classification?.domain_category && (\n            <>\n              <h3>Category</h3>\n              <p>{classification.domain_category}</p>\n            </>\n          )}\n          <h3>Updated</h3>\n          <p>{formatDate(resource?.updatedAt)}</p>\n          <h3>Metadata Updated at</h3>\n          <p>{formatDate(resource?.metadata_updated_at)}</p>\n          <h3>Page Views</h3>\n          <p>{pageViews?.page_views_total}</p>\n        </section>\n      </div>\n      <div className=\"dataset-recomendataions\">\n        <h2>Other datasets to consider</h2>\n        <div className=\"tabs\">\n          <button\n            type=\"button\"\n            className={activeTab === 'joins' ? 'active' : ''}\n            onClick={() => setActiveTab('joins')}\n          >\n            Potential Join Columns\n          </button>\n          <button\n            type=\"button\"\n            className={activeTab === 'theme' ? 'active' : ''}\n            onClick={() => setActiveTab('theme')}\n          >\n            Thematically Similar\n          </button>\n        </div>\n        {activeTab === 'joins' && (\n          <>\n            <p>\n              Find datasets that share a column with the current dataset. These\n              columns might be interesting datasets to join with the current\n              dataset to add additional details or bring in context\n            </p>\n            <ColumnMatchTable dataset={dataset} joinColumns={joins} />\n          </>\n        )}\n        {activeTab === 'theme' && (\n          <>\n            <p>\n              Dataset that are thematically similar based on name and\n              description\n            </p>\n            {similarDatasets.slice(0, 10).map((d) => (\n              <Dataset\n                onAddToCollection={addToCollection}\n                onRemoveFromCollection={removeFromCollection}\n                dataset={d.dataset}\n                similarity={d.similarity}\n                inCollection={collection.datasets.includes(\n                  d.dataset.resource.id,\n                )}\n              />\n            ))}\n          </>\n        )}\n      </div>\n    </div>\n  ) : (\n    <h1>Loading...</h1>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport useCollection from '../../hooks/collections';\nimport './CollectionBar.scss';\n\nexport default function CollectionContext() {\n  const [collection, { clearCollection }] = useCollection();\n  if (collection.datasets && collection.datasets.length > 0) {\n    return (\n      <div className=\"collection-bar\">\n        <span>{collection.datasets.length} datasets selected</span>\n        <Link to=\"/collection/new\">\n          <button type=\"submit\">Create Collection</button>\n        </Link>\n        <button type=\"button\" onClick={clearCollection}>\n          Clear\n        </button>\n      </div>\n    );\n  }\n  return null;\n}\n","import { useState } from 'react';\n\nconst copyToClipboard = async (text) => {\n  if (navigator.clipboard) {\n    try {\n      await navigator.clipboard.writeText(text);\n      return true;\n    } catch (e) {\n      // Suppress error and try fallback method\n    }\n  }\n\n  if (\n    document.queryCommandSupported &&\n    document.queryCommandSupported('copy')\n  ) {\n    const textarea = document.createElement('textarea');\n    textarea.style.opacity = '0';\n    textarea.textContent = text;\n    // Prevent scrolling to bottom of page\n    textarea.style.position = 'fixed';\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy');\n    } catch (e) {\n      // Security exception may be thrown by some browsers.\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport default (url) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const setCopied = async () => {\n    await copyToClipboard(url);\n    setIsCopied(true);\n  };\n  return [isCopied, setCopied];\n};\n","import React from 'react';\nimport './CollectionPage.scss';\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  TwitterShareButton,\n  EmailIcon,\n  FacebookIcon,\n  TwitterIcon,\n} from 'react-share';\nimport useClipboard from '../../hooks/useClipboard';\nimport { useGetDatasetsByIds } from '../../hooks/datasets';\nimport Dataset from '../../components/Dataset/Dataset';\n\nexport default function CollectionPage({ match }) {\n  const { name, datasetIDs } = match.params;\n  const url = window.location.href;\n  const datasets = useGetDatasetsByIds(datasetIDs.split(','));\n\n  const [isCopied, setCopied] = useClipboard(url);\n  return (\n    <div className=\"collections-page\">\n      <div className=\"collections-details\">\n        <h2>{name}</h2>\n        <p>\n          {datasets.length} dataset{datasets.length > 1 ? 's' : ''}\n        </p>\n\n        <div>\n          <h3>Share this collection:</h3>\n          <p className=\"dataset-url\">{url} </p>\n          <button type=\"button\" onClick={setCopied}>\n            Copy link\n          </button>\n          <span>{isCopied ? 'Copied!' : ' '} </span>\n          <p className=\"share-icons\">\n            <FacebookShareButton url={url}>\n              <FacebookIcon size={36} />\n            </FacebookShareButton>{' '}\n            <TwitterShareButton url={url}>\n              <TwitterIcon size={36} />\n            </TwitterShareButton>\n            <EmailShareButton url={url}>\n              <EmailIcon size={36} />\n            </EmailShareButton>\n          </p>\n        </div>\n      </div>\n      <div className=\"collections-content\">\n        {datasets.map((dataset) => (\n          <Dataset viewInOpenPortal key={dataset.id} dataset={dataset} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport useCollection from '../../hooks/collections';\nimport { useGetDatasetsByIds } from '../../hooks/datasets';\nimport './CreateCollectionModal.scss';\n\nexport default function CreateCollectionModal() {\n  const [collection, { clearCollection, setName }] = useCollection();\n  const datasets = useGetDatasetsByIds(collection.datasets);\n\n  return (\n    <div className=\"create-collection-modal\">\n      <h3>Create collection with the following datasets</h3>\n      <ul>\n        {datasets.map((dataset) => (\n          <li>{dataset.resource.name}</li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        value={collection.name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <Link\n        to={`/collection/${collection.name}/${collection.datasets.join(',')}`}\n      >\n        <button type=\"submit\" onClick={clearCollection}>\n          Create\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function GHPagesRedirect() {\n  const [redirect, setRedirect] = useState(null);\n  useEffect(() => {\n    // This is for dealing with the 404 redirect issue on gh pages\n    const target = sessionStorage.redirect;\n    delete sessionStorage.redirect;\n\n    if (target && target !== window.location.href) {\n      let to = target;\n      if (process.env.PUBLIC_URL) {\n        to = `/${to\n          .split('/')\n          .slice(4)\n          .join('/')}`;\n      }\n      setRedirect(to);\n    }\n  }, []);\n\n  if (redirect) {\n    return <Redirect to={redirect} />;\n  }\n  return <></>;\n}\n","import React from 'react';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n  Link,\n} from 'react-router-dom';\nimport { ModalContainer, ModalRoute } from 'react-router-modal';\n\nimport HomePage from './layout/HomePage/HomePage';\nimport DatasetPage from './layout/DatasetPage/DatasetPage';\nimport CollectionBar from './components/CollectionBar/CollectionBar';\nimport CollectionPage from './layout/CollectionPage/CollectionPage';\nimport CreateCollectionModal from './components/CreateCollectionModal/CreateCollectionModal';\nimport GHPagesRedirect from './components/GHPagesRedirect/GHPagesRedirect';\n\nimport 'react-router-modal/css/react-router-modal.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <ModalContainer />\n        <header>\n          <Link to=\"/\">\n            <h1>Data Clinic</h1>\n          </Link>\n        </header>\n        <div className=\"content\">\n          <GHPagesRedirect />\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/dataset/:datasetID\" exact component={DatasetPage} />\n            <Route\n              path=\"/collection/:name/:datasetIDs\"\n              exact\n              component={CollectionPage}\n            />\n\n            <ModalRoute\n              path=\"/collection/new\"\n              parentPath=\"/\"\n              component={CreateCollectionModal}\n            />\n            <Redirect from=\"/\" to=\"/\" />\n          </Switch>\n          <CollectionBar />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'normalize.css'; // Ensure consistent layout across browsers\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './contexts/OpenDataContext';\nimport { CollectionsProvider } from './contexts/CollectionsContext';\n\nReactDOM.render(\n  <StateProvider>\n    <CollectionsProvider>\n      <App />\n    </CollectionsProvider>\n  </StateProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}