{"version":3,"sources":["utils/socrata.js","contexts/OpenDataContext.jsx","hooks/datasets.js","contexts/CollectionsContext.jsx","hooks/collections.js","components/RawHTML/RawHTML.jsx","utils/formatters.jsx","components/CollectionTab/CollectionTab.jsx","components/SideNav/SideNav.jsx","components/ViewOnOpenPortal/ViewOnOpenPortal.jsx","components/Dataset/Dataset.jsx","components/SortMenu/SortMenu.jsx","components/Loading/DatasetLoading/DatasetLoading.jsx","hooks/pagination.jsx","components/Loading/FilterLoading/FilterLoading.jsx","components/MultiSelector/MultiSelector.jsx","layout/HomePage/HomePage.jsx","components/JoinColumn/JoinColumn.jsx","components/ColumnSuggestions/ColumnSuggestions.jsx","components/ColumnMatchTable/ColumnMatchTable.jsx","components/Breadcrumb/Breadcrumb.jsx","layout/DatasetPage/DatasetPage.jsx","hooks/useClipboard.js","layout/CollectionPage/CollectionPage.jsx","components/CreateCollectionModal/CreateCollectionModal.jsx","components/GHPagesRedirect/GHPagesRedirect.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["SOCRATA_NY_OPENDATA_ENDPOINT","getMaifestPage","pageNo","a","async","limit","fetch","then","r","json","matachableColumnsForDataset","dataset","Set","resource","columns_name","map","s","toLocaleLowerCase","columns_field_name","hasJoinableMatch","columns","candidate","candidateCols","intersection","filter","x","has","Array","from","getUniqueEntries","column","id","replace","errorCode","error","console","warn","entry","Object","values","db","Dexie","version","stores","SocrataCache","AppContext","createContext","initalState","datasets","tagList","categories","departments","stateLoaded","reducer","state","action","type","payload","useStateValue","useContext","useStateLoaded","useJoinableDatasets","useMemo","cols","joinableColumns","match","length","findJoinable","useGetDatasetsByIds","ids","d","includes","CollectionsContext","collections","name","activeCollectionID","CollectionCache","find","c","uuidv4","col","datasetID","useCollectionsValue","useCurrentCollection","dispatch","pendingCollection","clearCollection","collectionID","addToCollection","removeFromCollection","setName","createCollectionFromPending","RawHTML","html","className","cleanedHTML","DOMPurify","sanitize","dangerouslySetInnerHTML","__html","hilightMatches","text","query","regex","RegExp","constructCollectionLink","collection","join","CollectionTab","visible","useCollections","currentCollectionDatasets","useState","newCollectionName","setNewCollectionName","tab","setTab","showCreate","setShowCreate","getAgency","classification","domain_metadata","key","value","placeholder","onChange","e","target","onClick","to","size","icon","faEye","SideNav","showCollectionTab","setShowCollectionTab","alt","src","process","style","position","faColumns","faQuestionCircle","permalink","rel","href","faExternalLinkAlt","Dataset","date","onAddToCollection","onRemoveFromCollection","inCollection","viewInOpenPortal","similarity","formattedName","formattedDescription","description","attribution","toPrecision","ViewOnOpenPortal","updatedAt","Date","toLocaleDateString","year","month","day","domain_tags","SortMenu","options","selected","direction","onSelected","onDirection","expanded","setExpanded","o","option","faSortUp","faSortDown","_","i","usePagination","data","perPage","pages","Math","ceil","currentPageNo","setCurrentPageNo","useEffect","pageButtons","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","onPageChange","page","containerClassName","subContainerClassName","activeClassName","previousClassName","nextClassName","pageClassName","content","slice","disabled","MultiSelector","items","title","collapsed","setCollapsed","loaded","searchTerm","setSearchTerm","itemNames","keys","useFuse","item","shouldSort","findAllMatches","caseSensitive","filteredItems","result","search","usePagenation","sort","b","pagedItems","newSelection","toggleItem","checked","HomePage","useCategories","tags","useTags","useDepartments","useColumns","selectedTags","setSelectedTags","colpaseFilters","setCollapseFilters","selectedColumns","setSelectedColumns","selectedCategories","setSelectedCategories","selectedDepartments","setSelectedDepartments","sortBy","setSortBy","sortDirection","setSortDirection","term","includeMatches","searchedDatasets","resultDatasets","matches","itemclassification","tag","cat","log","useDatasets","asc","valA","valB","createdAt","download_count","page_views","page_views_total","useSortDatsetsBy","pagedDatasets","onKeyDown","faAngleLeft","faSearch","debounceTimeout","ColumnJoin","rightDataset","joinCol","parentUniques","uniqueIds","uniqueEntries","setUniqueEntries","res","distinct","useUniqueColumnEntries","jointlyUnique","keycode","role","tabIndex","faAngleRight","faAngleDown","faFile","uid","faTable","ColumnSuggestions","joins","columnUniques","setColumnsUniques","dataTypeForCol","columns_datatype","indexOf","pagedJoins","onKeydown","keyCode","leftDataset","ColumnMatchTable","joinColumns","suggestionsForColumn","useCallback","candidates","toLowerCase","sortedColumns","Breadcrumb","currentPage","formatDate","moment","format","DatasetPage","params","useDataset","activeTab","setActiveTab","pageViews","domainMetadata","mostSimilarDatasets","similarityMetrics","setSimilarityMetrics","useGetSimilarDatasets","suggestion","updatedAutomation","updateFrequency","informationAgency","owner","display_name","domain_category","metadata_updated_at","copyToClipboard","navigator","clipboard","writeText","document","queryCommandSupported","textarea","createElement","opacity","textContent","body","appendChild","select","execCommand","removeChild","CollectionPage","datasetIDs","url","window","location","split","isCopied","setIsCopied","useClipboard","setCopied","FacebookShareButton","FacebookIcon","TwitterShareButton","TwitterIcon","EmailShareButton","EmailIcon","CreateCollectionModal","GHPagesRedirect","redirect","setRedirect","sessionStorage","App","basename","path","exact","component","parentPath","Boolean","hostname","ReactDOM","render","children","useReducer","get","cachedState","JSON","parse","cache_loaded","firstPage","totalEntries","resultSetSize","Promise","all","resp","results","list","reduce","datasetPage","allDatasets","getManifest","manifest","forEach","getTagList","cats","totals","getCategories","md","department","getDepartments","columnList","getColumns","put","stringify","Provider","cacheLoaded","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"8sBAAMA,EACJ,+GAEF,SAAeC,EAAeC,GAA9B,2BAAAC,EAAAC,OAAA,uDAAsCC,EAAtC,+BAA8C,IAA9C,kBACSC,MAAM,GAAD,OACPN,EADO,mBACgCE,EAASG,EADzC,kBACwDA,IAClEE,MAAK,SAACC,GAAD,OAAOA,EAAEC,WAHlB,qCAMA,SAASC,EAA4BC,GACnC,OAAO,IAAIC,IAAJ,sBACFD,EAAQE,SAASC,aAAaC,KAAI,SAACC,GAAD,OAAOA,EAAEC,wBADzC,YAEFN,EAAQE,SAASK,mBAAmBH,KAAI,SAACC,GAAD,OAAOA,EAAEC,0BAIxD,SAASE,EAAiBC,EAASC,GACjC,IAAMC,EAAgBZ,EAA4BW,GAC5CE,EAAe,IAAIX,IACvB,YAAIQ,GAASI,QACX,SAACC,GAAD,OAAOH,EAAcI,IAAID,OAG7B,OAAOE,MAAMC,KAAKL,GAuIb,SAASM,EAAiBlB,EAASmB,GACxC,OAAOxB,MAAM,0CAAD,OAERK,EAAQE,SAASkB,GAFT,kCAGgBD,EAAOE,QAAQ,KAAM,OAE9CzB,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GACL,OAAIA,EAAEyB,WAAazB,EAAE0B,OACnBC,QAAQC,KACN,6CACAzB,EACA,WACAmB,GAEK,IAEFtB,EAAEO,KAAI,SAACsB,GAAD,OAAWC,OAAOC,OAAOF,GAAO,SCpKnD,IAAMG,EAAK,IAAIC,IAAM,gBACrBD,EAAGE,QAAQ,GAAGC,OAAO,CACnBC,aAAc,OAGT,IAAMC,EAAaC,0BAEpBC,EAAc,CAClBC,SAAU,GACVC,QAAS,GACTC,WAAY,GACZC,YAAa,GACb/B,QAAS,GACTgC,aAAa,GAGTC,EAAU,SAACC,EAAOC,GAAY,IAC1BC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,IAAK,+BACH,OAAO,eAAKF,EAAZ,CAAmBN,SAAUS,IAC/B,IAAK,cACH,OAAO,eAAKH,EAAZ,CAAmBL,QAASQ,IAC9B,IAAK,oBACH,OAAO,eAAKH,EAAZ,CAAmBJ,WAAYO,IACjC,IAAK,iBACH,OAAO,eAAKH,EAAZ,CAAmBlC,QAASqC,IAC9B,IAAK,qBACH,OAAO,eAAKH,EAAZ,CAAmBH,YAAaM,IAClC,IAAK,gBACH,OAAO,eAAKH,EAAZ,GAAsBG,GACxB,IAAK,aACH,OAAO,eAAKH,EAAZ,CAAmBF,aAAa,IAClC,QACE,OAAOE,IAwFAI,EAAgB,kBAAMC,qBAAWd,IChIvC,SAASe,IAAkB,IAAD,EACLF,IAC1B,OAF+B,oBACtBN,YAwBJ,SAASS,EAAoBlD,GAAU,IAAD,EACpB+C,IAAdV,EADkC,oBAClCA,SACT,OAAOc,mBAAQ,kBAAOnD,EFNjB,SAAsBA,EAASqC,GACpC,IAAMe,EAAOrD,EAA4BC,GAWzC,OAVgBqC,EACbjC,KAAI,SAACM,GAAD,MAAgB,CACnBV,QAASU,EACT2C,gBAAiB7C,EAAiB4C,EAAM1C,OAEzCG,QACC,SAACyC,GAAD,OACEA,EAAMD,gBAAgBE,OAAS,GAC/BD,EAAMtD,QAAQE,SAASkB,KAAOpB,EAAQE,SAASkB,MEJrBoC,CAAaxD,EAASqC,GAAY,KAAK,CACrErC,EACAqC,IAmCG,SAASoB,EAAoBC,GAAM,IAAD,EAChBX,IAAdV,EAD8B,oBAC9BA,SACT,OAAOc,mBAAQ,kBAAMd,EAASxB,QAAO,SAAC8C,GAAD,OAAOD,EAAIE,SAASD,EAAEzD,SAASkB,SAAM,CACxEiB,EACAqB,I,qBCrESG,EAAqB1B,0BAQ5BC,EAAc,CAChB0B,YAAa,CAAC,CAAE1C,GAAI,UAAWiB,SAAU,GAAI0B,KAAM,YACnDC,mBAAoB,WAGlBnC,EAAK,IAAIC,IAAM,mBACrBD,EAAGE,QAAQ,GAAGC,OAAO,CACjBiC,gBAAiB,OAGrB,IAAMvB,EAAU,SAACC,EAAOC,GAAY,IACxBC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,IAAK,iCACD,OAAO,eACAF,EADP,CAEImB,YAAa,sBACNnB,EAAMmB,aADA,gBAGFnB,EAAMmB,YAAYI,MAAK,SAACC,GAAD,MAAgB,YAATA,EAAE/C,MAH9B,CAILA,GAAIgD,MACJL,KAAMjB,EAAQiB,SAEpB3D,KAAI,SAAC+D,GAAD,MACO,YAATA,EAAE/C,GACI,CAAEA,GAAI,UAAWiB,SAAU,GAAI0B,KAAM,WACrCI,OAGlB,IAAK,oBACD,OAAO,eACAxB,EADP,CAEImB,YAAanB,EAAMmB,YAAY1D,KAAI,SAACiE,GAAD,OAC/BA,EAAIjD,KAAO0B,EAAQ1B,GAAnB,eAEaiD,EAFb,CAGUhC,SAAS,GAAD,mBAAMgC,EAAIhC,UAAV,CAAoBS,EAAQwB,cAExCD,OAGlB,IAAK,yBACD,OAAO,eACA1B,EADP,CAEImB,YAAanB,EAAMmB,YAAY1D,KAAI,SAACiE,GAAD,OAC/BA,EAAIjD,KAAO0B,EAAQ1B,GAAnB,eAEaiD,EAFb,CAGUhC,SAAUgC,EAAIhC,SAASxB,QACnB,SAAC8C,GAAD,OAAOA,IAAMb,EAAQwB,eAG7BD,OAGlB,IAAK,WACD,OAAO,eACA1B,EADP,CAEImB,YAAY,GAAD,mBACJnB,GADI,CAEPA,EAAMmB,YAAY1D,KAAI,SAACiE,GAAD,OAClBA,EAAIjD,KAAO0B,EAAQ1B,GAAnB,eACWiD,EADX,CACgBN,KAAMjB,EAAQiB,OACxBM,SAItB,IAAK,mBACD,OAAO,eACA1B,EADP,CAEImB,YAAY,GAAD,mBACJnB,GADI,CAEPA,EAAMmB,YAAY1D,KAAI,SAACiE,GAAD,OAClBA,EAAIjD,KAAO0B,EAAQ1B,GAAnB,eAA6BiD,EAA7B,CAAkChC,SAAU,KAAOgC,SAKnE,IAAK,oBACD,OAAO,eACA1B,EADP,CAEImB,YAAanB,EAAMmB,YAAYjD,QAC3B,SAACwD,GAAD,OAASA,EAAIjD,KAAO0B,EAAQ1B,QAIxC,IAAK,oBACD,OAAO,eACAuB,EADP,CAEImB,YAAY,GAAD,mBACJnB,EAAMmB,aADF,gBAEFhB,EAFE,CAEO1B,GAAIgD,YAG9B,IAAK,gBACD,OAAO,eACAzB,EADP,GAEOG,GAEX,QACI,OAAOH,IAkDN4B,EAAsB,kBAAMvB,qBAAWa,IChK7C,SAASW,IAAwB,IAAD,EACTD,IADS,mBAC5B5B,EAD4B,KACrB8B,EADqB,KAE3BT,EAA0CrB,EAA1CqB,mBAAoBU,EAAsB/B,EAAtB+B,kBAmC5B,MAAO,CAjCYV,EACbrB,EAAMmB,YAAYI,MAAK,SAACC,GAAD,OAAOA,EAAE/C,KAAOuB,EAAMqB,sBAC7CU,EAiCF,CACIC,gBANgB,SAACC,GACrBH,EAAS,CAAE5B,KAAM,mBAAoBC,QAAS,CAAE1B,GAAIwD,MAMhDC,gBAjCgB,SAACD,EAAcN,GACnCG,EAAS,CACL5B,KAAM,oBACNC,QAAS,CAAE1B,GAAIwD,EAAcN,gBA+B7BQ,qBApBqB,SAACF,EAAcN,GAAf,OACzBG,EAAS,CACL5B,KAAM,yBACNC,QAAS,CAAE1B,GAAIwD,EAAcN,gBAkB7BS,QAfQ,SAAChB,EAAMa,GAAP,OACZH,EAAS,CACL5B,KAAM,WACNC,QAAS,CAAE1B,GAAIwD,EAAcb,WAa7BiB,4BA7B4B,SAACjB,GACjCU,EAAS,CACL5B,KAAM,iCACNC,QAAS,CAAEiB,a,qBCZR,SAASkB,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UAChCC,EAAcC,IAAUC,SAASJ,GACvC,OACE,yBACEC,UAAWA,EACXI,wBAAyB,CAAEC,OAAQJ,KCDlC,SAASK,EAAeC,EAAMC,GACjC,GAAIA,EAAO,CACP,IAAMC,EAAQ,IAAIC,OAAJ,WAAeF,EAAf,KAAyB,MACvC,OACI,kBAACV,EAAD,CACIC,KAAMQ,EAAKrE,QACPuE,GACA,SAACtC,GAAD,sCAAoCA,EAApC,gBAKhB,OAAOoC,EAGJ,SAASI,EAAwBC,GACpC,MAAM,eAAN,OAAsBA,EAAWhC,KAAjC,YAAyCgC,EAAW1D,SAAS2D,KAAK,M,MClBvD,SAASC,EAAT,GAAqC,IAAZC,EAAW,EAAXA,QAC9BpC,EHwCH,WAA2B,IAAD,EACHS,IADG,mBACtB5B,EADsB,KAE7B,OAF6B,KAEtBA,EG1CawD,GAD2B,EAK3C3B,IAL2C,mBAG3CuB,EAH2C,YAIzCjB,EAJyC,EAIzCA,qBAAsBE,EAJmB,EAInBA,4BAEtBoB,EAA4B3C,EAAoBsC,EAAW1D,UANlB,EAOGgE,mBAAS,IAPZ,mBAOxCC,EAPwC,KAOrBC,EAPqB,OAQzBF,mBAAS,OARgB,mBAQxCG,EARwC,KAQnCC,EARmC,OASXJ,oBAAS,GATE,mBASxCK,EATwC,KAS5BC,EAT4B,KAgBzCC,EAAY,SAAC5G,GAAa,IAAD,IAC3B,cAAOA,QAAP,IAAOA,OAAP,YAAOA,EAAS6G,eAAeC,uBAA/B,uBAAO,EAAyC5C,MAC5C,kBAAqB,+BAArB,EAAG6C,cADP,aAAO,EAEJC,OAGP,OAAKd,EAGD,yBAAKf,UAAU,kBACVuB,EACG,yBAAKvB,UAAU,0BACX,iDACA,yBAAKA,UAAU,kCACX,uDACA,2BACI8B,YAAY,OACZpE,KAAK,OACLmE,MAAOV,EACPY,SAAU,SAACC,GAAD,OACNZ,EAAqBY,EAAEC,OAAOJ,UAGtC,4BACKZ,EAA0BhG,KAAI,SAAC+D,GAAD,OAC3B,wBAAIgB,UAAU,0BACV,6BACI,uBAAGA,UAAU,QACRhB,EAAEjE,SAAS6D,MAEhB,uBAAGoB,UAAU,UACR,IACAyB,EAAUzC,WAOnC,yBAAKgB,UAAU,0BACX,4BAAQtC,KAAK,SAASwE,QA7CjB,WACrBrC,EAA4BsB,GAC5BK,GAAc,KA2CE,UAGA,4BACI9D,KAAK,SACLwE,QAAS,kBAAMV,GAAc,KAFjC,YASR,yBAAKxB,UAAU,wBACX,2CACA,yBAAKA,UAAU,uBACX,4BACItC,KAAK,SACLwE,QAAS,kBAAMZ,EAAO,QACtBtB,UAAS,yBACG,QAARqB,EAAgB,WAAa,KAJrC,cASA,4BACI3D,KAAK,SACLwE,QAAS,kBAAMZ,EAAO,aACtBtB,UAAS,yBACG,aAARqB,EAAqB,WAAa,KAJ1C,yBAUK,QAARA,GACG,oCACI,yBAAKrB,UAAU,qCAC2B,IAArCiB,EAA0B7C,OACvB,yBAAK4B,UAAU,wBACX,oDACA,mGAOJ,4BACKiB,EAA0BhG,KAAI,SAACuD,GAAD,OAC3B,wBACIoD,IAAKpD,EAAEzD,SAAS6D,KAChBoB,UAAU,0BAEV,6BACI,uBAAGA,UAAU,QACRxB,EAAEzD,SAAS6D,MAEhB,uBAAGoB,UAAU,UACRyB,EAAUjD,KAGnB,4BACId,KAAK,SACLwE,QAAS,kBACLvC,EACIiB,EAAW3E,GACXuC,EAAEzD,SAASkB,MALvB,gBAgBpB,yBAAK+D,UAAU,0BACX,4BACItC,KAAK,SACLwE,QAAS,kBAAMV,GAAc,KAFjC,uBASH,aAARH,GACG,yBAAKrB,UAAU,wCACyB,IAAnCrB,EAAYA,YAAYP,OACrB,yBAAK4B,UAAU,wBACX,mDAGJ,wBAAIA,UAAU,6BACTrB,EAAYA,YACRjD,QAAO,SAACsD,GAAD,MAAgB,YAATA,EAAE/C,MAChBhB,KAAI,SAAC+D,GAAD,OACD,wBAAIgB,UAAU,uBACV,yBAAKA,UAAU,8BACX,uBAAGA,UAAU,QACRhB,EAAEJ,MAEP,uBAAGoB,UAAU,iBACR,IACAhB,EAAE9B,SAASkB,OAAQ,IAFxB,WAGa,MAGjB,kBAAC,OAAD,CACI+D,GAAIxB,EACA3B,IAGJ,kBAAC,IAAD,CACIoD,KAAK,KACLC,KAAMC,eAtJrC,GCnBV,SAASC,IAAW,IAAD,EACoBrB,oBAAS,GAD7B,mBACvBsB,EADuB,KACJC,EADI,OAETpD,IAAduB,EAFuB,oBAG9B,OACI,yBAAKZ,UAAU,YACX,kBAAC,OAAD,CAAM0C,IAAI,cAAc1C,UAAU,QAAQmC,GAAG,KACzC,yBACIO,IAAI,mBACJC,IAAG,UAAKC,2BAAL,0BAIX,kBAAC,OAAD,CAAMF,IAAI,UAAU1C,UAAU,UAAUmC,GAAG,KACvC,kBAAC,IAAD,CAAiBC,KAAK,KAAKC,KAAMC,MACjC,wCAEJ,yBAAKO,MAAO,CAAEC,SAAU,aACnBlC,EAAW1D,SAASkB,OAAS,GAC1B,yBAAK4B,UAAU,sBACVY,EAAW1D,SAASkB,QAG7B,4BACI8D,QAAS,kBAAMO,GAAsBD,IACrCxC,UAAU,iBAEV,kBAAC,IAAD,CAAiBoC,KAAK,KAAKC,KAAMU,MACjC,4CAEJ,kBAAC,EAAD,CAAehC,QAASyB,KAE5B,kBAAC,OAAD,CAAME,IAAI,QAAQ1C,UAAU,SACxB,kBAAC,IAAD,CAAiBoC,KAAK,KAAKC,KAAMW,MACjC,mD,kBC1CD,G,MAAA,gBAAGC,EAAH,EAAGA,UAAH,OACb,uBACEjD,UAAU,gBACViC,OAAO,SACPiB,IAAI,sBACJC,KAAMF,GAEN,4BAAQvF,KAAK,UAAb,wBAEE,kBAAC,IAAD,CAAiB2E,KAAMe,UCLd,SAASC,EAAT,GAQX,IJbuBC,EIMvBzI,EAOD,EAPCA,QACA0I,EAMD,EANCA,kBACAC,EAKD,EALCA,uBACAC,EAID,EAJCA,aAID,IAHCC,wBAGD,SAFCC,EAED,EAFCA,WACAnD,EACD,EADCA,MAEMoD,EAAgBtD,EAAezF,EAAQE,SAAS6D,KAAM4B,GACtDqD,EAAuBvD,EACzBzF,EAAQE,SAAS+I,YACjBtD,GAEJ,OACI,yBAAKR,UAAU,UAAU4B,IAAK/G,EAAQE,SAASkB,IAC3C,yBAAK+D,UAAU,iBACX,kBAAC,OAAD,CAAMA,UAAU,QAAQmC,GAAE,mBAActH,EAAQE,SAASkB,KACrD,4BAAK2H,IAET,2BAAI/I,EAAQE,SAASgJ,cAGxBJ,GACG,2CAA8B,IAAbA,GAAkBK,YAAY,GAA/C,KAEHT,GACG,4BACI7F,KAAK,SACLwE,QAAS,kBACLuB,EACMD,EAAuB3I,EAAQE,SAASkB,IACxCsH,EAAkB1I,EAAQE,SAASkB,MAG5CwH,EACK,yBACA,qBAGbC,GACG,kBAACO,EAAD,CAAkBhB,UAAWpI,EAAQoI,YAGzC,yBAAKjD,UAAU,uBACX,uBAAGA,UAAU,UAAb,gBACA,4BJnDWsD,EImDIzI,EAAQE,SAASmJ,UJ7CrC,IAAIC,KAAKb,GAAMc,mBAAmB,QALzB,CACZC,KAAM,UACNC,MAAO,OACPC,IAAK,eIiDD,yBAAKvE,UAAU,uBAAuB6D,GACtC,yBAAK7D,UAAU,gBACX,yBAAKA,UAAU,oBACX,mDADJ,UAIA,yBAAKA,UAAU,gBACX,uCACCnF,EAAQ6G,eAAe8C,YAAY3D,KAAK,S,MC3D9C,SAAS4D,EAAT,GAMX,IALFC,EAKC,EALDA,QACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,WACAC,EACC,EADDA,YACC,EAC+B5D,oBAAS,GADxC,mBACM6D,EADN,KACgBC,EADhB,KAED,OACE,yBAAKhF,UAAS,oBAAe+E,EAAW,WAAa,KACnD,yBAAK/E,UAAU,WACb,0CACA,4BACE,wBAAIkC,QAAS,kBAAM8C,GAAaD,KAAYJ,GAC3CD,EACEhJ,QAAO,SAACuJ,GAAD,OAAOA,IAAMN,KACpB1J,KAAI,SAACiK,GAAD,OACH,wBACEhD,QAAS,WACP2C,EAAWK,GACXF,GAAY,IAEdpD,IAAKsD,GAEJA,EAAQ,SAIjB,kBAAC,IAAD,CACEhD,QAAS,kBAAM4C,EAA0B,QAAdF,EAAsB,OAAS,QAC1DvC,KAAoB,QAAduC,EAAsBO,IAAWC,Q,gBC/BlC,oBACb,yBAAKpF,UAAU,mBACb,yBAAKA,UAAU,gBACZ,YAAInE,MAAM,IAAIZ,KAAI,SAACoK,EAAGC,GAAJ,OACjB,yBAAK1D,IAAK0D,EAAGtF,UAAU,WACrB,yBAAKA,UAAU,0BACf,uBAAGA,UAAU,gCACb,yBAAKA,UAAU,gC,oBCRV,SAASuF,GAAcC,GAAqB,IAAfC,EAAc,uDAAJ,GAC9CC,EAAQ1H,mBAAQ,kBAAM2H,KAAKC,KAAKJ,EAAKpH,OAASqH,KAAU,CAC5DD,EACAC,IAHsD,EAKdvE,mBAAS,GALK,mBAKjD2E,EALiD,KAKlCC,EALkC,KAOxDC,qBAAU,WACRD,EAAiB,KAChB,CAACJ,IAEJ,IAAMM,EACJ,6BACE,kBAAC,KAAD,CACEC,cAAc,WACdC,UAAU,OACVC,WAAW,MACXC,eAAe,WACfC,UAAWX,EACXY,aAAc,YAAyB,IAAZC,EAAW,EAArB5B,SACfmB,EAAiBS,IAEnBC,mBAAmB,aACnBC,sBAAsB,mBACtBC,gBAAgB,SAChBC,kBAAkB,YAClBC,cAAc,YACdC,cAAc,eAKdC,EAAUtB,EAAKuB,MACnBlB,EAAgBJ,GACfI,EAAgB,GAAKJ,GAGxB,MAAO,CACLqB,EACA,CACEd,gB,UCvCS,qBACb,yBAAKhG,UAAU,IACb,yBAAKA,UAAU,0BACZ,YAAInE,MAAM,KAAKZ,KAAI,SAACoK,EAAGC,GAAJ,OAClB,wBAAI1D,IAAK0D,EAAGtF,UAAU,iBACpB,2BAAOtC,KAAK,WAAWsJ,UAAQ,EAAChH,UAAU,aAC1C,0BAAMA,UAAU,sBAChB,0BAAMA,UAAU,wB,MCJX,SAASiH,GAAT,GAA8D,IAArCC,EAAoC,EAApCA,MAAOvC,EAA6B,EAA7BA,SAAU5C,EAAmB,EAAnBA,SAAUoF,EAAS,EAATA,MAAS,EACxCjG,oBAAS,GAD+B,mBACnEkG,EADmE,KACxDC,EADwD,KAOpEC,EAASxJ,IAP2D,EAStCoD,mBAAS,IAT6B,mBASnEqG,EATmE,KASvDC,EATuD,KAkBpEC,EAAYzJ,mBAAQ,kBAAMkJ,GAAS1K,OAAOkL,KAAKR,KAAQ,CAACA,IAlBY,EAoBhCS,IAAQ,CAChDnC,KAAMiC,EAAUxM,KAAI,SAAC2M,GAAD,MAAW,CAC7BhJ,KAAMgJ,MAERlD,QAAS,CACPgD,KAAM,CAAC,QACPG,YAAY,EACZC,gBAAgB,EAChBC,eAAe,KARHC,EApB0D,EAoBlEC,OAAuBC,EApB2C,EAoB3CA,OAY/BnC,qBAAU,kBAAMmC,EAAOX,KAAa,CAACW,EAAQX,IAE7C,IAlC0E,EA0CpCY,GARlBnK,mBAClB,yBACEgK,QADF,IACEA,OADF,EACEA,EACI/M,KAAI,SAAC2M,GAAD,OAAUA,EAAKhJ,QACpBwJ,MAAK,SAAC/N,EAAGgO,GAAJ,OAAWnB,EAAM7M,GAAK6M,EAAMmB,GAAK,GAAK,OAChD,CAACL,EAAed,IAG+C,IA1CS,mBA0CnEoB,EA1CmE,KA0CrDtC,EA1CqD,KA0CrDA,YAErB,OACE,yBAAKhG,UAAU,kBACb,4BACE,4BACEA,UAAU,gBACVtC,KAAK,SACLwE,QAAS,kBAAMmF,GAAcD,KAE5BD,EALH,IAKU,kCAAQC,EAAY,IAAM,KAAY,OAIhDA,GACA,oCACE,yBAAKpH,UAAU,UACb,2BACEgH,UAAWM,EACXxF,YAAY,SACZD,MAAO0F,EACPxF,SAAU,SAACC,GAAD,OAAOwF,EAAcxF,EAAEC,OAAOJ,WAG5C,wBAAI7B,UAAU,cACVsH,EAGAgB,EAAWrN,KAAI,SAAC2M,GAAD,OAEb,wBACEhG,IAAKgG,EACL1F,QAAS,kBA/DN,SAAC0F,GAClB,IAAMW,EAAe5D,EAASlG,SAASmJ,GACnCjD,EAASjJ,QAAO,SAAC4J,GAAD,OAAOA,IAAMsC,KADZ,sBAEbjD,GAFa,CAEHiD,IAClB7F,EAASwG,GA2DoBC,CAAWZ,IAC1B5H,UAAS,wBACP2E,GAAYA,EAASlG,SAASmJ,GAAQ,WAAa,KAGrD,2BACElK,KAAK,WACL+K,QAAS9D,GAAYA,EAASlG,SAASmJ,GACvC5H,UAAU,aAEZ,0BAAMA,UAAU,aAAa4H,GAC7B,0BAAM5H,UAAU,QAAQkH,EAAMU,QAjBlC,kBAAC,GAAD,OAsBH5B,EACArB,GAAYA,EAASvG,OAAS,GAC7B,4BAAQV,KAAK,SAASwE,QAzFb,WACjBH,EAAS,MAwFD,WC9EG,SAAS2G,KACpB,IAAMtL,EdPH,WAA0B,IAAD,EACLQ,IACzB,OAF8B,oBACrBR,WcMYuL,GACbC,EdbH,WAAoB,IAAD,EACFhL,IACtB,OAFwB,oBACfT,QcYM0L,GACPxL,EdJH,WAA2B,IAAD,EACLO,IAC1B,OAF+B,oBACtBP,YcGayL,GACdxN,EdAH,WAAuB,IAAD,EACLsC,IACtB,OAF2B,oBAClBtC,QcDSyN,GACVzB,EAASxJ,IALgB,EAMSoD,mBAAS,IANlB,mBAMxB8H,EANwB,KAMVC,EANU,OAOc/H,oBAAS,GAPvB,mBAOxBgI,EAPwB,KAORC,EAPQ,OAQejI,mBAAS,IARxB,mBAQxBkI,EARwB,KAQPC,EARO,OASqBnI,mBAAS,IAT9B,mBASxBoI,EATwB,KASJC,EATI,OAUuBrI,mBAAS,IAVhC,mBAUxBsI,EAVwB,KAUHC,EAVG,OAWKvI,mBAAS,IAXd,mBAWxBqG,EAXwB,KAWZC,EAXY,OAYHtG,mBAAS,QAZN,mBAYxBwI,EAZwB,KAYhBC,EAZgB,OAaWzI,mBAAS,OAbpB,mBAaxB0I,EAbwB,KAaTC,EAbS,OAkB3BxK,IAlB2B,mBAgB3BuB,EAhB2B,aAiBzBlB,GAjByB,GAiBzBA,gBAAiBC,GAjBQ,GAiBRA,qBAGfzC,GdoCL,YAAwE,IAAjD0L,EAAgD,EAAhDA,KAAMkB,EAA0C,EAA1CA,KAAM1M,EAAoC,EAApCA,WAAY9B,EAAwB,EAAxBA,QAAS+B,EAAe,EAAfA,YAAe,EACrDO,IAAdV,EADmE,oBACnEA,SADmE,EAG/ByK,IAAQ,CACnDnC,KAAMtI,EACNwH,QAAS,CACPmD,YAAY,EACZC,gBAAgB,EAChBiC,gBAAgB,EAChBrC,KAAM,CAAC,gBAAiB,wBACxBK,eAAe,KAPHiC,EAH4D,EAGpE/B,OAA0BC,EAH0C,EAG1CA,OAelC,OAJAnC,qBAAU,WACRmC,EAAO4B,KACN,CAAC5B,EAAQ4B,IAEL9L,mBAAQ,WACb,GAAIgM,EAAkB,CACpB,IAAIC,EACFD,EAAiB,IAAMA,EAAiB,GAAGpC,KACvCoC,EAAiB/O,KAAI,SAACkD,GAAD,OAAWA,EAAMyJ,QAD1C,YAEQoC,GAEJE,EACJF,GAAoBA,EAAiB,IAAMA,EAAiB,GAAGpC,KAC3DoC,EAAiB/O,KAAI,SAACuD,GAAD,MAAQ,CAC3BvC,GAAIuC,EAAEoJ,KAAK7M,SAASkB,GACpBiO,QAAS1L,EAAE0L,YAEb,GAwCN,OAtCItB,GAAQA,EAAKxK,OAAS,IACxB6L,EAAiBA,EAAevO,QAC9B,SAACb,GAAD,OACEA,EAAQsP,mBAAmB3F,YAAY9I,QAAO,SAAC0O,GAAD,OAC5CxB,EAAKnK,SAAS2L,MACdhM,OAAS,MAIbhB,GAAcA,EAAWgB,OAAS,IACpC6L,EAAiBA,EAAevO,QAC9B,SAACb,GAAD,OACEA,EAAQ6G,eAAetE,WAAW1B,QAAO,SAAC2O,GAAD,OACvCjN,EAAWqB,SAAS4L,MACpBjM,OAAS,MAIb9C,GAAWA,EAAQ8C,OAAS,IAC9B/B,QAAQiO,IAAI,0BAA2BhP,GACvC2O,EAAiBA,EAAevO,QAC9B,SAACb,GAAD,OACEA,EAAQE,SAASC,cACjBH,EAAQE,SAASC,aAAaU,QAAO,SAACwD,GAAD,OAAS5D,EAAQmD,SAASS,MAC5Dd,OAAS,MAIdf,GAAeA,EAAYe,OAAS,IACtC6L,EAAiBA,EAAevO,QAAO,SAACb,GAAD,aACrCwC,EAAYoB,SAAZ,UACE5D,EAAQ6G,eAAeC,gBAAgB5C,MACrC,SAACP,GAAD,MAAiB,+BAAVA,EAAEoD,cAFb,aACE,EAEGC,WAKF,CACL3E,SAAU+M,EACVC,QAASA,EAAQxO,QAAO,SAACyC,GAAD,OACtB8L,EAAelL,MAAK,SAACrE,GAAD,OAAOA,EAAEK,SAASkB,KAAOkC,EAAMlC,UAIzD,OAAOiB,IACN,CAAC8M,EAAkBpB,EAAMxL,EAAY9B,EAAS+B,EAAaH,IcnHvCqN,CAAY,CAC7B3B,KAAMI,EACN5L,WAAYkM,EACZhO,QAAS8N,EACTU,KAAMvC,EACNlK,YAAamM,IALTtM,SApBuB,GAkCUqI,GdwGtC,SAA0BrI,EAAUQ,GAAoB,IAAd8M,EAAa,wDAE5D,OAAOxM,mBAAQ,WA+Bb,OA7Bed,EAASkL,MAAK,SAAC/N,EAAGgO,GAC/B,IAAIoC,EAAO,KACPC,EAAO,KACX,OAAQhN,GACN,IAAK,OACH+M,EAAOpQ,EAAEU,SAAS6D,KAClB8L,EAAOrC,EAAEtN,SAAS6D,KAClB,MACF,IAAK,aACH6L,EAAOpQ,EAAEU,SAAS4P,UAClBD,EAAOrC,EAAEtN,SAAS4P,UAClB,MACF,IAAK,aACHF,EAAOpQ,EAAEU,SAASmJ,UAClBwG,EAAOrC,EAAEtN,SAASmJ,UAClB,MACF,IAAK,YACHuG,EAAOpQ,EAAEU,SAAS6P,eAClBF,EAAOrC,EAAEtN,SAAS6P,eAClB,MACF,IAAK,QACHH,EAAOpQ,EAAEU,SAAS8P,WAAWC,iBAC7BJ,EAAOrC,EAAEtN,SAAS8P,WAAWC,iBAKjC,OAAQL,EAAOC,EAAO,GAAK,IAAMF,EAAM,GAAK,QAG7C,CAACtN,EAAUQ,EAAM8M,IchJKO,CACnB7N,GACAwM,EACkB,QAAlBE,GAGmE,GAlCxC,qBAkCxBoB,GAlCwB,MAkCPhF,GAlCO,MAkCPA,YAExB,OACI,yBAAKhG,UAAU,aACX,yBAAKA,UAAS,kBAAakJ,EAAiB,YAAc,KACpDA,EA8CE,oCACI,4BACI,4BACI+B,UAAW,kBAAM9B,GAAmB,IACpCjH,QAAS,kBAAMiH,GAAmB,IAClCnJ,UAAU,gBACVtC,KAAK,UAJT,aA/CR,oCACI,wBAAIsC,UAAU,iBACV,4BACIiL,UAAW,kBAAM9B,GAAmB,IACpCjH,QAAS,kBAAMiH,GAAmB,IAClCnJ,UAAU,gBACVtC,KAAK,UAJT,WAMY,kBAAC,IAAD,CAAiB2E,KAAM6I,QAGvC,yBAAKlL,UAAU,cACX,kBAAC,GAAD,CACIkH,MAAO9J,EACP2E,SAAUwH,EACV5E,SAAU2E,EACVnC,MAAM,gBAGd,yBAAKnH,UAAU,eACX,kBAAC,GAAD,CACIkH,MAAO7J,EACPsH,SAAU6E,EACVzH,SAAU0H,EACVtC,MAAM,iBAGd,yBAAKnH,UAAU,WACX,kBAAC,GAAD,CACIkH,MAAO5L,EACPqJ,SAAUyE,EACVrH,SAAUsH,EACVlC,MAAM,aAGd,yBAAKnH,UAAU,QACX,kBAAC,GAAD,CACIkH,MAAO0B,EACPjE,SAAUqE,EACVjH,SAAUkH,EACV9B,MAAM,YAmB1B,yBAAKnH,UAAU,YACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAiBoC,KAAK,KAAKC,KAAM8I,MACjC,kBAAC,gBAAD,CACIzN,KAAK,OACLqE,SAAU,SAACC,GAAD,OAAOwF,EAAcxF,EAAEC,OAAOJ,QACxCA,MAAO0F,EACP6D,gBAAiB,IACjBtJ,YAAY,wBAGpB,yBAAK9B,UAAU,kBACX,2BACI,0BAAMA,UAAU,QAAQ9C,GAASkB,QADrC,aAIA,kBAAC,EAAD,CACIsG,QAAS,CACL,OACA,aACA,aACA,YACA,SAEJI,YAAa,SAACF,GAAD,OAAeiF,EAAiBjF,IAC7CD,SAAU+E,EACV9E,UAAWgF,EACX/E,WAAY,SAACF,GAAD,OAAcgF,EAAUhF,OAI5C,wBAAI3E,UAAU,gBACTsH,EACG0D,GAAc/P,KAAI,SAACJ,GAAD,aACd,kBAAC,EAAD,CACI+G,IAAG,OAAE/G,QAAF,IAAEA,OAAF,YAAEA,EAASE,gBAAX,aAAE,EAAmBkB,GACxBpB,QAASA,EACT4I,aAAc7C,EAAW1D,SAASuB,SAC9B5D,EAAQE,SAASkB,IAErBsH,kBAAmB,SAACpE,GAAD,OACfO,GAAgBkB,EAAW3E,GAAIkD,IAEnCqE,uBAAwB,SAACrE,GAAD,OACpBQ,GACIiB,EAAW3E,GACXkD,IAGRqB,MAAO+G,OAIf,kBAAC,EAAD,OAGR,6BAAMvB,M,uCCnKP,SAASqF,GAAT,GAA+D,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAAiB,EACvCtK,oBAAS,GAD8B,mBAClEkG,EADkE,KACvDC,EADuD,KAEnEoE,EfqLH,SAAgC5Q,EAASmB,GAAS,IAAD,EACZkF,mBAAS,MADG,mBAC/CwK,EAD+C,KAChCC,EADgC,KAWtD,OATA5F,qBAAU,WACRhK,EAAiBlB,EAASmB,GAAQvB,MAAK,SAACmR,GACtCD,EAAiB,CACf9Q,QAASA,EAAQE,SAASkB,GAC1BD,SACA6P,SAAUD,SAGb,CAAC/Q,EAASmB,IACN0P,EehMaI,CAAuBR,EAAcC,GACjDQ,EAAgB/N,mBAClB,kBACIyN,GAAaD,EACPA,EAAc9P,QAAO,SAACsG,GAAD,OAAOyJ,EAAUI,SAASpN,SAASuD,MACxD,KACV,CAACyJ,EAAWD,IARyD,EAarEnM,IAbqE,mBAWrEuB,EAXqE,YAYnElB,EAZmE,EAYnEA,gBAAiBC,EAZkD,EAYlDA,qBAGvB,OACI,yBAAKK,UAAU,eACX,yBAAKA,UAAU,mBACX,0BACIkC,QAAS,kBAAMmF,GAAcD,IAC7B6D,UAAW,SAACjJ,GACU,KAAdA,EAAEgK,SACF3E,GAAcD,IAGtBpH,UAAU,mBACViM,KAAK,SACLC,SAAS,KAET,kBAAC,IAAD,CACI7J,KAAM+E,EAAY+E,IAAeC,MAErC,kBAAC,IAAD,CAAiB/J,KAAMgK,OACtBf,EAAavQ,SAAS6D,MAE3B,8BACKmN,EAAa,UACLA,EAAc3N,OADT,iBAER,WAEV,8BACI,kBAAC,OAAD,CAAM+D,GAAE,mBAAcmJ,EAAavQ,SAASkB,KAA5C,iBAIJ,4BACIyB,KAAK,SACLwE,QAAS,kBACLtB,EAAW1D,SAASuB,SAAS6M,EAAavQ,SAASkB,IAC7C0D,EAAqB2L,EAAavQ,SAASkB,IAC3CyD,EAAgB4L,EAAavQ,SAASkB,MAG/C2E,EAAW1D,SAASuB,SAAS6M,EAAavQ,SAASkB,IAC9C,iCACA,+BAGZmL,GAAaqE,GACX,yBAAKzL,UAAU,sBACX,0CACA,4BACK+L,EAAchF,MAAM,EAAG,IAAI9L,KAAI,SAACqR,GAAD,OAC5B,wBAAI1K,IAAK0K,GACL,yBAAKtM,UAAU,QACf,kBAAC,IAAD,CAAiBqC,KAAMkK,MACvB,8BAAOD,QAInB,oCAAUP,EAAc3N,OAAS,GAAjC,W,MC3EL,SAASoO,GAAT,GAAwD,IAA3BxQ,EAA0B,EAA1BA,OAAQyQ,EAAkB,EAAlBA,MAAO5R,EAAW,EAAXA,QAAW,EACzBqG,mBAAS,IADgB,mBAC7DwL,EAD6D,KAC9CC,EAD8C,OAGlCzL,oBAAS,GAHyB,mBAG7DkG,EAH6D,KAGlDC,EAHkD,KAI9DuF,EACJ/R,EAAQE,SAAS8R,iBACfhS,EAAQE,SAASC,aAAa8R,QAAQ9Q,IAN0B,EAS9BuJ,GAAckH,EAAO,IATS,mBAS7DM,EAT6D,KAS/C/G,EAT+C,KAS/CA,YAUrB,OARAD,qBAAU,WACJ0G,EAAMrO,OAAS,GACjBrC,EAAiBlB,EAASmB,GAAQvB,MAAK,SAACmR,GACtCe,EAAkBf,QAGrB,CAAC5P,EAAQnB,EAAS4R,IAGnB,yBAAKzM,UAAS,6BAAwBoH,EAAY,YAAc,KAC9D,yBACEpH,UAAU,YACViM,KAAK,SACLe,UAAW,SAAChL,GACQ,KAAdA,EAAEiL,SACJ5F,GAAcD,IAGlBlF,QAAS,kBAAMmF,GAAcD,IAC7B8E,SAAS,KAET,0BAAMlM,UAAU,mBACd,kBAAC,IAAD,CAAiBqC,KAAM+E,EAAY+E,IAAeC,MAAgB,IACjEpQ,GAEH,8BAAO4Q,GACP,8BAAOH,EAAMrO,OAAb,qCAEAgJ,GAAa2F,GACb,yBAAK/M,UAAU,+BACb,gDACCyM,GACC,4BACGM,EAAW9R,KAAI,SAAC4F,GAAD,OACd,wBAAIe,IAAKf,EAAKhG,QAAQE,SAASkB,IAC7B,kBAAC,GAAD,CACEiR,YAAarS,EACbyQ,aAAczK,EAAKhG,QACnB0Q,QAASvP,EACTwP,cAAekB,SAMxB1G,I,MC5DI,SAASmH,GAAT,GAAqD,IAAzBtS,EAAwB,EAAxBA,QAASuS,EAAe,EAAfA,YAC5C9R,EAAUT,EAAQE,SAASC,aAE3BqS,EAAuBC,uBAC3B,SAACpO,EAAKqO,GACJ,OAAOjS,EACHiS,EAAW7R,QAAO,SAACsD,GAAD,OAChBA,EAAEd,gBAAgBO,SAASS,EAAIsO,kBAEjC,KAEN,CAAClS,IAGGmS,EAAgBzP,mBACpB,kBACEoP,EACI9R,EAAQ8M,MAAK,SAAC/N,EAAGgO,GAAJ,OACXgF,EAAqBhT,EAAG+S,GAAahP,OACrCiP,EAAqBhF,EAAG+E,GAAahP,OACjC,GACC,KAEP,KACN,CAAC9C,EAAS8R,EAAaC,IAGzB,OACE,yBAAKrN,UAAU,sBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,aACZ,2CACA,2CACA,oDAGHyN,EAAcxS,KAAI,SAACe,GAAD,OACjB,kBAAC,GAAD,CACEnB,QAASA,EACTmB,OAAQA,EACRyQ,MAAOY,EAAqBrR,EAAQoR,S,UCjC/BM,GAPI,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACjB,yBAAK3N,UAAU,cACb,kBAAC,OAAD,CAAMmC,GAAG,KAAT,QACA,oCAAUwL,KCQRC,I,MAAa,SAACtK,GAAD,OAAUuK,KAAOvK,GAAMwK,OAAO,mBAElC,SAASC,GAAT,GAAiC,IAAD,MACnC5O,EADmC,EAAThB,MACN6P,OAApB7O,UACFtE,EnB6CH,SAAoBsE,GAAY,IAAD,EACbvB,IACvB,OAFoC,oBAC3BV,SACO6B,MAAK,SAACP,GAAD,OAAOA,EAAEzD,SAASkB,KAAOkD,KmB/C5B8O,CAAW9O,GACrBsN,EAAQ1O,EAAoBlD,GAHS,EAITqG,mBAAS,SAJA,mBAIpCgN,EAJoC,KAIzBC,EAJyB,KAKrCpT,EAAQ,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAASE,SACpBqT,EAAS,OAAGrT,QAAH,IAAGA,OAAH,EAAGA,EAAU8P,WACtBnJ,EAAc,OAAG7G,QAAH,IAAGA,OAAH,EAAGA,EAAS6G,eAC1B2M,EAAc,OAAG3M,QAAH,IAAGA,OAAH,EAAGA,EAAgBC,gBAEjC2M,EnBWH,SAA+BnP,GAAY,IAAD,EACG+B,mBAAS,IADZ,mBACxCqN,EADwC,KACrBC,EADqB,OAExB5Q,IAAdV,EAFsC,oBAEtCA,SAqBT,OAnBA6I,qBAAU,WACRvL,MAAM,GAAD,OAAIoI,2BAAJ,6BACFnI,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAO8T,EAAqB9T,QACnC,IAEH2B,QAAQiO,IAAI,YAAapN,EAAUqR,GAEXvQ,mBACtB,kBACEuQ,EAAkBpP,IAAcjC,GAAYA,EAASkB,OAAS,EAC1DmQ,EAAkBpP,GAAWlE,KAAI,SAACkD,GAAD,MAAY,CAC3CwF,WAAYxF,EAAMwF,WAClB9I,QAASqC,EAAS6B,MAAK,SAACP,GAAD,OAAOA,EAAEzD,SAASkB,KAAOkC,EAAMtD,eAExD,KAEN,CAAC0T,EAAmBpP,EAAWjC,ImBjCPuR,CAAsBtP,GAEzCzD,QAAO,SAACgT,GAAD,OAAgBA,EAAW7T,QAAQE,SAASkB,KAAOkD,KAC1D4H,MAAM,EAAG,IAZ6B,EAiBvC1H,IAjBuC,mBAevCuB,EAfuC,YAgBrClB,EAhBqC,EAgBrCA,gBAAiBC,EAhBoB,EAgBpBA,qBAGjBgP,EAAiB,OAAGN,QAAH,IAAGA,OAAH,YAAGA,EAAgBtP,MACtC,gBAAG6C,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAR,MAA4B,sBAARD,GAAyC,OAAVC,YADhC,aAAG,EAEvBA,MAEG+M,EAAe,OAAGP,QAAH,IAAGA,OAAH,YAAGA,EAAgBtP,MACpC,kBAAqB,4BAArB,EAAG6C,cADc,aAAG,EAErBC,MAEGgN,EAAiB,OAAGR,QAAH,IAAGA,OAAH,YAAGA,EAAgBtP,MACtC,kBAAqB,+BAArB,EAAG6C,cADgB,aAAG,EAEvBC,MAEH,OAAOhH,EACH,yBAAKmF,UAAU,gBACX,yBAAKA,UAAU,mBACX,iCACI,kBAAC,GAAD,CAAY2N,YAAa5S,EAAS6D,QAEtC,iCACI,4BAAK7D,EAAS6D,MACd,2BAAIiQ,GACJ,kBAAC/O,EAAD,CAASC,KAAMhF,EAAS+I,cACxB,4BACIpG,KAAK,SACLsC,UAAU,oBACVkC,QAAS,kBACLtB,EAAW1D,SAASuB,SAASU,GACvBQ,EAAqBiB,EAAW3E,GAAIkD,GACpCO,EAAgBkB,EAAW3E,GAAIkD,KAGxCyB,EAAW1D,SAASuB,SAASU,GACxB,yBACA,oBAAqB,MAGnC,6BAASa,UAAU,iBACf,yCACA,yBACI0C,IAAI,gBACJC,IAAI,sGAER,kBAACsB,EAAD,CAAkBhB,UAAWpI,EAAQoI,aAEzC,6BAASjD,UAAU,YACf,wCACA,iDACA,2BAAI2O,GACJ,gDACA,2BAAIC,GACJ,6CACA,kCAAI/T,QAAJ,IAAIA,OAAJ,EAAIA,EAASiU,MAAMC,cAClBF,GACG,oCACI,sCACA,2BAAIA,KAGG,OAAdnN,QAAc,IAAdA,OAAA,EAAAA,EAAgBsN,kBACb,oCACI,wCACA,2BAAItN,EAAesN,kBAG3B,uCACA,2BAAIpB,GAAU,OAAC7S,QAAD,IAACA,OAAD,EAACA,EAAUmJ,YACzB,mDACA,2BAAI0J,GAAU,OAAC7S,QAAD,IAACA,OAAD,EAACA,EAAUkU,sBACzB,0CACA,kCAAIb,QAAJ,IAAIA,OAAJ,EAAIA,EAAWtD,oBAGvB,yBAAK9K,UAAU,2BACX,0DACA,yBAAKA,UAAU,QACX,4BACItC,KAAK,SACLsC,UAAyB,UAAdkO,EAAwB,SAAW,GAC9ChM,QAAS,kBAAMiM,EAAa,WAHhC,0BAOA,4BACIzQ,KAAK,SACLsC,UAAyB,UAAdkO,EAAwB,SAAW,GAC9ChM,QAAS,kBAAMiM,EAAa,WAHhC,yBAQW,UAAdD,GACG,oCACI,qNAMA,kBAAC,GAAD,CACIrT,QAASA,EACTuS,YAAaX,KAIV,UAAdyB,GACG,oCACI,kGAICI,EAAoBrT,KAAI,SAACuD,GAAD,OACrB,kBAAC,EAAD,CACI+E,kBAAmB7D,EACnB8D,uBAAwB7D,EACxB9E,QAAS2D,EAAE3D,QACX8I,WAAYnF,EAAEmF,WACdF,aAAc7C,EAAW1D,SAASuB,SAC9BD,EAAE3D,QAAQE,SAASkB,YAS/C,0C,kEChKFiT,GAAkB,SAAO3O,GAAP,eAAAlG,EAAAC,OAAA,oDAClB6U,UAAUC,UADQ,2CAAA/U,EAAA,MAGZ8U,UAAUC,UAAUC,UAAU9O,IAHlB,iCAIX,GAJW,2CAWpB+O,SAASC,wBACTD,SAASC,sBAAsB,QAZX,wBAcdC,EAAWF,SAASG,cAAc,aAC/B5M,MAAM6M,QAAU,IACzBF,EAASG,YAAcpP,EAEvBiP,EAAS3M,MAAMC,SAAW,QAC1BwM,SAASM,KAAKC,YAAYL,GAC1BA,EAASM,SApBW,4BAsBXR,SAASS,YAAY,SAtBV,6DAyBX,GAzBW,yBA2BlBT,SAASM,KAAKI,YAAYR,GA3BR,+CA8Bf,GA9Be,uECaT,SAASS,GAAT,GAAoC,IAAD,IAAT9R,MACJ6P,OAA3BpP,EADwC,EACxCA,KAAMsR,EADkC,EAClCA,WACRC,EAAMC,OAAOC,SAASlN,KACtBjG,EAAWoB,EAAoB4R,EAAWI,MAAM,MAHN,EDoBnC,SAACH,GAAS,IAAD,EACUjP,oBAAS,GADnB,mBACfqP,EADe,KACLC,EADK,KAOtB,MAAO,CAACD,EAJU,oBAAAlW,EAAAC,OAAA,kEAAAD,EAAA,MACV6U,GAAgBiB,IADN,OAEhBK,GAAY,GAFI,uCClBYC,CAAaN,GALK,mBAKzCI,EALyC,KAK/BG,EAL+B,KAMhD,OACE,yBAAK1Q,UAAU,oBACb,yBAAKA,UAAU,uBACb,iCACE,kBAAC,GAAD,CAAY2N,YAAY,iBAE1B,iCACE,4BAAK/O,GACL,2BACG1B,EAASkB,OADZ,WAC4BlB,EAASkB,OAAS,EAAI,IAAM,KAI1D,6BACE,sDACA,uBAAG4B,UAAU,eAAemQ,EAA5B,KACA,4BAAQzS,KAAK,SAASwE,QAASwO,GAA/B,aAGA,8BAAOH,EAAW,UAAY,IAA9B,KACA,uBAAGvQ,UAAU,eACX,kBAAC2Q,GAAA,EAAD,CAAqBR,IAAKA,GACxB,kBAACS,GAAA,EAAD,CAAcxO,KAAM,MACC,IACvB,kBAACyO,GAAA,EAAD,CAAoBV,IAAKA,GACvB,kBAACW,GAAA,EAAD,CAAa1O,KAAM,MAErB,kBAAC2O,GAAA,EAAD,CAAkBZ,IAAKA,GACrB,kBAACa,GAAA,EAAD,CAAW5O,KAAM,SAKzB,yBAAKpC,UAAU,uBACZ9C,EAASjC,KAAI,SAACJ,GAAD,OACZ,kBAAC,EAAD,CAAS6I,kBAAgB,EAAC9B,IAAK/G,EAAQoB,GAAIpB,QAASA,S,MClD/C,SAASoW,KAAyB,IAAD,EACO5R,IADP,mBACrCuB,EADqC,YACvBpB,EADuB,EACvBA,gBAAiBI,EADM,EACNA,QAChC1C,EAAWoB,EAAoBsC,EAAW1D,UAEhD,OACI,yBAAK8C,UAAU,2BACX,6EACA,4BACK9C,EAASjC,KAAI,SAACJ,GAAD,OACV,4BAAKA,EAAQE,SAAS6D,UAG9B,2BACIlB,KAAK,OACLoE,YAAY,OACZD,MAAOjB,EAAWhC,KAClBmD,SAAU,SAACC,GAAD,OAAOpC,EAAQoC,EAAEC,OAAOJ,UAEtC,kBAAC,OAAD,CACIM,GAAE,sBAAiBvB,EAAWhC,KAA5B,YAAoCgC,EAAW1D,SAAS2D,KACtD,OAGJ,4BAAQnD,KAAK,SAASwE,QAAS1C,GAA/B,YC1BD,SAAS0R,KAAmB,IAAD,EACRhQ,mBAAS,MADD,mBACjCiQ,EADiC,KACvBC,EADuB,KAmBxC,OAjBArL,qBAAU,WAER,IAAM9D,EAASoP,eAAeF,SAG9B,UAFOE,eAAeF,SAElBlP,GAAUA,IAAWmO,OAAOC,SAASlN,KAAM,CAC7C,IAAIhB,EAAKF,EAEPE,EAAE,WAAOA,EACNmO,MAAM,KACNvJ,MAAM,GACNlG,KAAK,MAEVuQ,EAAYjP,MAEb,IAECgP,EACK,kBAAC,IAAD,CAAUhP,GAAIgP,IAEhB,qC,MC4BMG,OAlCf,WACI,OACI,yBAAKtR,UAAU,OACX,kBAAC,gBAAD,CAAQuR,SAAU3O,4BACd,kBAAC,iBAAD,MACA,kBAAC,EAAD,MACA,yBAAK5C,UAAU,WACX,kBAACkR,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOM,KAAK,IAAIC,OAAK,EAACC,UAAWhJ,KACjC,kBAAC,IAAD,CACI8I,KAAK,sBACLC,OAAK,EACLC,UAAW3D,KAEf,kBAAC,IAAD,CACIyD,KAAK,gCACLC,OAAK,EACLC,UAAWzB,KAGf,kBAAC,aAAD,CACIuB,KAAK,kBACLG,WAAW,IACXD,UAAWT,KAEf,kBAAC,IAAD,CAAUnV,KAAK,IAAIqG,GAAG,WCjC1ByP,QACW,cAA7BxB,OAAOC,SAASwB,UAEe,UAA7BzB,OAAOC,SAASwB,UAEhBzB,OAAOC,SAASwB,SAAS1T,MACvB,2DCTN2T,IAASC,OACP,mB3BuC2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACnBC,qBAAW1U,EAASN,GADD,mBACtCO,EADsC,KAC/B8B,EAD+B,KAM7CyG,qBAAU,WACRrJ,EAAGI,aAAaoV,IAAI,GAAGzX,MAAK,SAACwN,GAC3B,GAAIA,EAAQ,CACV,IAAMkK,EAAcC,KAAKC,MAAMpK,EAAOzC,MACtClG,EAAS,CACP5B,KAAM,gBACNC,QAAQ,eAAMV,EAAP,GAAuBkV,EAAvB,CAAoCG,cAAc,MAG3DhT,EAAS,CACP5B,KAAM,oBDnBT,8BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACmBF,EAAe,EAAG,IADrC,cACCoY,EADD,OAECC,EAAeD,EAAUE,cACzB/M,EAAQC,KAAKC,KAAK4M,EAAe,KAHlC,kBAIEE,QAAQC,IACb,YAAI9W,MAAM6J,IAAQzK,KAAI,SAACoK,EAAGC,GAAJ,OACpBnL,EAAemL,GAAG7K,MAAK,SAACmY,GAAD,OAAUA,EAAKC,eAExCpY,MAAK,SAACqY,GACN,OAAOA,EAAKC,QACV,SAACC,EAAaC,GAAd,4BAAkCA,GAAlC,YAAkDD,MAClD,QAXC,sCCsBCE,GAAczY,MAAK,SAAC0Y,GAClB,IAAMhW,EDiET,SAAoBD,GACzB,IAAMC,EAAU,GAahB,OAXAD,EAASkW,SAAQ,SAACvY,GACZA,EAAQ6G,eAAe8C,aACzB3J,EAAQ6G,eAAe8C,YAAY4O,SAAQ,SAAChJ,GACtCA,KAAOjN,EACTA,EAAQiN,IAAQ,EAEhBjN,EAAQiN,GAAO,QAKhBjN,EC/EiBkW,CAAWF,GACrB/V,EDiBT,SAAuBF,GAkB5B,OAjBmBA,EAAS6V,QAC1B,SAACO,EAAMzY,GAAP,4BACKyY,GADL,YAEMzY,EAAQ6G,eAAetE,WACvBvC,EAAQ6G,eAAetE,WACvB,OAEN,IAGwB2V,QACxB,SAACQ,EAAQlJ,GAAT,OACEA,KAAOkJ,EAAP,eACSA,EADT,eACkBlJ,EAAMkJ,EAAOlJ,GAAO,IADtC,eAESkJ,EAFT,eAEkBlJ,EAAM,MAC1B,ICjCyBmJ,CAAcL,GAC3B9V,EDyCT,SAAwBH,GAgB7B,OAfoBA,EACjBjC,KAAI,SAACJ,GAAD,OACHA,EAAQ6G,eAAeC,gBAAgB5C,MACrC,SAAC0U,GAAD,MAAmB,+BAAXA,EAAG7R,UAGdlG,QAAO,SAAC8C,GAAD,OAAOA,KACdvD,KAAI,SAACuD,GAAD,OAAOA,EAAEqD,SACWkR,QACzB,SAACQ,EAAQG,GAAT,OACEA,KAAcH,EAAd,eACSA,EADT,eACkBG,EAAaH,EAAOG,GAAc,IADpD,eAESH,EAFT,eAEkBG,EAAa,MACjC,ICvD0BC,CAAeR,GAC7B7X,EDNT,SAAoB4B,GACzB,IAAM0W,EAAa,GAanB,OAXA1W,EAASkW,SAAQ,SAACvY,GACZA,EAAQE,SAASC,cACnBH,EAAQE,SAASC,aAAaoY,SAAQ,SAAClU,GACjCA,KAAO0U,EACTA,EAAW1U,IAAQ,EAEnB0U,EAAW1U,GAAO,QAKnB0U,ECRiBC,CAAWV,GAC3B7T,EAAS,CACP5B,KAAM,+BACNC,QAASwV,IAEX7T,EAAS,CACP5B,KAAM,cACNC,QAASR,IAEXmC,EAAS,CACP5B,KAAM,oBACNC,QAASP,IAEXkC,EAAS,CACP5B,KAAM,qBACNC,QAASN,IAEXiC,EAAS,CACP5B,KAAM,iBACNC,QAASrC,IAEXgE,EAAS,CACP5B,KAAM,uBAKb,IAlD0C,IAsD3CR,EAMEM,EANFN,SACAC,EAKEK,EALFL,QACA7B,EAIEkC,EAJFlC,QACA8B,EAGEI,EAHFJ,WACAC,EAEEG,EAFFH,YACAC,EACEE,EADFF,YAkBF,OAhBAyI,qBAAU,WACJzI,IACFjB,QAAQiO,IAAI,iBACZ5N,EAAGI,aAAagX,IAAI,CAClBtO,KAAM4M,KAAK2B,UAAU,CACnB7W,WACAC,UACAC,aACAC,cACA/B,YAEFW,GAAI,OAGP,CAACiB,EAAUC,EAASC,EAAY9B,EAAS+B,EAAaC,IAGvD,kBAACP,EAAWiX,SAAZ,CAAqBnS,MAAO,CAACrE,EAAO8B,IACjC0S,K2BtHL,KACE,mBzByG+B,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAAe,EACvBC,qBAAW1U,EAASN,GADG,mBAC1CO,EAD0C,KACnC8B,EADmC,KAEzC2U,EAAiDzW,EAAjDyW,YAAatV,EAAoCnB,EAApCmB,YAAaE,EAAuBrB,EAAvBqB,mBAqClC,OAlCAkH,qBAAU,WACNrJ,EAAGoC,gBAAgBoT,IAAI,GAAGzX,MAAK,SAACwN,GAC5B,GAAIA,EAAQ,CACR,IAAMkK,EAAcC,KAAKC,MAAMpK,EAAOzC,MACtClG,EAAS,CACL5B,KAAM,gBACNC,QAAQ,eACDV,EADA,GAEAkV,EAFA,CAGH8B,aAAa,WAIrB3U,EAAS,CACL3B,QAAQ,eAAMV,EAAP,CAAoBgX,aAAa,IACxCvW,KAAM,uBAInB,IAGHqI,qBAAU,WACFkO,GACAvX,EAAGoC,gBAAgBgV,IAAI,CACnBtO,KAAM4M,KAAK2B,UAAU,CACjBpV,cACAE,uBAEJ5C,GAAI,MAGb,CAACgY,EAAatV,EAAaE,IAG1B,kBAACH,EAAmBsV,SAApB,CAA6BnS,MAAO,CAACrE,EAAO8B,IACvC0S,KyBlJT,KACE,kBAAC,GAAD,QAGJ1C,SAAS4E,eAAe,SDqHpB,kBAAmB/E,WACrBA,UAAUgF,cAAcC,MAAM3Z,MAAK,SAAA4Z,GACjCA,EAAaC,kB","file":"static/js/main.d8d029c1.chunk.js","sourcesContent":["const SOCRATA_NY_OPENDATA_ENDPOINT =\n  'https://api.us.socrata.com/api/catalog/v1?domains=data.cityofnewyork.us&search_context=data.cityofnewyork.us';\n\nasync function getMaifestPage(pageNo, limit = 100) {\n  return fetch(\n    `${SOCRATA_NY_OPENDATA_ENDPOINT}&offset=${pageNo * limit}&limit=${limit}`,\n  ).then((r) => r.json());\n}\n\nfunction matachableColumnsForDataset(dataset) {\n  return new Set([\n    ...dataset.resource.columns_name.map((s) => s.toLocaleLowerCase()),\n    ...dataset.resource.columns_field_name.map((s) => s.toLocaleLowerCase()),\n  ]);\n}\n\nfunction hasJoinableMatch(columns, candidate) {\n  const candidateCols = matachableColumnsForDataset(candidate);\n  const intersection = new Set(\n    [...columns].filter(\n      (x) => candidateCols.has(x), // && ALLOWED_JOIN_COLUMNS.includes(x),\n    ),\n  );\n  return Array.from(intersection);\n}\n\nexport function findJoinable(dataset, datasets) {\n  const cols = matachableColumnsForDataset(dataset);\n  const matches = datasets\n    .map((candidate) => ({\n      dataset: candidate,\n      joinableColumns: hasJoinableMatch(cols, candidate),\n    }))\n    .filter(\n      (match) =>\n        match.joinableColumns.length > 0 &&\n        match.dataset.resource.id !== dataset.resource.id,\n    );\n  return matches;\n}\n\n/**\n * Get the full manifest from Socrata. This should be cached locally and updated in a smart way.\n *\n * @return {Promise(Array)} a promise that resolves to an array of the datasets\n */\nexport async function getManifest() {\n  const firstPage = await getMaifestPage(0, 1);\n  const totalEntries = firstPage.resultSetSize;\n  const pages = Math.ceil(totalEntries / 100);\n  return Promise.all(\n    [...Array(pages)].map((_, i) =>\n      getMaifestPage(i).then((resp) => resp.results),\n    ),\n  ).then((list) => {\n    return list.reduce(\n      (datasetPage, allDatasets) => [...allDatasets, ...datasetPage],\n      [],\n    );\n  });\n}\n\n/**\n * Extract from the datasets array, a unique set of columns.\n * @return {Array<string>} an array of unique categories\n */\nexport function getColumns(datasets) {\n  const columnList = {};\n\n  datasets.forEach((dataset) => {\n    if (dataset.resource.columns_name) {\n      dataset.resource.columns_name.forEach((col) => {\n        if (col in columnList) {\n          columnList[col] += 1;\n        } else {\n          columnList[col] = 1;\n        }\n      });\n    }\n  });\n  return columnList;\n}\n\n/**\n * Extract from the datasets array, a unique set of categories.\n * @return {Array<string>} an array of unique categories\n */\nexport function getCategories(datasets) {\n  const categories = datasets.reduce(\n    (cats, dataset) => [\n      ...cats,\n      ...(dataset.classification.categories\n        ? dataset.classification.categories\n        : []),\n    ],\n    [],\n  );\n\n  const counts = categories.reduce(\n    (totals, cat) =>\n      cat in totals\n        ? { ...totals, [cat]: totals[cat] + 1 }\n        : { ...totals, [cat]: 1 },\n    {},\n  );\n  return counts;\n}\n\n/**\n * Extract from the datasets array, a unique set of categories.\n * @return {Array<string>} an array of unique categories\n */\nexport function getDepartments(datasets) {\n  const departments = datasets\n    .map((dataset) =>\n      dataset.classification.domain_metadata.find(\n        (md) => md.key === 'Dataset-Information_Agency',\n      ),\n    )\n    .filter((d) => d)\n    .map((d) => d.value);\n  const counts = departments.reduce(\n    (totals, department) =>\n      department in totals\n        ? { ...totals, [department]: totals[department] + 1 }\n        : { ...totals, [department]: 1 },\n    {},\n  );\n  return counts;\n}\n/**\n * Extract from the datasets array, a unique set of tags.\n * @return {Array<string>} an array of unique tags\n */\nexport function getTagList(datasets) {\n  const tagList = {};\n\n  datasets.forEach((dataset) => {\n    if (dataset.classification.domain_tags) {\n      dataset.classification.domain_tags.forEach((tag) => {\n        if (tag in tagList) {\n          tagList[tag] += 1;\n        } else {\n          tagList[tag] = 1;\n        }\n      });\n    }\n  });\n  return tagList;\n}\n\nexport function getUniqueEntriesCount(dataset, column) {\n  return fetch(\n    `https://data.cityofnewyork.us/resource/${\n      dataset.resource.id\n    }.json?$select=distinct|> select count(*) ${column.replace(/ /g, '_')}`,\n  ).then((r) => r.json());\n}\nexport function getUniqueEntries(dataset, column) {\n  return fetch(\n    `https://data.cityofnewyork.us/resource/${\n      dataset.resource.id\n    }.json?$select=distinct ${column.replace(/ /g, '_')}`,\n  )\n    .then((r) => r.json())\n    .then((r) => {\n      if (r.errorCode || r.error) {\n        console.warn(\n          'Failed to load unique entries for dataset ',\n          dataset,\n          ' column ',\n          column,\n        );\n        return [];\n      }\n      return r.map((entry) => Object.values(entry)[0]);\n    });\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nimport Dexie from 'dexie';\nimport {\n  getManifest,\n  getCategories,\n  getColumns,\n  getTagList,\n  getDepartments,\n} from '../utils/socrata';\n\nconst db = new Dexie('SocrataCache');\ndb.version(1).stores({\n  SocrataCache: 'id',\n});\n\nexport const AppContext = createContext();\n\nconst initalState = {\n  datasets: [],\n  tagList: [],\n  categories: [],\n  departments: [],\n  columns: [],\n  stateLoaded: false,\n};\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'UPDATE_OPEN_DATASET_MANIFEST':\n      return { ...state, datasets: payload };\n    case 'UPDATE_TAGS':\n      return { ...state, tagList: payload };\n    case 'UPDATE_CATEGORIES':\n      return { ...state, categories: payload };\n    case 'UPDATE_COLUMNS':\n      return { ...state, columns: payload };\n    case 'UPDATE_DEPARTMENTS':\n      return { ...state, departments: payload };\n    case 'HYDRATE_STATE':\n      return { ...state, ...payload };\n    case 'SET_LOADED':\n      return { ...state, stateLoaded: true };\n    default:\n      return state;\n  }\n};\n\nexport const StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n\n  // Try to get the state locally from indexed db... if we can't find it there, request it from the\n  // socrata API\n\n  useEffect(() => {\n    db.SocrataCache.get(1).then((result) => {\n      if (result) {\n        const cachedState = JSON.parse(result.data);\n        dispatch({\n          type: 'HYDRATE_STATE',\n          payload: { ...initalState, ...cachedState, cache_loaded: true },\n        });\n        // Set state as loaded to indicate that data is ready to use\n        dispatch({\n          type: 'SET_LOADED',\n        });\n      } else {\n        getManifest().then((manifest) => {\n          const tagList = getTagList(manifest);\n          const categories = getCategories(manifest);\n          const departments = getDepartments(manifest);\n          const columns = getColumns(manifest);\n          dispatch({\n            type: 'UPDATE_OPEN_DATASET_MANIFEST',\n            payload: manifest,\n          });\n          dispatch({\n            type: 'UPDATE_TAGS',\n            payload: tagList,\n          });\n          dispatch({\n            type: 'UPDATE_CATEGORIES',\n            payload: categories,\n          });\n          dispatch({\n            type: 'UPDATE_DEPARTMENTS',\n            payload: departments,\n          });\n          dispatch({\n            type: 'UPDATE_COLUMNS',\n            payload: columns,\n          });\n          dispatch({\n            type: 'SET_LOADED',\n          });\n        });\n      }\n    });\n  }, []);\n\n  // If our datasets change, update the cahced version\n  const {\n    datasets,\n    tagList,\n    columns,\n    categories,\n    departments,\n    stateLoaded,\n  } = state;\n  useEffect(() => {\n    if (stateLoaded) {\n      console.log('writing cache');\n      db.SocrataCache.put({\n        data: JSON.stringify({\n          datasets,\n          tagList,\n          categories,\n          departments,\n          columns,\n        }),\n        id: 1,\n      });\n    }\n  }, [datasets, tagList, categories, columns, departments, stateLoaded]);\n\n  return (\n    <AppContext.Provider value={[state, dispatch]}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useStateValue = () => useContext(AppContext);\n","import { useMemo, useState, useEffect } from 'react';\nimport useFuse from 'react-use-fuse';\nimport { useStateValue } from '../contexts/OpenDataContext';\nimport { findJoinable, getUniqueEntries } from '../utils/socrata';\n\nexport function useStateLoaded() {\n  const [{ stateLoaded }] = useStateValue();\n  return stateLoaded;\n}\n\nexport function useTags() {\n  const [{ tagList }] = useStateValue();\n  return tagList;\n}\n\nexport function useCategories() {\n  const [{ categories }] = useStateValue();\n  return categories;\n}\n\nexport function useDepartments() {\n  const [{ departments }] = useStateValue();\n  return departments;\n}\n\nexport function useColumns() {\n  const [{ columns }] = useStateValue();\n  return columns;\n}\n\nexport function useJoinableDatasets(dataset) {\n  const [{ datasets }] = useStateValue();\n  return useMemo(() => (dataset ? findJoinable(dataset, datasets) : []), [\n    dataset,\n    datasets,\n  ]);\n}\n\nexport function useGetSimilarDatasets(datasetID) {\n  const [similarityMetrics, setSimilarityMetrics] = useState({});\n  const [{ datasets }] = useStateValue();\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/similarity_metrics.json`)\n      .then((r) => r.json())\n      .then((r) => setSimilarityMetrics(r));\n  }, []);\n\n  console.log('datasets ', datasets, similarityMetrics);\n\n  const similarDatasets = useMemo(\n    () =>\n      similarityMetrics[datasetID] && datasets && datasets.length > 0\n        ? similarityMetrics[datasetID].map((match) => ({\n            similarity: match.similarity,\n            dataset: datasets.find((d) => d.resource.id === match.dataset),\n          }))\n        : [],\n\n    [similarityMetrics, datasetID, datasets],\n  );\n  return similarDatasets;\n}\n\nexport function useDataset(datasetID) {\n  const [{ datasets }] = useStateValue();\n  return datasets.find((d) => d.resource.id === datasetID);\n}\n\nexport function useGetDatasetsByIds(ids) {\n  const [{ datasets }] = useStateValue();\n  return useMemo(() => datasets.filter((d) => ids.includes(d.resource.id)), [\n    datasets,\n    ids,\n  ]);\n}\n\nexport function useDatasets({ tags, term, categories, columns, departments }) {\n  const [{ datasets }] = useStateValue();\n\n  const { result: searchedDatasets, search } = useFuse({\n    data: datasets,\n    options: {\n      shouldSort: true,\n      findAllMatches: true,\n      includeMatches: true,\n      keys: ['resource.name', 'resource.description'],\n      caseSensitive: false,\n    },\n  });\n\n  useEffect(() => {\n    search(term);\n  }, [search, term]);\n\n  return useMemo(() => {\n    if (searchedDatasets) {\n      let resultDatasets =\n        searchedDatasets[0] && searchedDatasets[0].item\n          ? searchedDatasets.map((match) => match.item)\n          : [...searchedDatasets];\n\n      const matches =\n        searchedDatasets && searchedDatasets[0] && searchedDatasets[0].item\n          ? searchedDatasets.map((d) => ({\n              id: d.item.resource.id,\n              matches: d.matches,\n            }))\n          : [];\n\n      if (tags && tags.length > 0) {\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.itemclassification.domain_tags.filter((tag) =>\n              tags.includes(tag),\n            ).length > 0,\n        );\n      }\n\n      if (categories && categories.length > 0) {\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.classification.categories.filter((cat) =>\n              categories.includes(cat),\n            ).length > 0,\n        );\n      }\n\n      if (columns && columns.length > 0) {\n        console.log('filtering with columns ', columns);\n        resultDatasets = resultDatasets.filter(\n          (dataset) =>\n            dataset.resource.columns_name &&\n            dataset.resource.columns_name.filter((col) => columns.includes(col))\n              .length > 0,\n        );\n      }\n\n      if (departments && departments.length > 0) {\n        resultDatasets = resultDatasets.filter((dataset) =>\n          departments.includes(\n            dataset.classification.domain_metadata.find(\n              (d) => d.key === 'Dataset-Information_Agency',\n            )?.value,\n          ),\n        );\n      }\n\n      return {\n        datasets: resultDatasets,\n        matches: matches.filter((match) =>\n          resultDatasets.find((r) => r.resource.id === match.id),\n        ),\n      };\n    }\n    return datasets;\n  }, [searchedDatasets, tags, categories, columns, departments, datasets]);\n}\n\nexport function useSortDatsetsBy(datasets, type, asc = false) {\n  // console.log('here ', type, asc);\n  return useMemo(() => {\n    // console.log('updating sort ');\n    const result = datasets.sort((a, b) => {\n      let valA = null;\n      let valB = null;\n      switch (type) {\n        case 'Name':\n          valA = a.resource.name;\n          valB = b.resource.name;\n          break;\n        case 'Created At':\n          valA = a.resource.createdAt;\n          valB = b.resource.createdAt;\n          break;\n        case 'Updated At':\n          valA = a.resource.updatedAt;\n          valB = b.resource.updatedAt;\n          break;\n        case 'Downloads':\n          valA = a.resource.download_count;\n          valB = b.resource.download_count;\n          break;\n        case 'Views':\n          valA = a.resource.page_views.page_views_total;\n          valB = b.resource.page_views.page_views_total;\n          break;\n        default:\n      }\n\n      return (valA < valB ? 1 : -1) * (asc ? 1 : -1);\n    });\n    return result;\n  }, [datasets, type, asc]);\n}\n\nexport function useUniqueColumnEntries(dataset, column) {\n  const [uniqueEntries, setUniqueEntries] = useState(null);\n  useEffect(() => {\n    getUniqueEntries(dataset, column).then((res) => {\n      setUniqueEntries({\n        dataset: dataset.resource.id,\n        column,\n        distinct: res,\n      });\n    });\n  }, [dataset, column]);\n  return uniqueEntries;\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport Dexie from 'dexie';\nimport uuidv4 from 'uuid/v4';\n\nexport const CollectionsContext = createContext();\n\n// A collection has the form\n// datasets : array of dataset ids\n// name : the name of the collection\n// id : a random id for the collection\n// description : short 255 character description of the collection\n//\nconst initalState = {\n    collections: [{ id: 'pending', datasets: [], name: 'pending' }],\n    activeCollectionID: 'pending',\n};\n\nconst db = new Dexie('CollectionCache');\ndb.version(1).stores({\n    CollectionCache: 'id',\n});\n\nconst reducer = (state, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case 'CREATE_COLLECTION_FROM_PENDING':\n            return {\n                ...state,\n                collections: [\n                    ...state.collections,\n                    {\n                        ...state.collections.find((c) => c.id === 'pending'),\n                        id: uuidv4(),\n                        name: payload.name,\n                    },\n                ].map((c) =>\n                    c.id === 'pending'\n                        ? { id: 'pending', datasets: [], name: 'pending' }\n                        : c,\n                ),\n            };\n        case 'ADD_TO_COLLECTION':\n            return {\n                ...state,\n                collections: state.collections.map((col) =>\n                    col.id === payload.id\n                        ? {\n                              ...col,\n                              datasets: [...col.datasets, payload.datasetID],\n                          }\n                        : col,\n                ),\n            };\n        case 'REMOVE_FROM_COLLECTION':\n            return {\n                ...state,\n                collections: state.collections.map((col) =>\n                    col.id === payload.id\n                        ? {\n                              ...col,\n                              datasets: col.datasets.filter(\n                                  (d) => d !== payload.datasetID,\n                              ),\n                          }\n                        : col,\n                ),\n            };\n        case 'SET_NAME':\n            return {\n                ...state,\n                collections: [\n                    ...state,\n                    state.collections.map((col) =>\n                        col.id === payload.id\n                            ? { ...col, name: payload.name }\n                            : col,\n                    ),\n                ],\n            };\n        case 'CLEAR_COLLECTION':\n            return {\n                ...state,\n                collections: [\n                    ...state,\n                    state.collections.map((col) =>\n                        col.id === payload.id ? { ...col, datasets: [] } : col,\n                    ),\n                ],\n            };\n\n        case 'DELETE_COLLECTION':\n            return {\n                ...state,\n                collections: state.collections.filter(\n                    (col) => col.id !== payload.id,\n                ),\n            };\n\n        case 'CREATE_COLLECTION':\n            return {\n                ...state,\n                collections: [\n                    ...state.collections,\n                    { ...payload, id: uuidv4() },\n                ],\n            };\n        case 'HYDRATE_STATE':\n            return {\n                ...state,\n                ...payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const CollectionsProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initalState);\n    const { cacheLoaded, collections, activeCollectionID } = state;\n\n    // Restore state\n    useEffect(() => {\n        db.CollectionCache.get(1).then((result) => {\n            if (result) {\n                const cachedState = JSON.parse(result.data);\n                dispatch({\n                    type: 'HYDRATE_STATE',\n                    payload: {\n                        ...initalState,\n                        ...cachedState,\n                        cacheLoaded: true,\n                    },\n                });\n            } else {\n                dispatch({\n                    payload: { ...initalState, cacheLoaded: true },\n                    type: 'HYDRATE_STATE',\n                });\n            }\n        });\n    }, []);\n\n    // Cache state\n    useEffect(() => {\n        if (cacheLoaded) {\n            db.CollectionCache.put({\n                data: JSON.stringify({\n                    collections,\n                    activeCollectionID,\n                }),\n                id: 1,\n            });\n        }\n    }, [cacheLoaded, collections, activeCollectionID]);\n\n    return (\n        <CollectionsContext.Provider value={[state, dispatch]}>\n            {children}\n        </CollectionsContext.Provider>\n    );\n};\n\nexport const useCollectionsValue = () => useContext(CollectionsContext);\n","import { useCollectionsValue } from '../contexts/CollectionsContext';\n\nexport function useCurrentCollection() {\n    const [state, dispatch] = useCollectionsValue();\n    const { activeCollectionID, pendingCollection } = state;\n\n    const collection = activeCollectionID\n        ? state.collections.find((c) => c.id === state.activeCollectionID)\n        : pendingCollection;\n\n    const addToCollection = (collectionID, datasetID) => {\n        dispatch({\n            type: 'ADD_TO_COLLECTION',\n            payload: { id: collectionID, datasetID },\n        });\n    };\n\n    const createCollectionFromPending = (name) => {\n        dispatch({\n            type: 'CREATE_COLLECTION_FROM_PENDING',\n            payload: { name },\n        });\n    };\n\n    const removeFromCollection = (collectionID, datasetID) =>\n        dispatch({\n            type: 'REMOVE_FROM_COLLECTION',\n            payload: { id: collectionID, datasetID },\n        });\n\n    const setName = (name, collectionID) =>\n        dispatch({\n            type: 'SET_NAME',\n            payload: { id: collectionID, name },\n        });\n\n    const clearCollection = (collectionID) => {\n        dispatch({ type: 'CLEAR_COLLECTION', payload: { id: collectionID } });\n    };\n    return [\n        collection,\n        {\n            clearCollection,\n            addToCollection,\n            removeFromCollection,\n            setName,\n            createCollectionFromPending,\n        },\n    ];\n}\n\nexport function useCollections() {\n    const [state, dispatch] = useCollectionsValue();\n    return state;\n}\n","import React from 'react';\nimport DOMPurify from 'dompurify';\n\n/* Simple component to sanitize HTML and display it.\n *  Need this for making sure we can display the\n *  dataset descriptions properly\n */\n\nexport default function RawHTML({ html, className }) {\n  const cleanedHTML = DOMPurify.sanitize(html);\n  return (\n    <div\n      className={className}\n      dangerouslySetInnerHTML={{ __html: cleanedHTML }}\n    />\n  );\n}\n","import React from 'react';\nimport RawHTML from '../components/RawHTML/RawHTML';\n\nexport function formatDate(date) {\n    const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    };\n    return new Date(date).toLocaleDateString('en-US', options);\n}\n\nexport function hilightMatches(text, query) {\n    if (query) {\n        const regex = new RegExp(`(${query})`, 'ig');\n        return (\n            <RawHTML\n                html={text.replace(\n                    regex,\n                    (match) => `<span class=\"hilight\">${match}</span>`,\n                )}\n            />\n        );\n    }\n    return text;\n}\n\nexport function constructCollectionLink(collection) {\n    return `/collection/${collection.name}/${collection.datasets.join(',')}`;\n}\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { useGetDatasetsByIds } from '../../hooks/datasets';\nimport { useCollections, useCurrentCollection } from '../../hooks/collections';\nimport { constructCollectionLink } from '../../utils/formatters';\n\nimport './CollectionTab.scss';\n\nexport default function CollectionTab({ visible }) {\n    const collections = useCollections();\n    const [\n        collection,\n        { removeFromCollection, createCollectionFromPending },\n    ] = useCurrentCollection();\n    const currentCollectionDatasets = useGetDatasetsByIds(collection.datasets);\n    const [newCollectionName, setNewCollectionName] = useState('');\n    const [tab, setTab] = useState('new');\n    const [showCreate, setShowCreate] = useState(false);\n\n    const createCollection = () => {\n        createCollectionFromPending(newCollectionName);\n        setShowCreate(false);\n    };\n\n    const getAgency = (dataset) => {\n        return dataset?.classification.domain_metadata?.find(\n            ({ key }) => key === 'Dataset-Information_Agency',\n        )?.value;\n    };\n\n    if (!visible) return '';\n\n    return (\n        <div className=\"collection-tab\">\n            {showCreate ? (\n                <div className=\"collections-tab-create\">\n                    <h2>Create Collection</h2>\n                    <div className=\"collections-tab-create-options\">\n                        <p>Name your new collection</p>\n                        <input\n                            placeholder=\"name\"\n                            type=\"text\"\n                            value={newCollectionName}\n                            onChange={(e) =>\n                                setNewCollectionName(e.target.value)\n                            }\n                        />\n                        <ul>\n                            {currentCollectionDatasets.map((c) => (\n                                <li className=\"collection-tab-dataset\">\n                                    <div>\n                                        <p className=\"name\">\n                                            {c.resource.name}\n                                        </p>\n                                        <p className=\"agency\">\n                                            {' '}\n                                            {getAgency(c)}\n                                        </p>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div className=\"collection-tab-buttons\">\n                        <button type=\"submit\" onClick={createCollection}>\n                            Create\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={() => setShowCreate(false)}\n                        >\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"collections-tab-view\">\n                    <h2>Collections</h2>\n                    <div className=\"collection-tab-tabs\">\n                        <button\n                            type=\"button\"\n                            onClick={() => setTab('new')}\n                            className={`header-button' ${\n                                tab === 'new' ? 'selected' : ''\n                            }`}\n                        >\n                            Create new\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={() => setTab('existing')}\n                            className={`header-button' ${\n                                tab === 'existing' ? 'selected' : ''\n                            }`}\n                        >\n                            Existing Collections\n                        </button>\n                    </div>\n                    {tab === 'new' && (\n                        <>\n                            <div className=\"collection-tab-current-collection\">\n                                {currentCollectionDatasets.length === 0 ? (\n                                    <div className=\"datasets-placeholder\">\n                                        <h3>No datasets selected</h3>\n                                        <p>\n                                            Select `&quot;`Add to\n                                            Collection`&quot;` to begin creating\n                                            local collections.\n                                        </p>\n                                    </div>\n                                ) : (\n                                    <ul>\n                                        {currentCollectionDatasets.map((d) => (\n                                            <li\n                                                key={d.resource.name}\n                                                className=\"collection-tab-dataset\"\n                                            >\n                                                <div>\n                                                    <p className=\"name\">\n                                                        {d.resource.name}\n                                                    </p>\n                                                    <p className=\"agency\">\n                                                        {getAgency(d)}\n                                                    </p>\n                                                </div>\n                                                <button\n                                                    type=\"button\"\n                                                    onClick={() =>\n                                                        removeFromCollection(\n                                                            collection.id,\n                                                            d.resource.id,\n                                                        )\n                                                    }\n                                                >\n                                                    Remove\n                                                </button>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            <div className=\"collection-tab-buttons\">\n                                <button\n                                    type=\"submit\"\n                                    onClick={() => setShowCreate(true)}\n                                >\n                                    Create Collection\n                                </button>\n                            </div>\n                        </>\n                    )}\n                    {tab === 'existing' && (\n                        <div className=\"collections-tab-existing-collections\">\n                            {collections.collections.length === 1 ? (\n                                <div className=\"datasets-placeholder\">\n                                    <h3>No collections yet</h3>\n                                </div>\n                            ) : (\n                                <ul className=\"existing-collections-list\">\n                                    {collections.collections\n                                        .filter((c) => c.id !== 'pending')\n                                        .map((c) => (\n                                            <li className=\"existing-collection\">\n                                                <div className=\"exisiting-colections-deets\">\n                                                    <p className=\"name\">\n                                                        {c.name}\n                                                    </p>\n                                                    <p className=\"dataset-count\">\n                                                        {' '}\n                                                        {c.datasets.length}{' '}\n                                                        datasets{' '}\n                                                    </p>\n                                                </div>\n                                                <Link\n                                                    to={constructCollectionLink(\n                                                        c,\n                                                    )}\n                                                >\n                                                    <FontAwesomeIcon\n                                                        size=\"2x\"\n                                                        icon={faEye}\n                                                    />\n                                                </Link>\n                                            </li>\n                                        ))}\n                                </ul>\n                            )}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './SideNav.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faQuestionCircle,\n    faEye,\n    faColumns,\n} from '@fortawesome/free-solid-svg-icons';\nimport CollectionTab from '../CollectionTab/CollectionTab';\nimport { useCurrentCollection } from '../../hooks/collections';\n\n\nexport default function SideNav() {\n    const [showCollectionTab, setShowCollectionTab] = useState(false);\n    const [collection] = useCurrentCollection();\n    return (\n        <nav className=\"side-nav\">\n            <Link alt=\"Data Clinic\" className=\"title\" to=\"/\">\n                <img\n                    alt=\"Data Clinic logo\"\n                    src={`${process.env.PUBLIC_URL}/DataClinicLogo.png`}\n                />\n            </Link>\n\n            <Link alt=\"Explore\" className=\"explore\" to=\"/\">\n                <FontAwesomeIcon size=\"2x\" icon={faEye} />\n                <h1>Explore</h1>\n            </Link>\n            <div style={{ position: 'relative' }}>\n                {collection.datasets.length > 0 && (\n                    <div className=\"collection-counter\">\n                        {collection.datasets.length}\n                    </div>\n                )}\n                <button\n                    onClick={() => setShowCollectionTab(!showCollectionTab)}\n                    className=\"header-button\"\n                >\n                    <FontAwesomeIcon size=\"2x\" icon={faColumns} />\n                    <h1>Collections</h1>\n                </button>\n                <CollectionTab visible={showCollectionTab} />\n            </div>\n            <Link alt=\"about\" className=\"about\">\n                <FontAwesomeIcon size=\"2x\" icon={faQuestionCircle} />\n                <h1>About Data Clinic</h1>\n            </Link>\n        </nav>\n    );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default ({ permalink }) => (\n  <a\n    className=\"external-link\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    href={permalink}\n  >\n    <button type=\"button\">\n      View on Open Data&nbsp;\n      <FontAwesomeIcon icon={faExternalLinkAlt} />\n    </button>\n  </a>\n);\n","import React from 'react';\nimport './Dataset.scss';\nimport { Link } from 'react-router-dom';\nimport { hilightMatches, formatDate } from '../../utils/formatters';\n\n// import RawHTML from '../RawHTML/RawHTML';\nimport ViewOnOpenPortal from '../ViewOnOpenPortal/ViewOnOpenPortal';\n\nexport default function Dataset({\n    dataset,\n    onAddToCollection,\n    onRemoveFromCollection,\n    inCollection,\n    viewInOpenPortal = false,\n    similarity,\n    query,\n}) {\n    const formattedName = hilightMatches(dataset.resource.name, query);\n    const formattedDescription = hilightMatches(\n        dataset.resource.description,\n        query,\n    );\n    return (\n        <div className=\"dataset\" key={dataset.resource.id}>\n            <div className=\"dataset-title\">\n                <Link className=\"title\" to={`/dataset/${dataset.resource.id}`}>\n                    <h2>{formattedName}</h2>\n                </Link>\n                <p>{dataset.resource.attribution}</p>\n            </div>\n\n            {similarity && (\n                <p>Similarity: {(similarity * 100).toPrecision(2)}%</p>\n            )}\n            {onAddToCollection && (\n                <button\n                    type=\"button\"\n                    onClick={() =>\n                        inCollection\n                            ? onRemoveFromCollection(dataset.resource.id)\n                            : onAddToCollection(dataset.resource.id)\n                    }\n                >\n                    {inCollection\n                        ? 'Remove from collection'\n                        : 'Add to collection'}\n                </button>\n            )}\n            {viewInOpenPortal && (\n                <ViewOnOpenPortal permalink={dataset.permalink} />\n            )}\n\n            <div className=\"dataset-last-update\">\n                <p className=\"header\">Last Updated</p>\n                <p>{formatDate(dataset.resource.updatedAt)}</p>\n            </div>\n            <div className=\"dataset-description\">{formattedDescription}</div>\n            <div className=\"dataset-meta\">\n                <div className=\"update-frequency\">\n                    <span>Update frequency:</span>\n                    weekly\n                </div>\n                <div className=\"dataset-tags\">\n                    <span>Tags:</span>\n                    {dataset.classification.domain_tags.join(', ')}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './SortMenu.scss';\n\nexport default function SortMenu({\n  options,\n  selected,\n  direction,\n  onSelected,\n  onDirection,\n}) {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div className={`sort-menu ${expanded ? 'expanded' : ''}`}>\n      <div className=\"wrapper\">\n        <span>Sort By:</span>\n        <ul>\n          <li onClick={() => setExpanded(!expanded)}>{selected}</li>\n          {options\n            .filter((o) => o !== selected)\n            .map((option) => (\n              <li\n                onClick={() => {\n                  onSelected(option);\n                  setExpanded(false);\n                }}\n                key={option}\n              >\n                {option}{' '}\n              </li>\n            ))}\n        </ul>\n        <FontAwesomeIcon\n          onClick={() => onDirection(direction === 'asc' ? 'desc' : 'asc')}\n          icon={direction === 'asc' ? faSortUp : faSortDown}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './DatasetLoading.scss';\nimport '../Loading.scss';\n\nexport default () => (\n  <div className=\"dataset-loading\">\n    <div className=\"dataset-list\">\n      {[...Array(4)].map((_, i) => (\n        <div key={i} className=\"dataset\">\n          <div className=\"dataset-title animate\" />\n          <p className=\"dataset-description animate\" />\n          <div className=\"dataset-meta animate\" />\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { useState, useMemo, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\n\nexport default function usePagination(data, perPage = 20) {\n  const pages = useMemo(() => Math.ceil(data.length / perPage), [\n    data,\n    perPage,\n  ]);\n  const [currentPageNo, setCurrentPageNo] = useState(0);\n\n  useEffect(() => {\n    setCurrentPageNo(0);\n  }, [pages]);\n\n  const pageButtons = (\n    <nav>\n      <ReactPaginate\n        previousLabel=\"previous\"\n        nextLabel=\"next\"\n        breakLabel=\"...\"\n        breakClassName=\"break-me\"\n        pageCount={pages}\n        onPageChange={({ selected: page }) => {\n          setCurrentPageNo(page);\n        }}\n        containerClassName=\"pagination\"\n        subContainerClassName=\"pages pagination\"\n        activeClassName=\"active\"\n        previousClassName=\"page-item\"\n        nextClassName=\"page-item\"\n        pageClassName=\"page-item\"\n      />\n    </nav>\n  );\n\n  const content = data.slice(\n    currentPageNo * perPage,\n    (currentPageNo + 1) * perPage,\n  );\n\n  return [\n    content,\n    {\n      pageButtons,\n    },\n  ];\n}\n","import React from 'react';\nimport './FilterLoading.scss';\nimport '../Loading.scss';\n\nexport default () => (\n  <div className=\"\">\n    <div className=\"filter-loading-wrapper\">\n      {[...Array(10)].map((_, i) => (\n        <li key={i} className=\"multi-buttons\">\n          <input type=\"checkbox\" disabled className=\"checkbox\" />\n          <span className=\"animate item-name\" />\n          <span className=\"animate pill\" />\n        </li>\n      ))}\n    </div>\n  </div>\n);\n","import React, { useState, useMemo, useEffect } from 'react';\nimport useFuse from 'react-use-fuse';\nimport usePagenation from '../../hooks/pagination';\nimport { useStateLoaded } from '../../hooks/datasets';\nimport FilterLoading from '../Loading/FilterLoading/FilterLoading';\nimport './MultiSelector.scss';\n\nexport default function MultiSelector({ items, selected, onChange, title }) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const clearItems = () => {\n    onChange([]);\n  };\n\n  const loaded = useStateLoaded();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const toggleItem = (item) => {\n    const newSelection = selected.includes(item)\n      ? selected.filter((i) => i !== item)\n      : [...selected, item];\n    onChange(newSelection);\n  };\n\n  const itemNames = useMemo(() => items && Object.keys(items), [items]);\n\n  const { result: filteredItems, search } = useFuse({\n    data: itemNames.map((item) => ({\n      name: item,\n    })),\n    options: {\n      keys: ['name'],\n      shouldSort: false,\n      findAllMatches: true,\n      caseSensitive: false,\n    },\n  });\n\n  useEffect(() => search(searchTerm), [search, searchTerm]);\n\n  const sortedItems = useMemo(\n    () =>\n      filteredItems\n        ?.map((item) => item.name)\n        .sort((a, b) => (items[a] < items[b] ? 1 : -1)),\n    [filteredItems, items],\n  );\n\n  const [pagedItems, { pageButtons }] = usePagenation(sortedItems, 10);\n\n  return (\n    <div className=\"mutli-selector\">\n      <h2>\n        <button\n          className=\"header-button\"\n          type=\"button\"\n          onClick={() => setCollapsed(!collapsed)}\n        >\n          {title} <span> {collapsed ? '+' : '-'}</span>{' '}\n        </button>\n      </h2>\n\n      {!collapsed && (\n        <>\n          <div className=\"search\">\n            <input\n              disabled={!loaded}\n              placeholder=\"filter\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n          <ul className=\"multi-list\">\n            {!loaded ? (\n              <FilterLoading />\n            ) : (\n              pagedItems.map((item) => (\n                // eslint-disable-next-line\n                <li\n                  key={item}\n                  onClick={() => toggleItem(item)}\n                  className={`multi-buttons ${\n                    selected && selected.includes(item) ? 'selected' : ''\n                  }`}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selected && selected.includes(item)}\n                    className=\"checkbox\"\n                  />\n                  <span className=\"item-name\">{item}</span>\n                  <span className=\"pill\">{items[item]}</span>\n                </li>\n              ))\n            )}\n          </ul>\n          {pageButtons}\n          {selected && selected.length > 0 && (\n            <button type=\"button\" onClick={clearItems}>\n              clear\n            </button>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './HomePage.scss';\nimport { DebounceInput } from 'react-debounce-input';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport {\n    useCategories,\n    useTags,\n    useDepartments,\n    useDatasets,\n    useColumns,\n    useStateLoaded,\n    useSortDatsetsBy,\n} from '../../hooks/datasets';\nimport { useCurrentCollection } from '../../hooks/collections';\nimport Dataset from '../../components/Dataset/Dataset';\nimport SortMenu from '../../components/SortMenu/SortMenu';\nimport DatasetLoading from '../../components/Loading/DatasetLoading/DatasetLoading';\nimport usePagination from '../../hooks/pagination';\nimport MultiSelector from '../../components/MultiSelector/MultiSelector';\n\nexport default function HomePage() {\n    const categories = useCategories();\n    const tags = useTags();\n    const departments = useDepartments();\n    const columns = useColumns();\n    const loaded = useStateLoaded();\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [colpaseFilters, setCollapseFilters] = useState(true);\n    const [selectedColumns, setSelectedColumns] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n    const [selectedDepartments, setSelectedDepartments] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [sortBy, setSortBy] = useState('Name');\n    const [sortDirection, setSortDirection] = useState('asc');\n\n    const [\n        collection,\n        { addToCollection, removeFromCollection },\n    ] = useCurrentCollection();\n\n    const { datasets } = useDatasets({\n        tags: selectedTags,\n        categories: selectedCategories,\n        columns: selectedColumns,\n        term: searchTerm,\n        departments: selectedDepartments,\n    });\n\n    const sortedDatasets = useSortDatsetsBy(\n        datasets,\n        sortBy,\n        sortDirection === 'asc',\n    );\n\n    const [pagedDatasets, { pageButtons }] = usePagination(sortedDatasets, 5);\n\n    return (\n        <div className=\"home-page\">\n            <div className={`filters ${colpaseFilters ? 'collapsed' : ''}`}>\n                {!colpaseFilters ? (\n                    <>\n                        <h2 className=\"filter-header\">\n                            <button\n                                onKeyDown={() => setCollapseFilters(true)}\n                                onClick={() => setCollapseFilters(true)}\n                                className=\"header-button\"\n                                type=\"button\"\n                            >\n                                Filters <FontAwesomeIcon icon={faAngleLeft} />\n                            </button>\n                        </h2>\n                        <div className=\"categories\">\n                            <MultiSelector\n                                items={categories}\n                                onChange={setSelectedCategories}\n                                selected={selectedCategories}\n                                title=\"Categories\"\n                            />\n                        </div>\n                        <div className=\"departments\">\n                            <MultiSelector\n                                items={departments}\n                                selected={selectedDepartments}\n                                onChange={setSelectedDepartments}\n                                title=\"Departments\"\n                            />\n                        </div>\n                        <div className=\"columns\">\n                            <MultiSelector\n                                items={columns}\n                                selected={selectedColumns}\n                                onChange={setSelectedColumns}\n                                title=\"Columns\"\n                            />\n                        </div>\n                        <div className=\"tags\">\n                            <MultiSelector\n                                items={tags}\n                                selected={selectedTags}\n                                onChange={setSelectedTags}\n                                title=\"Tags\"\n                            />\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <h2>\n                            <button\n                                onKeyDown={() => setCollapseFilters(false)}\n                                onClick={() => setCollapseFilters(false)}\n                                className=\"header-button\"\n                                type=\"button\"\n                            >\n                                Filters\n                            </button>\n                        </h2>\n                    </>\n                )}\n            </div>\n            <div className=\"datasets\">\n                <div className=\"search\">\n                    <FontAwesomeIcon size=\"lg\" icon={faSearch} />\n                    <DebounceInput\n                        type=\"text\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                        value={searchTerm}\n                        debounceTimeout={300}\n                        placeholder=\"Search for dataset\"\n                    />\n                </div>\n                <div className=\"count-and-sort\">\n                    <p>\n                        <span className=\"bold\">{datasets.length}</span> datasets\n                    </p>\n\n                    <SortMenu\n                        options={[\n                            'Name',\n                            'Created At',\n                            'Updated At',\n                            'Downloads',\n                            'Views',\n                        ]}\n                        onDirection={(direction) => setSortDirection(direction)}\n                        selected={sortBy}\n                        direction={sortDirection}\n                        onSelected={(selected) => setSortBy(selected)}\n                    />\n                </div>\n\n                <ul className=\"dataset-list\">\n                    {loaded ? (\n                        pagedDatasets.map((dataset) => (\n                            <Dataset\n                                key={dataset?.resource?.id}\n                                dataset={dataset}\n                                inCollection={collection.datasets.includes(\n                                    dataset.resource.id,\n                                )}\n                                onAddToCollection={(datasetID) =>\n                                    addToCollection(collection.id, datasetID)\n                                }\n                                onRemoveFromCollection={(datasetID) =>\n                                    removeFromCollection(\n                                        collection.id,\n                                        datasetID,\n                                    )\n                                }\n                                query={searchTerm}\n                            />\n                        ))\n                    ) : (\n                        <DatasetLoading />\n                    )}\n                </ul>\n                <div>{pageButtons}</div>\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFile } from '@fortawesome/free-regular-svg-icons';\nimport { Link } from 'react-router-dom';\nimport {\n    faAngleRight,\n    faAngleDown,\n    faTable,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useUniqueColumnEntries } from '../../hooks/datasets';\nimport { useCurrentCollection } from '../../hooks/collections';\nimport './JoinColumn.scss';\n\nexport default function ColumnJoin({ rightDataset, joinCol, parentUniques }) {\n    const [collapsed, setCollapsed] = useState(true);\n    const uniqueIds = useUniqueColumnEntries(rightDataset, joinCol);\n    const jointlyUnique = useMemo(\n        () =>\n            uniqueIds && parentUniques\n                ? parentUniques.filter((e) => uniqueIds.distinct.includes(e))\n                : [],\n        [uniqueIds, parentUniques],\n    );\n    const [\n        collection,\n        { addToCollection, removeFromCollection },\n    ] = useCurrentCollection();\n\n    return (\n        <div className=\"join-column\">\n            <div className=\"join-column-row\">\n                <span\n                    onClick={() => setCollapsed(!collapsed)}\n                    onKeyDown={(e) => {\n                        if (e.keycode === 32) {\n                            setCollapsed(!collapsed);\n                        }\n                    }}\n                    className=\"join-column-name\"\n                    role=\"button\"\n                    tabIndex=\"0\"\n                >\n                    <FontAwesomeIcon\n                        icon={collapsed ? faAngleRight : faAngleDown}\n                    />\n                    <FontAwesomeIcon icon={faFile} />\n                    {rightDataset.resource.name}\n                </span>\n                <span>\n                    {jointlyUnique\n                        ? `${jointlyUnique.length} matching ids`\n                        : 'loading'}\n                </span>\n                <span>\n                    <Link to={`/dataset/${rightDataset.resource.id}`}>\n                        View dataset\n                    </Link>\n                </span>\n                <button\n                    type=\"button\"\n                    onClick={() =>\n                        collection.datasets.includes(rightDataset.resource.id)\n                            ? removeFromCollection(rightDataset.resource.id)\n                            : addToCollection(rightDataset.resource.id)\n                    }\n                >\n                    {collection.datasets.includes(rightDataset.resource.id)\n                        ? 'Remove dataset from collection'\n                        : 'Add dataset to collection'}\n                </button>\n            </div>\n            {!collapsed && uniqueIds && (\n                <div className=\"join-column-unique\">\n                    <h3>COMMON IDS</h3>\n                    <ul>\n                        {jointlyUnique.slice(0, 10).map((uid) => (\n                            <li key={uid}>\n                                <div className=\"bar\" />\n                                <FontAwesomeIcon icon={faTable} />\n                                <span>{uid}</span>\n                            </li>\n                        ))}\n                    </ul>\n                    <div>and {jointlyUnique.length - 10} more</div>\n                </div>\n            )}\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport JoinColumn from '../JoinColumn/JoinColumn';\nimport './ColumnSuggestions.scss';\nimport usePagination from '../../hooks/pagination';\nimport { getUniqueEntries } from '../../utils/socrata';\n\nexport default function ColumnSuggestions({ column, joins, dataset }) {\n  const [columnUniques, setColumnsUniques] = useState([]);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const dataTypeForCol =\n    dataset.resource.columns_datatype[\n      dataset.resource.columns_name.indexOf(column)\n    ];\n\n  const [pagedJoins, { pageButtons }] = usePagination(joins, 10);\n\n  useEffect(() => {\n    if (joins.length > 0) {\n      getUniqueEntries(dataset, column).then((res) => {\n        setColumnsUniques(res);\n      });\n    }\n  }, [column, dataset, joins]);\n\n  return (\n    <div className={`column-suggestions ${collapsed ? 'collapsed' : ''}`}>\n      <div\n        className=\"table-row\"\n        role=\"button\"\n        onKeydown={(e) => {\n          if (e.keyCode === 36) {\n            setCollapsed(!collapsed);\n          }\n        }}\n        onClick={() => setCollapsed(!collapsed)}\n        tabIndex=\"0\"\n      >\n        <span className=\"column-collapse\">\n          <FontAwesomeIcon icon={collapsed ? faAngleRight : faAngleDown} />{' '}\n          {column}\n        </span>\n        <span>{dataTypeForCol}</span>\n        <span>{joins.length} datasets also have this column</span>\n      </div>\n      {!collapsed && pagedJoins && (\n        <div className=\"columns-suggestions-matches\">\n          <h3>MATCHING DATSETS</h3>\n          {joins && (\n            <ul>\n              {pagedJoins.map((join) => (\n                <li key={join.dataset.resource.id}>\n                  <JoinColumn\n                    leftDataset={dataset}\n                    rightDataset={join.dataset}\n                    joinCol={column}\n                    parentUniques={columnUniques}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n          {pageButtons}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useCallback, useMemo } from 'react';\nimport ColumnSuggestions from '../ColumnSuggestions/ColumnSuggestions';\nimport './ColumnMatchTable.scss';\n\nexport default function ColumnMatchTable({ dataset, joinColumns }) {\n  const columns = dataset.resource.columns_name;\n\n  const suggestionsForColumn = useCallback(\n    (col, candidates) => {\n      return columns\n        ? candidates.filter((c) =>\n            c.joinableColumns.includes(col.toLowerCase()),\n          )\n        : [];\n    },\n    [columns],\n  );\n\n  const sortedColumns = useMemo(\n    () =>\n      joinColumns\n        ? columns.sort((a, b) =>\n            suggestionsForColumn(a, joinColumns).length <\n            suggestionsForColumn(b, joinColumns).length\n              ? 1\n              : -1,\n          )\n        : [],\n    [columns, joinColumns, suggestionsForColumn],\n  );\n\n  return (\n    <div className=\"column-match-table\">\n      <div className=\"table-header\">\n        <ul className=\"table-row\">\n          <li>Column name</li>\n          <li>Column type</li>\n          <li>No potential joins</li>\n        </ul>\n      </div>\n      {sortedColumns.map((column) => (\n        <ColumnSuggestions\n          dataset={dataset}\n          column={column}\n          joins={suggestionsForColumn(column, joinColumns)}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Breadcrumb.scss';\n\nconst Breadcrumb = ({ currentPage }) => (\n  <div className=\"Breadcrumb\">\n    <Link to=\"/\">Home</Link>\n    <span> / {currentPage}</span>\n  </div>\n);\n\nexport default Breadcrumb;\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport RawHTML from '../../components/RawHTML/RawHTML';\nimport ColumnMatchTable from '../../components/ColumnMatchTable/ColumnMatchTable';\nimport Dataset from '../../components/Dataset/Dataset';\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\nimport { useCurrentCollection } from '../../hooks/collections';\nimport {\n    useDataset,\n    useJoinableDatasets,\n    useGetSimilarDatasets,\n} from '../../hooks/datasets';\nimport './DatasetPage.scss';\nimport ViewOnOpenPortal from '../../components/ViewOnOpenPortal/ViewOnOpenPortal';\n\nconst formatDate = (date) => moment(date).format('MMMM DD, YYYY');\n\nexport default function DatasetPage({ match }) {\n    const { datasetID } = match.params;\n    const dataset = useDataset(datasetID);\n    const joins = useJoinableDatasets(dataset);\n    const [activeTab, setActiveTab] = useState('joins');\n    const resource = dataset?.resource;\n    const pageViews = resource?.page_views;\n    const classification = dataset?.classification;\n    const domainMetadata = classification?.domain_metadata;\n    const similarDatasets = useGetSimilarDatasets(datasetID);\n    const mostSimilarDatasets = similarDatasets\n        .filter((suggestion) => suggestion.dataset.resource.id !== datasetID)\n        .slice(0, 10);\n\n    const [\n        collection,\n        { addToCollection, removeFromCollection },\n    ] = useCurrentCollection();\n\n    const updatedAutomation = domainMetadata?.find(\n        ({ key, value }) => key === 'Update_Automation' && value === 'No',\n    )?.value;\n\n    const updateFrequency = domainMetadata?.find(\n        ({ key }) => key === 'Update_Update-Frequency',\n    )?.value;\n\n    const informationAgency = domainMetadata?.find(\n        ({ key }) => key === 'Dataset-Information_Agency',\n    )?.value;\n\n    return dataset ? (\n        <div className=\"dataset-page\">\n            <div className=\"dataset-details\">\n                <section>\n                    <Breadcrumb currentPage={resource.name} />\n                </section>\n                <section>\n                    <h2>{resource.name}</h2>\n                    <p>{informationAgency}</p>\n                    <RawHTML html={resource.description} />\n                    <button\n                        type=\"button\"\n                        className=\"collection-button\"\n                        onClick={() =>\n                            collection.datasets.includes(datasetID)\n                                ? removeFromCollection(collection.id, datasetID)\n                                : addToCollection(collection.id, datasetID)\n                        }\n                    >\n                        {collection.datasets.includes(datasetID)\n                            ? 'Remove From Collection'\n                            : 'Add to Collection'}{' '}\n                    </button>\n                </section>\n                <section className=\"external-link\">\n                    <p>Powered by</p>\n                    <img\n                        alt=\"NYC Open Data\"\n                        src=\"https://opendata.cityofnewyork.us/wp-content/themes/opendata-wp/assets/img/nyc-open-data-logo.svg\"\n                    />\n                    <ViewOnOpenPortal permalink={dataset.permalink} />\n                </section>\n                <section className=\"metadata\">\n                    <h2>Metadata</h2>\n                    <h3>Update Automation</h3>\n                    <p>{updatedAutomation}</p>\n                    <h3>Update Frequency</h3>\n                    <p>{updateFrequency}</p>\n                    <h3>Dataset Owner</h3>\n                    <p>{dataset?.owner.display_name}</p>\n                    {informationAgency && (\n                        <>\n                            <h3>Agency</h3>\n                            <p>{informationAgency}</p>\n                        </>\n                    )}\n                    {classification?.domain_category && (\n                        <>\n                            <h3>Category</h3>\n                            <p>{classification.domain_category}</p>\n                        </>\n                    )}\n                    <h3>Updated</h3>\n                    <p>{formatDate(resource?.updatedAt)}</p>\n                    <h3>Metadata Updated at</h3>\n                    <p>{formatDate(resource?.metadata_updated_at)}</p>\n                    <h3>Page Views</h3>\n                    <p>{pageViews?.page_views_total}</p>\n                </section>\n            </div>\n            <div className=\"dataset-recomendataions\">\n                <h2>Other datasets to consider</h2>\n                <div className=\"tabs\">\n                    <button\n                        type=\"button\"\n                        className={activeTab === 'joins' ? 'active' : ''}\n                        onClick={() => setActiveTab('joins')}\n                    >\n                        Potential Join Columns\n                    </button>\n                    <button\n                        type=\"button\"\n                        className={activeTab === 'theme' ? 'active' : ''}\n                        onClick={() => setActiveTab('theme')}\n                    >\n                        Thematically Similar\n                    </button>\n                </div>\n                {activeTab === 'joins' && (\n                    <>\n                        <p>\n                            Find datasets that share a column with the current\n                            dataset. These columns might be interesting datasets\n                            to join with the current dataset to add additional\n                            details or bring in context\n                        </p>\n                        <ColumnMatchTable\n                            dataset={dataset}\n                            joinColumns={joins}\n                        />\n                    </>\n                )}\n                {activeTab === 'theme' && (\n                    <>\n                        <p>\n                            Dataset that are thematically similar based on name\n                            and description\n                        </p>\n                        {mostSimilarDatasets.map((d) => (\n                            <Dataset\n                                onAddToCollection={addToCollection}\n                                onRemoveFromCollection={removeFromCollection}\n                                dataset={d.dataset}\n                                similarity={d.similarity}\n                                inCollection={collection.datasets.includes(\n                                    d.dataset.resource.id,\n                                )}\n                            />\n                        ))}\n                    </>\n                )}\n            </div>\n        </div>\n    ) : (\n        <h1>Loading...</h1>\n    );\n}\n","import { useState } from 'react';\n\nconst copyToClipboard = async (text) => {\n  if (navigator.clipboard) {\n    try {\n      await navigator.clipboard.writeText(text);\n      return true;\n    } catch (e) {\n      // Suppress error and try fallback method\n    }\n  }\n\n  if (\n    document.queryCommandSupported &&\n    document.queryCommandSupported('copy')\n  ) {\n    const textarea = document.createElement('textarea');\n    textarea.style.opacity = '0';\n    textarea.textContent = text;\n    // Prevent scrolling to bottom of page\n    textarea.style.position = 'fixed';\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy');\n    } catch (e) {\n      // Security exception may be thrown by some browsers.\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport default (url) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const setCopied = async () => {\n    await copyToClipboard(url);\n    setIsCopied(true);\n  };\n  return [isCopied, setCopied];\n};\n","import React from 'react';\nimport './CollectionPage.scss';\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  TwitterShareButton,\n  EmailIcon,\n  FacebookIcon,\n  TwitterIcon,\n} from 'react-share';\nimport useClipboard from '../../hooks/useClipboard';\nimport { useGetDatasetsByIds } from '../../hooks/datasets';\nimport Dataset from '../../components/Dataset/Dataset';\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\n\nexport default function CollectionPage({ match }) {\n  const { name, datasetIDs } = match.params;\n  const url = window.location.href;\n  const datasets = useGetDatasetsByIds(datasetIDs.split(','));\n\n  const [isCopied, setCopied] = useClipboard(url);\n  return (\n    <div className=\"collections-page\">\n      <div className=\"collections-details\">\n        <section>\n          <Breadcrumb currentPage=\"Collections\" />\n        </section>\n        <section>\n          <h2>{name}</h2>\n          <p>\n            {datasets.length} dataset{datasets.length > 1 ? 's' : ''}\n          </p>\n        </section>\n\n        <div>\n          <h3>Share this collection:</h3>\n          <p className=\"dataset-url\">{url} </p>\n          <button type=\"button\" onClick={setCopied}>\n            Copy link\n          </button>\n          <span>{isCopied ? 'Copied!' : ' '} </span>\n          <p className=\"share-icons\">\n            <FacebookShareButton url={url}>\n              <FacebookIcon size={36} />\n            </FacebookShareButton>{' '}\n            <TwitterShareButton url={url}>\n              <TwitterIcon size={36} />\n            </TwitterShareButton>\n            <EmailShareButton url={url}>\n              <EmailIcon size={36} />\n            </EmailShareButton>\n          </p>\n        </div>\n      </div>\n      <div className=\"collections-content\">\n        {datasets.map((dataset) => (\n          <Dataset viewInOpenPortal key={dataset.id} dataset={dataset} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useCurrentCollection } from '../../hooks/collections';\nimport { useGetDatasetsByIds } from '../../hooks/datasets';\nimport './CreateCollectionModal.scss';\n\nexport default function CreateCollectionModal() {\n    const [collection, { clearCollection, setName }] = useCurrentCollection();\n    const datasets = useGetDatasetsByIds(collection.datasets);\n\n    return (\n        <div className=\"create-collection-modal\">\n            <h3>Create collection with the following datasets</h3>\n            <ul>\n                {datasets.map((dataset) => (\n                    <li>{dataset.resource.name}</li>\n                ))}\n            </ul>\n            <input\n                type=\"text\"\n                placeholder=\"Name\"\n                value={collection.name}\n                onChange={(e) => setName(e.target.value)}\n            />\n            <Link\n                to={`/collection/${collection.name}/${collection.datasets.join(\n                    ',',\n                )}`}\n            >\n                <button type=\"submit\" onClick={clearCollection}>\n                    Create\n                </button>\n            </Link>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function GHPagesRedirect() {\n  const [redirect, setRedirect] = useState(null);\n  useEffect(() => {\n    // This is for dealing with the 404 redirect issue on gh pages\n    const target = sessionStorage.redirect;\n    delete sessionStorage.redirect;\n\n    if (target && target !== window.location.href) {\n      let to = target;\n      if (process.env.PUBLIC_URL) {\n        to = `/${to\n          .split('/')\n          .slice(4)\n          .join('/')}`;\n      }\n      setRedirect(to);\n    }\n  }, []);\n\n  if (redirect) {\n    return <Redirect to={redirect} />;\n  }\n  return <></>;\n}\n","import React from 'react';\nimport './App.scss';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect,\n    Switch,\n} from 'react-router-dom';\nimport { ModalContainer, ModalRoute } from 'react-router-modal';\n\nimport SideNav from './components/SideNav/SideNav';\nimport HomePage from './layout/HomePage/HomePage';\nimport DatasetPage from './layout/DatasetPage/DatasetPage';\nimport CollectionPage from './layout/CollectionPage/CollectionPage';\nimport CreateCollectionModal from './components/CreateCollectionModal/CreateCollectionModal';\nimport GHPagesRedirect from './components/GHPagesRedirect/GHPagesRedirect';\n\nimport 'react-router-modal/css/react-router-modal.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router basename={process.env.PUBLIC_URL}>\n                <ModalContainer />\n                <SideNav />\n                <div className=\"content\">\n                    <GHPagesRedirect />\n                    <Switch>\n                        <Route path=\"/\" exact component={HomePage} />\n                        <Route\n                            path=\"/dataset/:datasetID\"\n                            exact\n                            component={DatasetPage}\n                        />\n                        <Route\n                            path=\"/collection/:name/:datasetIDs\"\n                            exact\n                            component={CollectionPage}\n                        />\n\n                        <ModalRoute\n                            path=\"/collection/new\"\n                            parentPath=\"/\"\n                            component={CreateCollectionModal}\n                        />\n                        <Redirect from=\"/\" to=\"/\" />\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'normalize.css'; // Ensure consistent layout across browsers\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './contexts/OpenDataContext';\nimport { CollectionsProvider } from './contexts/CollectionsContext';\n\nReactDOM.render(\n  <StateProvider>\n    <CollectionsProvider>\n      <App />\n    </CollectionsProvider>\n  </StateProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}