name: Prod CI/CD Pipeline
on:
  push:
    branches: [ main ]

env:
  REACT_APP_SCOUT_API_URI: 'http://localhost:5000/graphql'
  REACT_APP_SCOUT_CLIENT_URI: 'http://localhost:3000'
  REACT_APP_SCOUT_GITHUB_CLIENT_ID: ${{ secrets.AUTH_GITHUB_CLIENT_SECRET }}
  REACT_APP_SCOUT_AZURE_APP_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  REACT_APP_SCOUT_AZURE_AUTHORITIES: 'twosigmadataclinic.b2clogin.com'
  REACT_APP_SCOUT_AZURE_FULL_AUTHORITY_URL: 'https://twosigmadataclinic.b2clogin.com/twosigmadataclinic.onmicrosoft.com/B2C_1_scout_signup_signin'
  REACT_APP_SCOUT_AZURE_B2C_SCOPES: 'https://twosigmadataclinic.onmicrosoft.com/scout-dev-api/Scout.API'
  SCOUT_SERVER_GITHUB_CLIENT_ID: ${{ secrets.AUTH_GITHUB_CLIENT_ID }}
  SCOUT_SERVER_GITHUB_CLIENT_SECRET: ${{ secrets.AUTH_GITHUB_CLIENT_SECRET }}
  SCOUT_SERVER_AZURE_APP_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  SCOUT_SERVER_AZURE_B2C_AUTH_POLICY_NAME: 'B2C_1_scout_signup_signin'
  SCOUT_SERVER_AZURE_B2C_IDENTITY_METADATA_URI: 'https://twosigmadataclinic.b2clogin.com/twosigmadataclinic.onmicrosoft.com/v2.0/.well-known/openid-configuration'

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run frontend tests
        run: yarn test
        working-directory: packages/frontend
      - name: Run frontend build
        run: yarn build
        working-directory: packages/frontend

  # deploy the entire repo
  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [ continuous-integration ]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name Scout \
            --deployment-group-name scout_prod_deployment_group \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
