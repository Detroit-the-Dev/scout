{"version":3,"sources":["utils/socrata.js","contexts/OpenDataContext.jsx","hooks/datasets.js","contexts/CollectionsContext.jsx","hooks/collections.js","components/RawHTML/RawHTML.jsx","components/Dataset/Dataset.jsx","utils/formatters.js","components/Loading/DatasetLoading/DatasetLoading.jsx","hooks/pagination.jsx","components/Loading/FilterLoading/FilterLoading.jsx","components/MultiSelector/MultiSelector.jsx","layout/HomePage/HomePage.jsx","components/JoinColumn/JoinColumn.jsx","components/ColumnSuggestions/ColumnSuggestions.jsx","components/ColumnMatchTable/ColumnMatchTable.jsx","layout/DatasetPage/DatasetPage.jsx","components/CollectionBar/CollectionBar.jsx","hooks/useClipboard.js","layout/CollectionPage/CollectionPage.jsx","components/CreateCollectionModal/CreateCollectionModal.jsx","components/GHPagesRedirect/GHPagesRedirect.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["SOCRATA_NY_OPENDATA_ENDPOINT","ALLOWED_JOIN_COLUMNS","getMaifestPage","pageNo","a","async","limit","fetch","then","r","json","matachableColumnsForDataset","dataset","Set","resource","columns_name","columns_field_name","hasJoinableMatch","columns","candidate","candidateCols","intersection","filter","x","has","includes","Array","from","getUniqueEntries","column","id","replace","errorCode","map","entry","Object","values","db","Dexie","version","stores","SocrataCache","AppContext","createContext","initalState","datasets","tagList","categories","departments","stateLoaded","reducer","state","action","type","payload","useStateValue","useContext","useStateLoaded","useJoinableDatasets","useMemo","cols","joinableColumns","match","length","findJoinable","useDatasets","tags","term","ids","filteredDatasets","d","classification","domain_tags","tag","cat","domain_metadata","find","key","value","name","toLowerCase","CollectionsContext","cacheLoaded","CollectionCache","useCollection","dispatch","clearCollection","console","log","addToCollection","datasetID","removeFromCollection","setName","RawHTML","html","className","cleanedHTML","DOMPurify","sanitize","dangerouslySetInnerHTML","__html","Dataset","date","onAddToCollection","onRemoveFromCollection","inCollection","viewInOpenPortal","similarity","to","attribution","toPrecision","onClick","target","rel","href","permalink","icon","faExternalLinkAlt","updatedAt","Date","toLocaleDateString","year","month","day","description","join","_","i","usePagination","data","perPage","pages","Math","ceil","useState","currentPageNo","setCurrentPageNo","useEffect","pageButtons","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","onPageChange","page","selected","containerClassName","subContainerClassName","activeClassName","previousClassName","nextClassName","pageClassName","content","slice","disabled","MultiSelector","items","onChange","title","loaded","searchTerm","setSearchTerm","itemNames","keys","filteredItems","item","usePagenation","sort","b","pagedItems","placeholder","e","newSelection","toggleItem","checked","HomePage","useCategories","useTags","useDepartments","selectedTags","setSelectedTags","selectedCategories","setSelectedCategories","selectedDepartments","setSelectedDepartments","collection","pagedDatasets","ColumnJoin","rightDataset","joinCol","parentUniques","collapsed","setCollapsed","uniqueIds","uniqueEntries","setUniqueEntries","res","distinct","useUniqueColumnEntries","jointlyUnique","onKeyDown","keycode","role","tabIndex","faAngleRight","faAngleDown","faFile","uid","faTable","ColumnSuggestions","joins","columnUniques","setColumnsUniques","dataTypeForCol","columns_datatype","indexOf","pagedJoins","onKeydown","keyCode","leftDataset","ColumnMatchTable","joinColumns","suggestionsForColumn","useCallback","col","candidates","c","sortedColumns","formatDate","moment","format","DatasetPage","params","useDataset","activeTab","setActiveTab","pageViews","page_views","domainMetadata","similarDatasets","similarityMetrics","setSimilarityMetrics","useGetSimilarDatasets","updatedAutomation","updateFrequency","informationAgency","alt","src","owner","display_name","domain_category","metadata_updated_at","page_views_total","CollectionContext","copyToClipboard","text","navigator","clipboard","writeText","document","queryCommandSupported","textarea","createElement","style","opacity","textContent","position","body","appendChild","select","execCommand","removeChild","CollectionPage","datasetIDs","url","window","location","split","isCopied","setIsCopied","useClipboard","setCopied","FacebookShareButton","FacebookIcon","size","TwitterShareButton","TwitterIcon","EmailShareButton","EmailIcon","CreateCollectionModal","history","newCollection","collectionURL","push","createCollection","GHPagesRedirect","redirect","setRedirect","sessionStorage","App","basename","process","path","exact","component","parentPath","Boolean","hostname","ReactDOM","render","children","useReducer","get","result","cachedState","JSON","parse","cache_loaded","firstPage","totalEntries","resultSetSize","Promise","all","resp","results","list","reduce","datasetPage","allDatasets","getManifest","manifest","totals","getTagList","cats","getCategories","md","department","getDepartments","put","stringify","Provider","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba8f9dc7.chunk.js","sourcesContent":["const SOCRATA_NY_OPENDATA_ENDPOINT =\n  'https://api.us.socrata.com/api/catalog/v1?domains=data.cityofnewyork.us&search_context=data.cityofnewyork.us';\n\nconst ALLOWED_JOIN_COLUMNS = [\n  'BIN',\n  'BBL',\n  'NTA',\n  'Community Board',\n  'Census Tract',\n  'DBN',\n  'Council District',\n  'School Name',\n  'City Council Districts',\n  'DFTA ID',\n];\n\nasync function getMaifestPage(pageNo, limit = 100) {\n  return fetch(\n    `${SOCRATA_NY_OPENDATA_ENDPOINT}&offset=${pageNo * limit}&limit=${limit}`,\n  ).then((r) => r.json());\n}\n\nfunction matachableColumnsForDataset(dataset) {\n  return new Set([\n    ...dataset.resource.columns_name,\n    ...dataset.resource.columns_field_name,\n  ]);\n}\n\nfunction hasJoinableMatch(columns, candidate) {\n  const candidateCols = matachableColumnsForDataset(candidate);\n  const intersection = new Set(\n    [...columns].filter(\n      (x) => candidateCols.has(x) && ALLOWED_JOIN_COLUMNS.includes(x),\n    ),\n  );\n  return Array.from(intersection);\n}\n\nexport function findJoinable(dataset, datasets) {\n  const cols = matachableColumnsForDataset(dataset);\n  const matches = datasets\n    .map((candidate) => ({\n      dataset: candidate,\n      joinableColumns: hasJoinableMatch(cols, candidate),\n    }))\n    .filter(\n      (match) =>\n        match.joinableColumns.length > 0 &&\n        match.dataset.resource.id !== dataset.resource.id,\n    );\n  return matches;\n}\n\n/**\n * Get the full manifest from Socrata. This should be cached locally and updated in a smart way.\n *\n * @return {Promise(Array)} a promise that resolves to an array of the datasets\n */\nexport async function getManifest() {\n  const firstPage = await getMaifestPage(0, 1);\n  const totalEntries = firstPage.resultSetSize;\n  const pages = Math.ceil(totalEntries / 100);\n  return Promise.all(\n    [...Array(pages)].map((_, i) =>\n      getMaifestPage(i).then((resp) => resp.results),\n    ),\n  ).then((list) =>\n    list.reduce(\n      (datasetPage, allDatasets) => [...allDatasets, ...datasetPage],\n      [],\n    ),\n  );\n}\n\n/**\n * Extract from the datasets array, a unique set of categories.\n * @return {Array<string>} an array of unique categories\n */\nexport function getCategories(datasets) {\n  const categories = datasets.reduce(\n    (cats, dataset) => [\n      ...cats,\n      ...(dataset.classification.categories\n        ? dataset.classification.categories\n        : []),\n    ],\n    [],\n  );\n\n  const counts = categories.reduce(\n    (totals, cat) =>\n      cat in totals\n        ? { ...totals, [cat]: totals[cat] + 1 }\n        : { ...totals, [cat]: 1 },\n    {},\n  );\n  return counts;\n}\n\n/**\n * Extract from the datasets array, a unique set of categories.\n * @return {Array<string>} an array of unique categories\n */\nexport function getDepartments(datasets) {\n  const departments = datasets\n    .map((dataset) =>\n      dataset.classification.domain_metadata.find(\n        (md) => md.key === 'Dataset-Information_Agency',\n      ),\n    )\n    .filter((d) => d)\n    .map((d) => d.value);\n  const counts = departments.reduce(\n    (totals, department) =>\n      department in totals\n        ? { ...totals, [department]: totals[department] + 1 }\n        : { ...totals, [department]: 1 },\n    {},\n  );\n  return counts;\n}\n/**\n * Extract from the datasets array, a unique set of tags.\n * @return {Array<string>} an array of unique tags\n */\nexport function getTagList(datasets) {\n  const tagList = datasets.reduce(\n    (tags, dataset) => [\n      ...tags,\n      ...(dataset.classification.domain_tags\n        ? dataset.classification.domain_tags\n        : []),\n    ],\n    [],\n  );\n  const counts = tagList.reduce(\n    (totals, tag) =>\n      tag in totals\n        ? { ...totals, [tag]: totals[tag] + 1 }\n        : { ...totals, [tag]: 1 },\n    {},\n  );\n  return counts;\n}\n\nexport function getUniqueEntriesCount(dataset, column) {\n  return fetch(\n    `https://data.cityofnewyork.us/resource/${\n      dataset.resource.id\n    }.json?$select=distinct|> select count(*) ${column.replace(/ /g, '_')}`,\n  ).then((r) => r.json());\n}\nexport function getUniqueEntries(dataset, column) {\n  return fetch(\n    `https://data.cityofnewyork.us/resource/${\n      dataset.resource.id\n    }.json?$select=distinct ${column.replace(/ /g, '_')}`,\n  )\n    .then((r) => r.json())\n    .then((r) => {\n      return r.errorCode ? [] : r.map((entry) => Object.values(entry)[0]);\n    });\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nimport Dexie from 'dexie';\nimport {\n  getManifest,\n  getCategories,\n  getTagList,\n  getDepartments,\n} from '../utils/socrata';\n\nconst db = new Dexie('SocrataCache');\ndb.version(1).stores({\n  SocrataCache: 'id',\n});\n\nexport const AppContext = createContext();\n\nconst initalState = {\n  datasets: [],\n  tagList: [],\n  categories: [],\n  departments: [],\n  stateLoaded: false,\n};\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'UPDATE_OPEN_DATASET_MANIFEST':\n      return { ...state, datasets: payload };\n    case 'UPDATE_TAGS':\n      return { ...state, tagList: payload };\n    case 'UPDATE_CATEGORIES':\n      return { ...state, categories: payload };\n    case 'UPDATE_DEPARTMENTS':\n      return { ...state, departments: payload };\n    case 'HYDRATE_STATE':\n      return { ...state, ...payload };\n    case 'SET_LOADED':\n      return { ...state, stateLoaded: true };\n    default:\n      return state;\n  }\n};\n\nexport const StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n\n  // Try to get the state locally from indexed db... if we can't find it there, request it from the\n  // socrata API\n\n  useEffect(() => {\n    db.SocrataCache.get(1).then((result) => {\n      if (result) {\n        const cachedState = JSON.parse(result.data);\n        dispatch({\n          type: 'HYDRATE_STATE',\n          payload: { ...initalState, ...cachedState, cache_loaded: true },\n        });\n        // Set state as loaded to indicate that data is ready to use\n        dispatch({\n          type: 'SET_LOADED',\n        });\n      } else {\n        getManifest().then((manifest) => {\n          const tagList = getTagList(manifest);\n          const categories = getCategories(manifest);\n          const departments = getDepartments(manifest);\n          dispatch({\n            type: 'UPDATE_OPEN_DATASET_MANIFEST',\n            payload: manifest,\n          });\n          dispatch({\n            type: 'UPDATE_TAGS',\n            payload: tagList,\n          });\n          dispatch({\n            type: 'UPDATE_CATEGORIES',\n            payload: categories,\n          });\n          dispatch({\n            type: 'UPDATE_DEPARTMENTS',\n            payload: departments,\n          });\n          dispatch({\n            type: 'SET_LOADED',\n          });\n        });\n      }\n    });\n  }, []);\n\n  // If our datasets change, update the cahced version\n  const { datasets, tagList, categories, departments, stateLoaded } = state;\n  useEffect(() => {\n    if (stateLoaded) {\n      db.SocrataCache.put({\n        data: JSON.stringify({\n          datasets,\n          tagList,\n          categories,\n          departments,\n        }),\n        id: 1,\n      });\n    }\n  }, [datasets, tagList, categories, departments, stateLoaded]);\n\n  return (\n    <AppContext.Provider value={[state, dispatch]}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useStateValue = () => useContext(AppContext);\n","import { useMemo, useState, useEffect } from 'react';\nimport { useStateValue } from '../contexts/OpenDataContext';\nimport { findJoinable, getUniqueEntries } from '../utils/socrata';\n\nexport function useStateLoaded() {\n  const [{ stateLoaded }] = useStateValue();\n  return stateLoaded;\n}\n\nexport function useTags() {\n  const [{ tagList }] = useStateValue();\n  return tagList;\n}\n\nexport function useCategories() {\n  const [{ categories }] = useStateValue();\n  return categories;\n}\n\nexport function useDepartments() {\n  const [{ departments }] = useStateValue();\n  return departments;\n}\n\nexport function useJoinableDatasets(dataset) {\n  const [{ datasets }] = useStateValue();\n  return useMemo(() => (dataset ? findJoinable(dataset, datasets) : []), [\n    dataset,\n    datasets,\n  ]);\n}\n\nexport function useGetSimilarDatasets(datasetID) {\n  const [similarityMetrics, setSimilarityMetrics] = useState({});\n  const [{ datasets }] = useStateValue();\n\n  useEffect(() => {\n    fetch('/similarity_metrics.json')\n      .then((r) => r.json())\n      .then((r) => setSimilarityMetrics(r));\n  }, []);\n\n  const similarDatasets = useMemo(\n    () =>\n      similarityMetrics[datasetID]\n        ? similarityMetrics[datasetID].map((match) => ({\n            ...match,\n            dataset: datasets.find((d) => d.resource.id === match.dataset),\n          }))\n        : [],\n\n    [similarityMetrics, datasetID, datasets],\n  );\n  return similarDatasets;\n}\n\nexport function useDataset(datasetID) {\n  const [{ datasets }] = useStateValue();\n  return datasets.find((d) => d.resource.id === datasetID);\n}\n\nexport function useDatasets({ tags, term, categories, departments, ids }) {\n  const [{ datasets }] = useStateValue();\n\n  return useMemo(() => {\n    let filteredDatasets = [...datasets];\n\n    if (ids) {\n      return filteredDatasets.filter((d) => ids.includes(d.resource.id));\n    }\n\n    if (tags && tags.length > 0) {\n      filteredDatasets = filteredDatasets.filter(\n        (dataset) =>\n          dataset.classification.domain_tags.filter((tag) => tags.includes(tag))\n            .length > 0,\n      );\n    }\n\n    if (categories && categories.length > 0) {\n      filteredDatasets = filteredDatasets.filter(\n        (dataset) =>\n          dataset.classification.categories.filter((cat) =>\n            categories.includes(cat),\n          ).length > 0,\n      );\n    }\n\n    if (departments && departments > 0) {\n      filteredDatasets = filteredDatasets.filter((dataset) =>\n        departments.includes(\n          dataset.classification.domain_metadata.find(\n            (d) => d.key === 'Dataset-Information_Agency',\n          )?.value,\n        ),\n      );\n    }\n    if (term && term.length > 0) {\n      filteredDatasets = filteredDatasets.filter((dataset) =>\n        dataset.resource.name.toLowerCase().includes(term.toLowerCase()),\n      );\n    }\n\n    return filteredDatasets;\n  }, [datasets, ids, tags, categories, departments, term]);\n}\n\nexport function useUniqueColumnEntries(dataset, column) {\n  const [uniqueEntries, setUniqueEntries] = useState(null);\n  useEffect(() => {\n    getUniqueEntries(dataset, column).then((res) => {\n      setUniqueEntries({\n        dataset: dataset.resource.id,\n        column,\n        distinct: res,\n      });\n    });\n  }, [dataset, column]);\n  return uniqueEntries;\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport Dexie from 'dexie';\n\nexport const CollectionsContext = createContext();\n\nconst initalState = {\n  datasets: [],\n  name: null,\n  cacheLoaded: false,\n};\n\nconst db = new Dexie('CollectionCache');\ndb.version(1).stores({\n  CollectionCache: 'id',\n});\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case 'ADD_TO_COLLECTION':\n      return { ...state, datasets: [...state.datasets, payload] };\n    case 'REMOVE_FROM_COLLECTION':\n      return {\n        ...state,\n        datasets: state.datasets.filter((d) => d !== payload),\n      };\n    case 'SET_NAME':\n      return {\n        ...state,\n        name: payload,\n      };\n    case 'CLEAR_COLLECTION':\n      return {\n        ...state,\n        datasets: [],\n      };\n    case 'HYDRATE_STATE':\n      return {\n        ...state,\n        ...payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const CollectionsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n  const { cacheLoaded, datasets, name } = state;\n\n  // Restore state\n  useEffect(() => {\n    db.CollectionCache.get(1).then((result) => {\n      if (result) {\n        const cachedState = JSON.parse(result.data);\n        dispatch({\n          type: 'HYDRATE_STATE',\n          payload: { ...initalState, ...cachedState, cacheLoaded: true },\n        });\n      } else {\n        dispatch({\n          payload: { ...initalState, cacheLoaded: true },\n          type: 'HYDRATE_STATE',\n        });\n      }\n    });\n  }, []);\n\n  // Cache state\n  useEffect(() => {\n    if (cacheLoaded) {\n      db.CollectionCache.put({\n        data: JSON.stringify({\n          datasets,\n          name,\n        }),\n        id: 1,\n      });\n    }\n  }, [cacheLoaded, datasets, name]);\n\n  return (\n    <CollectionsContext.Provider value={[state, dispatch]}>\n      {children}\n    </CollectionsContext.Provider>\n  );\n};\n\nexport const useCollectionsValue = () => useContext(CollectionsContext);\n","import { useCollectionsValue } from '../contexts/CollectionsContext';\n\nexport default function useCollection() {\n  const [state, dispatch] = useCollectionsValue();\n  const addToCollection = (datasetID) =>\n    dispatch({ type: 'ADD_TO_COLLECTION', payload: datasetID });\n  const removeFromCollection = (datasetID) =>\n    dispatch({ type: 'REMOVE_FROM_COLLECTION', payload: datasetID });\n  const setName = (name) => dispatch({ type: 'SET_NAME', payload: name });\n\n  const clearCollection = () => {\n    console.log('clearning');\n    dispatch({ type: 'CLEAR_COLLECTION' });\n  };\n\n  return [\n    state,\n    { clearCollection, addToCollection, removeFromCollection, setName },\n  ];\n}\n","import React from 'react';\nimport DOMPurify from 'dompurify';\n\n/* Simple component to sanitize HTML and display it.\n *  Need this for making sure we can display the\n *  dataset descriptions properly\n */\n\nexport default function RawHTML({ html, className }) {\n  const cleanedHTML = DOMPurify.sanitize(html);\n  return (\n    <div\n      className={className}\n      dangerouslySetInnerHTML={{ __html: cleanedHTML }}\n    />\n  );\n}\n","import React from 'react';\nimport './Dataset.scss';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { formatDate } from '../../utils/formatters';\nimport RawHTML from '../RawHTML/RawHTML';\n\nexport default function Dataset({\n  dataset,\n  onAddToCollection,\n  onRemoveFromCollection,\n  inCollection,\n  viewInOpenPortal = false,\n  similarity,\n}) {\n  return (\n    <div className=\"dataset\" key={dataset.resource.id}>\n      <div className=\"dataset-title\">\n        <Link to={`/dataset/${dataset.resource.id}`}>\n          <h2>{dataset.resource.name}</h2>\n        </Link>\n        <p>{dataset.resource.attribution}</p>\n      </div>\n\n      {similarity && <p>Similarity: {(similarity * 100).toPrecision(2)}%</p>}\n      {onAddToCollection && (\n        <button\n          className=\"collection-button\"\n          type=\"button\"\n          onClick={() =>\n            inCollection\n              ? onRemoveFromCollection(dataset.resource.id)\n              : onAddToCollection(dataset.resource.id)\n          }\n        >\n          {inCollection ? 'Remove from collection' : 'Add to collection'}\n        </button>\n      )}\n      {viewInOpenPortal && (\n        <a\n          className=\"external-link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={dataset.permalink}\n        >\n          <button type=\"button\">\n            View on Open Data&nbsp;\n            <FontAwesomeIcon icon={faExternalLinkAlt} />\n          </button>\n        </a>\n      )}\n\n      <div className=\"dataset-last-update\">\n        <p className=\"header\">Last Updated</p>\n        <p>{formatDate(dataset.resource.updatedAt)}</p>\n      </div>\n\n      <RawHTML\n        className=\"dataset-description\"\n        html={dataset.resource.description}\n      />\n      <div className=\"dataset-meta\">\n        <div className=\"update-frequency\">\n          <span>Update frequency:</span>\n          weekly\n        </div>\n        <div className=\"dataset-tags\">\n          <span>Tags:</span>\n          {dataset.classification.domain_tags.join(', ')}\n        </div>\n      </div>\n    </div>\n  );\n}\n","export function formatDate(date) {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n  return new Date(date).toLocaleDateString('en-US', options);\n}\n","import React from 'react';\nimport './DatasetLoading.scss';\nimport '../Loading.scss';\n\nexport default () => (\n  <div className=\"dataset-loading\">\n    <div className=\"dataset-list\">\n      {[...Array(4)].map((_, i) => (\n        <div key={i} className=\"dataset\">\n          <div className=\"dataset-title animate\" />\n          <p className=\"dataset-description animate\" />\n          <div className=\"dataset-meta animate\" />\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { useState, useMemo, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\n\nexport default function usePagination(data, perPage = 20) {\n  const pages = useMemo(() => Math.ceil(data.length / perPage), [\n    data,\n    perPage,\n  ]);\n  const [currentPageNo, setCurrentPageNo] = useState(0);\n\n  useEffect(() => {\n    setCurrentPageNo(0);\n  }, [data]);\n\n  const pageButtons = (\n    <nav>\n      <ReactPaginate\n        previousLabel=\"previous\"\n        nextLabel=\"next\"\n        breakLabel=\"...\"\n        breakClassName=\"break-me\"\n        pageCount={pages}\n        onPageChange={({ selected: page }) => {\n          setCurrentPageNo(page);\n        }}\n        containerClassName=\"pagination\"\n        subContainerClassName=\"pages pagination\"\n        activeClassName=\"active\"\n        previousClassName=\"page-item\"\n        nextClassName=\"page-item\"\n        pageClassName=\"page-item\"\n      />\n    </nav>\n  );\n\n  const content = useMemo(\n    () => data.slice(currentPageNo * perPage, (currentPageNo + 1) * perPage),\n    [perPage, currentPageNo, data],\n  );\n\n  return [\n    content,\n    {\n      pageButtons,\n    },\n  ];\n}\n","import React from 'react';\nimport './FilterLoading.scss';\nimport '../Loading.scss';\n\nexport default () => (\n  <div className=\"\">\n    <div className=\"filter-loading-wrapper\">\n      {[...Array(10)].map((_, i) => (\n        <li key={i} className=\"multi-buttons\">\n          <input type=\"checkbox\" disabled className=\"checkbox\" />\n          <span className=\"animate item-name\" />\n          <span className=\"animate pill\" />\n        </li>\n      ))}\n    </div>\n  </div>\n);\n","import React, { useState, useMemo } from 'react';\nimport usePagenation from '../../hooks/pagination';\nimport { useStateLoaded } from '../../hooks/datasets';\nimport FilterLoading from '../Loading/FilterLoading/FilterLoading';\nimport './MultiSelector.scss';\n\nexport default function MultiSelector({ items, selected, onChange, title }) {\n  const clearItems = () => {\n    onChange([]);\n  };\n\n  const loaded = useStateLoaded();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const toggleItem = (item) => {\n    const newSelection = selected.includes(item)\n      ? selected.filter((i) => i !== item)\n      : [...selected, item];\n\n    onChange(newSelection);\n  };\n\n  const itemNames = useMemo(() => items && Object.keys(items), [items]);\n\n  const filteredItems = useMemo(\n    () =>\n      itemNames ? itemNames.filter((item) => item.includes(searchTerm)) : [],\n    [itemNames, searchTerm],\n  );\n\n  const sortedItems = useMemo(\n    () => filteredItems?.sort((a, b) => (items[a] < items[b] ? 1 : -1)),\n    [filteredItems, items],\n  );\n\n  const [pagedItems, { pageButtons }] = usePagenation(sortedItems, 10);\n\n  return (\n    <div className=\"mutli-selector\">\n      <h2>{title}</h2>\n      <div className=\"search\">\n        <input\n          disabled={!loaded}\n          placeholder=\"filter\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </div>\n      <ul className=\"multi-list\">\n        {!loaded ? (\n          <FilterLoading />\n        ) : (\n          pagedItems.map((item) => (\n            // eslint-disable-next-line\n            <li\n              key={item}\n              onClick={() => toggleItem(item)}\n              className={`multi-buttons ${\n                selected && selected.includes(item) ? 'selected' : ''\n              }`}\n            >\n              <input\n                type=\"checkbox\"\n                checked={selected && selected.includes(item)}\n                className=\"checkbox\"\n              />\n              <span className=\"item-name\">{item}</span>\n              <span className=\"pill\">{items[item]}</span>\n            </li>\n          ))\n        )}\n      </ul>\n      {pageButtons}\n      {selected && selected.length > 0 && (\n        <button type=\"button\" onClick={clearItems}>\n          clear\n        </button>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './HomePage.scss';\nimport {\n  useCategories,\n  useTags,\n  useDepartments,\n  useDatasets,\n  useStateLoaded,\n} from '../../hooks/datasets';\nimport useCollection from '../../hooks/collections';\nimport Dataset from '../../components/Dataset/Dataset';\nimport DatasetLoading from '../../components/Loading/DatasetLoading/DatasetLoading';\nimport usePagination from '../../hooks/pagination';\nimport MultiSelector from '../../components/MultiSelector/MultiSelector';\n\nexport default function HomePage() {\n  const categories = useCategories();\n  const tags = useTags();\n  const departments = useDepartments();\n  const loaded = useStateLoaded();\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [selectedDepartments, setSelectedDepartments] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCollection();\n\n  const datasets = useDatasets({\n    tags: selectedTags,\n    categories: selectedCategories,\n    term: searchTerm,\n    departments: selectedDepartments,\n  });\n  const [pagedDatasets, { pageButtons }] = usePagination(datasets, 5);\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"filters\">\n        <div className=\"categories\">\n          <MultiSelector\n            items={categories}\n            onChange={setSelectedCategories}\n            selected={selectedCategories}\n            title=\"Categories\"\n          />\n        </div>\n        <div className=\"departments\">\n          <MultiSelector\n            items={departments}\n            selected={selectedDepartments}\n            onChange={setSelectedDepartments}\n            title=\"Departments\"\n          />\n        </div>\n        <div className=\"tags\">\n          <MultiSelector\n            items={tags}\n            selected={selectedTags}\n            onChange={setSelectedTags}\n            title=\"Tags\"\n          />\n        </div>\n      </div>\n      <div className=\"datasets\">\n        <div className=\"search\">\n          <input\n            type=\"text\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n            value={searchTerm}\n            placeholder=\"Search for dataset\"\n          />\n        </div>\n        <div className=\"count-and-sort\">\n          <p>\n            <span className=\"bold\">{datasets.length}</span> datasets\n          </p>\n          <p>\n            Sort by: <span className=\"bold\">Recently updated</span>\n          </p>\n        </div>\n\n        <ul className=\"dataset-list\">\n          {loaded ? (\n            pagedDatasets.map((dataset) => (\n              <Dataset\n                key={dataset?.resource?.id}\n                dataset={dataset}\n                inCollection={collection.datasets.includes(dataset.resource.id)}\n                onAddToCollection={addToCollection}\n                onRemoveFromCollection={removeFromCollection}\n              />\n            ))\n          ) : (\n            <DatasetLoading />\n          )}\n        </ul>\n        <div>{pageButtons}</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFile } from '@fortawesome/free-regular-svg-icons';\nimport { Link } from 'react-router-dom';\nimport {\n  faAngleRight,\n  faAngleDown,\n  faTable,\n} from '@fortawesome/free-solid-svg-icons';\nimport { useUniqueColumnEntries } from '../../hooks/datasets';\nimport useCollection from '../../hooks/collections';\nimport './JoinColumn.scss';\n\nexport default function ColumnJoin({ rightDataset, joinCol, parentUniques }) {\n  const [collapsed, setCollapsed] = useState(true);\n  const uniqueIds = useUniqueColumnEntries(rightDataset, joinCol);\n  const jointlyUnique = useMemo(\n    () =>\n      uniqueIds && parentUniques\n        ? parentUniques.filter((e) => uniqueIds.distinct.includes(e))\n        : [],\n    [uniqueIds, parentUniques],\n  );\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCollection();\n\n  return (\n    <div className=\"join-column\">\n      <div className=\"join-column-row\">\n        <span\n          onClick={() => setCollapsed(!collapsed)}\n          onKeyDown={(e) => {\n            if (e.keycode === 32) {\n              setCollapsed(!collapsed);\n            }\n          }}\n          className=\"join-column-name\"\n          role=\"button\"\n          tabIndex=\"0\"\n        >\n          <FontAwesomeIcon icon={collapsed ? faAngleRight : faAngleDown} />\n          <FontAwesomeIcon icon={faFile} />\n          {rightDataset.resource.name}\n        </span>\n        <span>\n          {jointlyUnique ? `${jointlyUnique.length} matching id's` : 'loading'}\n        </span>\n        <span>\n          <Link to={`/dataset/${rightDataset.resource.id}`}>View dataset</Link>\n        </span>\n        <button\n          type=\"button\"\n          onClick={() =>\n            collection.datasets.includes(rightDataset.resource.id)\n              ? removeFromCollection(rightDataset.resource.id)\n              : addToCollection(rightDataset.resource.id)\n          }\n        >\n          {collection.datasets.includes(rightDataset.resource.id)\n            ? 'Remove dataset from collection'\n            : 'Add dataset to collection'}\n        </button>\n      </div>\n      {!collapsed && uniqueIds && (\n        <div className=\"join-column-unique\">\n          <h3>COMMON IDS</h3>\n          <ul>\n            {jointlyUnique.slice(0, 10).map((uid) => (\n              <li key={uid}>\n                <div className=\"bar\" />\n                <FontAwesomeIcon icon={faTable} />\n                <span>{uid}</span>\n              </li>\n            ))}\n          </ul>\n          <div>and {jointlyUnique.length - 10} more</div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport JoinColumn from '../JoinColumn/JoinColumn';\nimport './ColumnSuggestions.scss';\nimport usePagination from '../../hooks/pagination';\nimport { getUniqueEntries } from '../../utils/socrata';\n\nexport default function ColumnSuggestions({ column, joins, dataset }) {\n  const [columnUniques, setColumnsUniques] = useState([]);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const dataTypeForCol =\n    dataset.resource.columns_datatype[\n      dataset.resource.columns_name.indexOf(column)\n    ];\n\n  const [pagedJoins, { pageButtons }] = usePagination(joins, 10);\n\n  useEffect(() => {\n    if (joins.length > 0) {\n      getUniqueEntries(dataset, column).then((res) => {\n        setColumnsUniques(res);\n      });\n    }\n  }, [column, dataset, joins]);\n\n  return (\n    <div className={`column-suggestions ${collapsed ? 'collapsed' : ''}`}>\n      <div\n        className=\"table-row\"\n        role=\"button\"\n        onKeydown={(e) => {\n          if (e.keyCode === 36) {\n            setCollapsed(!collapsed);\n          }\n        }}\n        onClick={() => setCollapsed(!collapsed)}\n        tabIndex=\"0\"\n      >\n        <span className=\"column-collapse\">\n          <FontAwesomeIcon icon={collapsed ? faAngleRight : faAngleDown} />{' '}\n          {column}\n        </span>\n        <span>{dataTypeForCol}</span>\n        <span>{joins.length} matching datasets</span>\n      </div>\n      {!collapsed && pagedJoins && (\n        <div className=\"columns-suggestions-matches\">\n          <h3>MATCHING DATSETS</h3>\n          {joins && (\n            <ul>\n              {pagedJoins.map((join) => (\n                <li key={join.dataset.resource.id}>\n                  <JoinColumn\n                    leftDataset={dataset}\n                    rightDataset={join.dataset}\n                    joinCol={column}\n                    parentUniques={columnUniques}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n          {pageButtons}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useCallback, useMemo } from 'react';\nimport ColumnSuggestions from '../ColumnSuggestions/ColumnSuggestions';\nimport './ColumnMatchTable.scss';\n\nexport default function ColumnMatchTable({ dataset, joinColumns }) {\n  const columns = dataset.resource.columns_name;\n\n  const suggestionsForColumn = useCallback(\n    (col, candidates) =>\n      columns ? candidates.filter((c) => c.joinableColumns[0] === col) : [],\n    [columns],\n  );\n\n  const sortedColumns = useMemo(\n    () =>\n      joinColumns\n        ? columns.sort((a, b) =>\n            suggestionsForColumn(a, joinColumns).length <\n            suggestionsForColumn(b, joinColumns).length\n              ? 1\n              : -1,\n          )\n        : [],\n    [columns, joinColumns, suggestionsForColumn],\n  );\n\n  return (\n    <div className=\"column-match-table\">\n      <div className=\"table-header\">\n        <ul className=\"table-row\">\n          <li>Column name</li>\n          <li>Column type</li>\n          <li>No potential joins</li>\n        </ul>\n      </div>\n      {sortedColumns.map((column) => (\n        <ColumnSuggestions\n          dataset={dataset}\n          column={column}\n          joins={suggestionsForColumn(column, joinColumns)}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport RawHTML from '../../components/RawHTML/RawHTML';\nimport ColumnMatchTable from '../../components/ColumnMatchTable/ColumnMatchTable';\nimport Dataset from '../../components/Dataset/Dataset';\nimport useCollection from '../../hooks/collections';\nimport {\n  useDataset,\n  useJoinableDatasets,\n  useGetSimilarDatasets,\n} from '../../hooks/datasets';\nimport './DatasetPage.scss';\n\nconst formatDate = (date) => moment(date).format('MMMM DD, YYYY');\n\nexport default function DatasetPage({ match }) {\n  const { datasetID } = match.params;\n  const dataset = useDataset(datasetID);\n  const joins = useJoinableDatasets(dataset);\n  const [activeTab, setActiveTab] = useState('joins');\n  const resource = dataset?.resource;\n  const pageViews = resource?.page_views;\n  const classification = dataset?.classification;\n  const domainMetadata = classification?.domain_metadata;\n  const similarDatasets = useGetSimilarDatasets(datasetID);\n  const [\n    collection,\n    { addToCollection, removeFromCollection },\n  ] = useCollection();\n\n  const updatedAutomation = domainMetadata?.find(\n    ({ key, value }) => key === 'Update_Automation' && value === 'No',\n  )?.value;\n\n  const updateFrequency = domainMetadata?.find(\n    ({ key }) => key === 'Update_Update-Frequency',\n  )?.value;\n\n  const informationAgency = domainMetadata?.find(\n    ({ key }) => key === 'Dataset-Information_Agency',\n  )?.value;\n\n  return dataset ? (\n    <div className=\"dataset-page\">\n      <div className=\"dataset-details\">\n        <section>\n          <h2>{resource.name}</h2>\n          <p>{informationAgency}</p>\n          <RawHTML html={resource.description} />\n          <button\n            type=\"button\"\n            className=\"collection-button\"\n            onClick={() =>\n              collection.datasets.includes(datasetID)\n                ? removeFromCollection(datasetID)\n                : addToCollection(datasetID)\n            }\n          >\n            {collection.datasets.includes(datasetID)\n              ? 'Remove From Collection'\n              : 'Add to Collection'}{' '}\n          </button>\n        </section>\n        <section className=\"external-link\">\n          <p>Powered by</p>\n          <img\n            alt=\"NYC Open Data\"\n            src=\"https://opendata.cityofnewyork.us/wp-content/themes/opendata-wp/assets/img/nyc-open-data-logo.svg\"\n          />\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={dataset.permalink}>\n            View on Open Data\n          </a>\n        </section>\n        <section className=\"metadata\">\n          <h2>Metadata</h2>\n          <h3>Update Automation</h3>\n          <p>{updatedAutomation}</p>\n          <h3>Update Frequency</h3>\n          <p>{updateFrequency}</p>\n          <h3>Dataset Owner</h3>\n          <p>{dataset?.owner.display_name}</p>\n          {informationAgency && (\n            <>\n              <h3>Agency</h3>\n              <p>{informationAgency}</p>\n            </>\n          )}\n          {classification?.domain_category && (\n            <>\n              <h3>Category</h3>\n              <p>{classification.domain_category}</p>\n            </>\n          )}\n          <h3>Updated</h3>\n          <p>{formatDate(resource?.updatedAt)}</p>\n          <h3>Metadata Updated at</h3>\n          <p>{formatDate(resource?.metadata_updated_at)}</p>\n          <h3>Page Views</h3>\n          <p>{pageViews?.page_views_total}</p>\n        </section>\n      </div>\n      <div className=\"dataset-recomendataions\">\n        <h2>Other datasets to consider</h2>\n        <div className=\"tabs\">\n          <button\n            type=\"button\"\n            className={activeTab === 'joins' ? 'active' : ''}\n            onClick={() => setActiveTab('joins')}\n          >\n            Potential Join Columns\n          </button>\n          <button\n            type=\"button\"\n            className={activeTab === 'theme' ? 'active' : ''}\n            onClick={() => setActiveTab('theme')}\n          >\n            Thematically Similar\n          </button>\n        </div>\n        {activeTab === 'joins' && (\n          <>\n            <p>\n              Find datasets that share a column with the current dataset. These\n              columns might be interesting datasets to join with the current\n              dataset to add additional details or bring in context\n            </p>\n            <ColumnMatchTable dataset={dataset} joinColumns={joins} />\n          </>\n        )}\n        {activeTab === 'theme' && (\n          <>\n            <p>\n              Dataset that are thematically similar based on name and\n              description\n            </p>\n            {similarDatasets.slice(0, 10).map((d) => (\n              <Dataset\n                onAddToCollection={addToCollection}\n                onRemoveFromCollection={removeFromCollection}\n                dataset={d.dataset}\n                similarity={d.similarity}\n                inCollection={collection.datasets.includes(\n                  d.dataset.resource.id,\n                )}\n              />\n            ))}\n          </>\n        )}\n      </div>\n    </div>\n  ) : (\n    <h1>Loading...</h1>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport useCollection from '../../hooks/collections';\nimport './CollectionBar.scss';\n\nexport default function CollectionContext() {\n  const [collection, { clearCollection }] = useCollection();\n  if (collection.datasets && collection.datasets.length > 0) {\n    return (\n      <div className=\"collection-bar\">\n        <span>{collection.datasets.length} datasets selected</span>\n        <Link to=\"/collection/new\">\n          <button type=\"submit\">Create Collection</button>\n        </Link>\n        <button type=\"button\" onClick={clearCollection}>\n          Clear\n        </button>\n      </div>\n    );\n  }\n  return null;\n}\n","import { useState } from 'react';\n\nconst copyToClipboard = async (text) => {\n  if (navigator.clipboard) {\n    try {\n      await navigator.clipboard.writeText(text);\n      return true;\n    } catch (e) {\n      // Suppress error and try fallback method\n    }\n  }\n\n  if (\n    document.queryCommandSupported &&\n    document.queryCommandSupported('copy')\n  ) {\n    const textarea = document.createElement('textarea');\n    textarea.style.opacity = '0';\n    textarea.textContent = text;\n    // Prevent scrolling to bottom of page\n    textarea.style.position = 'fixed';\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy');\n    } catch (e) {\n      // Security exception may be thrown by some browsers.\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport default (url) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const setCopied = async () => {\n    await copyToClipboard(url);\n    setIsCopied(true);\n  };\n  return [isCopied, setCopied];\n};\n","import React from 'react';\nimport './CollectionPage.scss';\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  TwitterShareButton,\n  EmailIcon,\n  FacebookIcon,\n  TwitterIcon,\n} from 'react-share';\nimport useClipboard from '../../hooks/useClipboard';\nimport { useDatasets } from '../../hooks/datasets';\nimport Dataset from '../../components/Dataset/Dataset';\n\nexport default function CollectionPage({ match }) {\n  const { name, datasetIDs } = match.params;\n  const url = window.location.href;\n  const datasets = useDatasets({ ids: datasetIDs.split(',') });\n\n  const [isCopied, setCopied] = useClipboard(url);\n  return (\n    <div className=\"collections-page\">\n      <div className=\"collections-details\">\n        <h2>{name}</h2>\n        <p>\n          {datasets.length} dataset{datasets.length > 1 ? 's' : ''}\n        </p>\n\n        <div>\n          <h3>Share this collection:</h3>\n          <p className=\"dataset-url\">{url} </p>\n          <button type=\"button\" onClick={setCopied}>\n            Copy link\n          </button>\n          <span>{isCopied ? 'Copied!' : ' '} </span>\n          <p className=\"share-icons\">\n            <FacebookShareButton url={url}>\n              <FacebookIcon size={36} />\n            </FacebookShareButton>{' '}\n            <TwitterShareButton url={url}>\n              <TwitterIcon size={36} />\n            </TwitterShareButton>\n            <EmailShareButton url={url}>\n              <EmailIcon size={36} />\n            </EmailShareButton>\n          </p>\n        </div>\n      </div>\n      <div className=\"collections-content\">\n        {datasets.map((dataset) => (\n          <Dataset viewInOpenPortal key={dataset.id} dataset={dataset} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport useCollection from '../../hooks/collections';\nimport { useDatasets } from '../../hooks/datasets';\nimport './CreateCollectionModal.scss';\n\nexport default function CreateCollectionModal({ history }) {\n  const [collection, { setName }] = useCollection();\n  const datasets = useDatasets({ ids: collection.datasets });\n\n  const createCollection = (newCollection) => {\n    const collectionURL = `/collection/${\n      newCollection.name\n    }/${newCollection.datasets.join(',')}`;\n    history.push(collectionURL);\n  };\n\n  return (\n    <div className=\"create-collection-modal\">\n      <h3>Create collection with the following datasets</h3>\n      <ul>\n        {datasets.map((dataset) => (\n          <li>{dataset.resource.name}</li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        value={collection.name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <button type=\"submit\" onClick={() => createCollection(collection)}>\n        Create\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function GHPagesRedirect() {\n  const [redirect, setRedirect] = useState(null);\n  useEffect(() => {\n    // This is for dealing with the 404 redirect issue on gh pages\n    const target = sessionStorage.redirect;\n    delete sessionStorage.redirect;\n\n    if (target && target !== window.location.href) {\n      let to = target;\n      if (process.env.PUBLIC_URL) {\n        to = `/${to\n          .split('/')\n          .slice(4)\n          .join('/')}`;\n      }\n      setRedirect(to);\n    }\n  }, []);\n\n  if (redirect) {\n    return <Redirect to={redirect} />;\n  }\n  return <></>;\n}\n","import React from 'react';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n  Link,\n} from 'react-router-dom';\nimport { ModalContainer, ModalRoute } from 'react-router-modal';\n\nimport HomePage from './layout/HomePage/HomePage';\nimport DatasetPage from './layout/DatasetPage/DatasetPage';\nimport CollectionBar from './components/CollectionBar/CollectionBar';\nimport CollectionPage from './layout/CollectionPage/CollectionPage';\nimport CreateCollectionModal from './components/CreateCollectionModal/CreateCollectionModal';\nimport GHPagesRedirect from './components/GHPagesRedirect/GHPagesRedirect';\n\nimport 'react-router-modal/css/react-router-modal.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ModalContainer />\n      <Router basename={process.env.PUBLIC_URL}>\n        <header>\n          <Link to=\"/\">\n            <h1>Data Clinic</h1>\n          </Link>\n        </header>\n        <div className=\"content\">\n          <GHPagesRedirect />\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/dataset/:datasetID\" exact component={DatasetPage} />\n            <Route\n              path=\"/collection/:name/:datasetIDs\"\n              exact\n              component={CollectionPage}\n            />\n\n            <ModalRoute\n              path=\"/collection/new\"\n              parentPath=\"/\"\n              component={CreateCollectionModal}\n            />\n            <Redirect from=\"/\" to=\"/\" />\n          </Switch>\n          <CollectionBar />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'normalize.css'; // Ensure consistent layout across browsers\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './contexts/OpenDataContext';\nimport { CollectionsProvider } from './contexts/CollectionsContext';\n\nReactDOM.render(\n  <StateProvider>\n    <CollectionsProvider>\n      <App />\n    </CollectionsProvider>\n  </StateProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}